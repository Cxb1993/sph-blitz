#####################################################

post-processing Porosities

#####################################################



Poiseuille
-----------

after a simulation  has been conducted and as
long as the results still are in the directory <<sph-blitz/src/outdata>>:

1. run the shell script <<prepareDirectory.sh>> in a shell placed in this
(/sph-blitz/scripts/postProcessingShockTube) directory

 This will perform the following action:
 - create a new directory <<ResultsInProgress>> in sph-blitz/results
   !!!ATTENTION!!! by running this script all data possibly already existing
   in the <<ResultsInProgress>> directory will be deleted. Therefore be sure
   to save them at a different location before!!!


2. run the c++ program <<exactResAndErrPoiseuille.cpp>> in a shell placed in this
(/sph-blitz/scripts/postProcessing) directory

 This will perform the following action:

  - program asks user for timestamp of inputfile (prtlxxxxxxxx.dat, xxxxxxxx=timestamp)
    to be post-processed.

  - program asks for the centerline position of the poiseuille channel (if neeed positions are translated
    within the prorgam so that eact solution calculation always works)
 
  - Program calculates the exact solution for the Poiseuille flow problem at every particle`s
    position x and computes error norms L_1, L_2, L_oo (like for shock tube case
    which are written in a file called <<ErrorNormsxxxxxxxx.dat >> in the <<ResultsInProgress>> folder
    
    Remark: keep in mind that the particle distribution is 2D! However as the simulation result should be identical
    in the second direction (y direction) only particles with different y values are taken into account. (The y position
    may nevertheless vary slightly due to rounding errors and other inaccuracies, in this case the particles
    are taken into account (by construction of the post processing program). This does not influence the post-processing

  - Besides program outputs exact solution for this instant (always with the same spatial resolution, which 
    shall be chosen small enough for a smooth plot) in a file <<exactxxxxxxxx.dat >> which can then be 
    used for plotting purposes.
    file structure: y, U_exact


   - Finally program creates a file <<ResultsInProgress/simuForPlotxxxxxxxxxxxx.dat>> from <<src/prtlxxxxxxxxxxxx.dat>>
     (where xxxxxxxxxxxx is the timestamp specified to the program). The <<simuForPlotxxxxxxxxxxxx.dat>> file, 
     which contains only particles of one row is then used for plotting the T-profile with gnuplot.
     (direct plotting from <<prtlxxxxxxxxxxxx.dat>> would include boundary
     particles and besides plot all particle rows, which would lead to weird lines in the plot wehn plotting with lines,
     as gnuplot attempts to connect all data points...)
     Therefore, if a T-profile is to be plotted with gnuplot, always run this program before to create the
     simuForPlotxxxxxxxxxxxx.dat-fle , even if the error calculation does not apply for this case.... 
     error calculation


Isothermal Boundary condition testing
--------------------------------------
after a simulation  has been conducted and as
long as the results still are in the directory <<sph-blitz/src/outdata>>:

1. run the shell script <<prepareDirectory.sh>> in a shell placed in this
(/sph-blitz/scripts/postProcessingShockTube) directory
  
    actions performed: see above

1.5 if necessary: run <<timeInterpolation.cpp>> if a linear interpolation in time is desired to obtain the results
    at a precise instant:
    
    actions performed:

    - user is asked to provide timestamps of two <<prtlxxxxxxxx.dat>> files (which still are in <<src/outdata>>)
    - user is asked timestamp resolution
    - unser is asked instant for interpolation (in sec)
    - program writes results in a file <<prtlxxxxxxxx.dat>> in <<src/outdata>>
    => interpolated file can be treated as a regular simulation output file for post-processing in point 2)

2. run the c++ program <<exactResAndErrThermalBC.cpp>> in a shell placed in this
(/sph-blitz/scripts/postProcessing) directory

  - program asks user for timestamp of inputfile (prtlxxxxxxxx.dat, xxxxxxxx=timestamp)
    to be post-processed.

  - program asks for the y-position of the isothermal wall (if neeed positions are translated
    within the prorgam so that eact solution calculation always works)

  - Program calculates the exact solution for the heat-conduction problem at every particle`s
    position y and computes error norms L_1, L_2, L_oo (like for shock tube case
    which are written in a file called <<ErrorNormsxxxxxxxx.dat >> in the <<ResultsInProgress>> folder
   
    Remark: keep in mind that the particle distribution is 2D! However, as the particles do not move and the domain is
    therefore perfectly identicalin the second direction, the T -values are exactly the same in the second direction
    (verified with simulation data!). An averaging in the second (x) direction is therefore not necessary and the value of one
    arbitrary row can be considered representative!
    In the program this is done as follows: when the result file containing the particle data is read,
    the y value of the first real particle is saved and all further particles' y is compared against the first particle's y.
    If they are the same, the particle is retained, otherwise it's omitted. This ensures, that exactly one row of particles 
    is read and used for the norm-calculation ( actually it would not matter for the norm calculation,
    if all particles were taken into account. But anyway...for plotting it's an advantage if only one row
    of particles is used, otherwise the plotting program would produce a mess when trying to connect particles with lines )

  - Besides program outputs exact solution for this instant (always with the same spatial resolution, which 
    shall be chosen small enough for a smooth plot) in a file <<exactxxxxxxxx.dat >> which can then be 
    used for plotting purposes.
    file structure: x, T_exact

    NOTE: the used reference solution is the analytical solution of the heat conduction equation
	  for a semi-infinite body with isothermal BC. For the present simulation configuration
	  (uniform domain at T_0 and two LinearWalls at y=0(.25) and y=1(.25) with T_w) this solution is only
	  valid as long as temperature at domaiin center has not changed yet...


   - Finally program creates a file <<ResultsInProgress/simuForPlotxxxxxxxxxxxx.dat>> from <<src/prtlxxxxxxxxxxxx.dat>>
     (where xxxxxxxxxxxx is the timestamp specified to the program). The <<simuForPlotxxxxxxxxxxxx.dat>> file, 
     which contains only particles of one row is then used for plotting the T-profile with gnuplot.
     (direct plotting from <<prtlxxxxxxxxxxxx.dat>> would include boundary
     particles and besides plot all particle rows, which would lead to weird lines in the plot when plotting with lines,
     as gnuplot attempts to connect all data points...)
     Therefore, if a T-profile is to be plotted with gnuplot, always run this program before to create the
     simuForPlotxxxxxxxxxxxx.dat-fle , even if the error calculation does not apply for this case.... 
 


