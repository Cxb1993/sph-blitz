%!PS-Adobe-2.0 EPSF-2.0
%%Title: Velocity01478999.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Dec 21 07:14:35 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Velocity01478999.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Dec 21 07:14:35 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1742 832 M
5068 0 V
stroke
LTb
1742 832 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 832 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.04)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 1319 M
5068 0 V
stroke
LTb
1742 1319 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 1319 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.03)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 1806 M
5068 0 V
stroke
LTb
1742 1806 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 1806 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.02)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 2293 M
5068 0 V
stroke
LTb
1742 2293 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 2293 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.01)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 2780 M
5068 0 V
stroke
LTb
1742 2780 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 2780 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 3267 M
5068 0 V
stroke
LTb
1742 3267 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 3267 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.01)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 3754 M
5068 0 V
stroke
LTb
1742 3754 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 3754 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.02)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 4241 M
5068 0 V
stroke
LTb
1742 4241 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 4241 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.03)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 4728 M
5068 0 V
stroke
LTb
1742 4728 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.04)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 832 M
0 3896 V
stroke
LTb
1742 832 M
0 63 V
0 3833 R
0 -63 V
stroke
1742 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2376 832 M
0 3833 V
0 63 V
stroke
LTb
2376 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2376 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.25)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3009 832 M
0 3896 V
stroke
LTb
3009 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3009 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.5)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3643 832 M
0 3896 V
stroke
LTb
3643 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3643 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.75)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4276 832 M
0 3896 V
stroke
LTb
4276 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4276 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4910 832 M
0 3896 V
stroke
LTb
4910 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4910 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1.25)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5543 832 M
0 3896 V
stroke
LTb
5543 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5543 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1.5)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6177 832 M
0 3896 V
stroke
LTb
6177 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6177 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1.75)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6810 832 M
0 3896 V
stroke
LTb
6810 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6810 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 2)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1742 4728 N
0 -3896 V
5068 0 V
0 3896 V
-5068 0 V
Z stroke
LCb setrgbcolor
520 2780 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (Velocity u)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
4276 182 M
[ [(Helvetica) 260.0 0.0 true true 0 (Position x)]
] -86.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
8.000 UL
LT0
6797 2780 Pls
6772 2780 Pls
6747 2780 Pls
6721 2780 Pls
6696 2780 Pls
6671 2780 Pls
6645 2780 Pls
6620 2780 Pls
6595 2780 Pls
6569 2780 Pls
6544 2780 Pls
6519 2780 Pls
6493 2780 Pls
6468 2780 Pls
6443 2781 Pls
6417 2781 Pls
6392 2782 Pls
6367 2784 Pls
6341 2786 Pls
6316 2790 Pls
6291 2796 Pls
6265 2805 Pls
6240 2818 Pls
6215 2837 Pls
6189 2864 Pls
6164 2901 Pls
6139 2948 Pls
6113 3009 Pls
6088 3083 Pls
6063 3170 Pls
6038 3266 Pls
6013 3367 Pls
5988 3464 Pls
5963 3550 Pls
5938 3615 Pls
5913 3653 Pls
5888 3661 Pls
5863 3639 Pls
5838 3595 Pls
5813 3536 Pls
5788 3472 Pls
5763 3410 Pls
5738 3353 Pls
5713 3299 Pls
5687 3243 Pls
5662 3179 Pls
5637 3104 Pls
5612 3015 Pls
5587 2918 Pls
5561 2819 Pls
5536 2726 Pls
5511 2642 Pls
5485 2568 Pls
5460 2499 Pls
5434 2430 Pls
5409 2358 Pls
5383 2282 Pls
5358 2209 Pls
5332 2143 Pls
5306 2092 Pls
5281 2057 Pls
5255 2033 Pls
5229 2016 Pls
5204 2004 Pls
5178 1997 Pls
5152 2002 Pls
5127 2024 Pls
5101 2067 Pls
5075 2126 Pls
5050 2197 Pls
5024 2272 Pls
4999 2350 Pls
4973 2434 Pls
4948 2525 Pls
4922 2619 Pls
4897 2707 Pls
4872 2777 Pls
4846 2824 Pls
4821 2848 Pls
4796 2855 Pls
4770 2850 Pls
4745 2834 Pls
4720 2806 Pls
4694 2774 Pls
4669 2747 Pls
4644 2737 Pls
4618 2746 Pls
4593 2766 Pls
4568 2786 Pls
4542 2798 Pls
4517 2800 Pls
4492 2796 Pls
4466 2788 Pls
4441 2776 Pls
4416 2765 Pls
4390 2761 Pls
4365 2770 Pls
4339 2785 Pls
4314 2797 Pls
4289 2795 Pls
4263 2781 Pls
4238 2769 Pls
4213 2767 Pls
4187 2776 Pls
4162 2785 Pls
4137 2788 Pls
4111 2785 Pls
4086 2780 Pls
4061 2776 Pls
4035 2774 Pls
4010 2776 Pls
3985 2782 Pls
3959 2787 Pls
3934 2786 Pls
3909 2778 Pls
3883 2771 Pls
3858 2775 Pls
3833 2785 Pls
3807 2789 Pls
3782 2782 Pls
3757 2773 Pls
3731 2773 Pls
3706 2782 Pls
3681 2787 Pls
3655 2783 Pls
3630 2776 Pls
3605 2775 Pls
3579 2781 Pls
3554 2784 Pls
3529 2782 Pls
3503 2778 Pls
3478 2778 Pls
3453 2780 Pls
3427 2781 Pls
3402 2782 Pls
3377 2780 Pls
3351 2778 Pls
3326 2778 Pls
3301 2781 Pls
3275 2783 Pls
3250 2781 Pls
3225 2777 Pls
3199 2778 Pls
3174 2783 Pls
3149 2783 Pls
3123 2778 Pls
3098 2776 Pls
3072 2782 Pls
3047 2784 Pls
3022 2780 Pls
2996 2775 Pls
2971 2780 Pls
2946 2785 Pls
2920 2780 Pls
2895 2776 Pls
2870 2779 Pls
2844 2784 Pls
2819 2782 Pls
2794 2776 Pls
2768 2778 Pls
2743 2784 Pls
2718 2781 Pls
2692 2776 Pls
2667 2780 Pls
2642 2781 Pls
2616 2782 Pls
2591 2777 Pls
2566 2777 Pls
2540 2786 Pls
2515 2777 Pls
2490 2779 Pls
2464 2781 Pls
2439 2780 Pls
2414 2782 Pls
2388 2777 Pls
2363 2780 Pls
2338 2783 Pls
2312 2779 Pls
2287 2777 Pls
2262 2784 Pls
2236 2779 Pls
2211 2778 Pls
2186 2781 Pls
2160 2780 Pls
2135 2779 Pls
2110 2780 Pls
2084 2779 Pls
2059 2781 Pls
2034 2781 Pls
2008 2777 Pls
1983 2782 Pls
1958 2781 Pls
1932 2778 Pls
1907 2780 Pls
1882 2784 Pls
1856 2777 Pls
1831 2779 Pls
1805 2783 Pls
1780 2780 Pls
1755 2776 Pls
1.000 UL
LTb
1742 4728 N
0 -3896 V
5068 0 V
0 3896 V
-5068 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
