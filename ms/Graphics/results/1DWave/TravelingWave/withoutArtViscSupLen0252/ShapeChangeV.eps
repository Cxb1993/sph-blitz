%!PS-Adobe-2.0 EPSF-2.0
%%Title: ShapeChangeV.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Dec 21 07:11:59 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ShapeChangeV.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Dec 21 07:11:59 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1898 832 M
4912 0 V
stroke
LTb
1898 832 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 832 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.008)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 1319 M
4912 0 V
stroke
LTb
1898 1319 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 1319 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.006)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 1806 M
4912 0 V
stroke
LTb
1898 1806 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 1806 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.004)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 2293 M
4912 0 V
stroke
LTb
1898 2293 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 2293 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.002)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 2780 M
4912 0 V
stroke
LTb
1898 2780 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 2780 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 3267 M
4912 0 V
stroke
LTb
1898 3267 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 3267 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.002)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 3754 M
4912 0 V
stroke
LTb
1898 3754 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 3754 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.004)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 4241 M
156 0 V
2247 0 R
2509 0 V
stroke
LTb
1898 4241 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 4241 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.006)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 4728 M
4912 0 V
stroke
LTb
1898 4728 M
63 0 V
4849 0 R
-63 0 V
stroke
1742 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.008)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1898 832 M
0 3896 V
stroke
LTb
1898 832 M
0 63 V
0 3833 R
0 -63 V
stroke
1898 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2389 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
2389 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2389 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2880 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
2880 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2880 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.2)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3372 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
3372 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3372 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.3)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3863 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
3863 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3863 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.4)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4354 832 M
0 3896 V
stroke
LTb
4354 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4354 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.5)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4845 832 M
0 3896 V
stroke
LTb
4845 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4845 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.6)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5336 832 M
0 3896 V
stroke
LTb
5336 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5336 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.7)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5828 832 M
0 3896 V
stroke
LTb
5828 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5828 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.8)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6319 832 M
0 3896 V
stroke
LTb
6319 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6319 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.9)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6810 832 M
0 3896 V
stroke
LTb
6810 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6810 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1898 4728 N
0 -3896 V
4912 0 V
0 3896 V
-4912 0 V
Z stroke
LCb setrgbcolor
520 2780 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (Velocity u)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
4354 182 M
[ [(Helvetica) 260.0 0.0 true true 0 (Position x)]
] -86.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
8.000 UL
LT0
LTb
3302 4535 M
[ [(Helvetica) 260.0 0.0 true true 0 (at t=0)]
] -86.7 MRshow
LT0
6781 2732 Pls
6732 2828 Pls
6683 2924 Pls
6634 3019 Pls
6585 3114 Pls
6536 3207 Pls
6487 3298 Pls
6438 3388 Pls
6389 3475 Pls
6340 3559 Pls
6291 3640 Pls
6242 3718 Pls
6193 3792 Pls
6144 3862 Pls
6095 3928 Pls
6046 3989 Pls
5997 4045 Pls
5949 4097 Pls
5900 4143 Pls
5851 4184 Pls
5802 4220 Pls
5753 4249 Pls
5704 4273 Pls
5655 4291 Pls
5606 4303 Pls
5558 4309 Pls
5509 4309 Pls
5460 4303 Pls
5411 4291 Pls
5362 4273 Pls
5313 4249 Pls
5264 4220 Pls
5215 4184 Pls
5167 4143 Pls
5118 4097 Pls
5069 4045 Pls
5020 3989 Pls
4971 3928 Pls
4922 3862 Pls
4873 3792 Pls
4824 3718 Pls
4775 3640 Pls
4726 3559 Pls
4677 3475 Pls
4628 3388 Pls
4579 3298 Pls
4530 3207 Pls
4481 3114 Pls
4432 3019 Pls
4383 2924 Pls
4334 2828 Pls
4284 2732 Pls
4235 2636 Pls
4186 2541 Pls
4137 2446 Pls
4088 2353 Pls
4039 2262 Pls
3989 2172 Pls
3940 2085 Pls
3891 2001 Pls
3842 1920 Pls
3792 1842 Pls
3743 1768 Pls
3694 1698 Pls
3644 1632 Pls
3595 1571 Pls
3546 1515 Pls
3496 1463 Pls
3447 1417 Pls
3398 1376 Pls
3348 1340 Pls
3299 1311 Pls
3249 1287 Pls
3200 1269 Pls
3151 1257 Pls
3101 1251 Pls
3052 1251 Pls
3003 1257 Pls
2953 1269 Pls
2904 1287 Pls
2854 1311 Pls
2805 1340 Pls
2756 1376 Pls
2706 1417 Pls
2657 1463 Pls
2608 1515 Pls
2558 1571 Pls
2509 1632 Pls
2460 1698 Pls
2410 1768 Pls
2361 1842 Pls
2312 1920 Pls
2263 2001 Pls
2213 2085 Pls
2164 2172 Pls
2115 2262 Pls
2066 2353 Pls
2017 2446 Pls
1968 2541 Pls
1918 2636 Pls
3801 4535 Pls
1.000 UP
8.000 UL
LT1
LTb
3302 4275 M
[ [(Helvetica) 260.0 0.0 true true 0 (at t=10T)]
] -86.7 MRshow
LT1
6781 2686 Crs
6732 2799 Crs
6683 2912 Crs
6634 3023 Crs
6585 3134 Crs
6536 3242 Crs
6487 3348 Crs
6438 3450 Crs
6389 3549 Crs
6340 3642 Crs
6291 3731 Crs
6242 3815 Crs
6193 3892 Crs
6144 3964 Crs
6095 4029 Crs
6046 4088 Crs
5997 4139 Crs
5949 4185 Crs
5900 4223 Crs
5851 4255 Crs
5802 4280 Crs
5753 4299 Crs
5704 4311 Crs
5655 4317 Crs
5607 4316 Crs
5558 4309 Crs
5509 4297 Crs
5460 4279 Crs
5411 4256 Crs
5362 4227 Crs
5313 4193 Crs
5264 4155 Crs
5216 4112 Crs
5167 4064 Crs
5118 4013 Crs
5069 3958 Crs
5020 3899 Crs
4971 3837 Crs
4922 3772 Crs
4873 3704 Crs
4824 3634 Crs
4775 3561 Crs
4726 3486 Crs
4677 3409 Crs
4628 3330 Crs
4579 3250 Crs
4530 3169 Crs
4481 3087 Crs
4432 3004 Crs
4383 2920 Crs
4333 2837 Crs
4284 2753 Crs
4235 2669 Crs
4186 2586 Crs
4137 2503 Crs
4088 2421 Crs
4038 2340 Crs
3989 2261 Crs
3940 2182 Crs
3891 2106 Crs
3841 2031 Crs
3792 1958 Crs
3743 1888 Crs
3694 1820 Crs
3644 1755 Crs
3595 1693 Crs
3546 1634 Crs
3496 1579 Crs
3447 1527 Crs
3398 1479 Crs
3348 1435 Crs
3299 1396 Crs
3250 1361 Crs
3200 1330 Crs
3151 1305 Crs
3102 1285 Crs
3052 1270 Crs
3003 1261 Crs
2953 1257 Crs
2904 1260 Crs
2855 1268 Crs
2805 1283 Crs
2756 1304 Crs
2707 1331 Crs
2657 1365 Crs
2608 1405 Crs
2558 1452 Crs
2509 1506 Crs
2460 1566 Crs
2411 1632 Crs
2361 1704 Crs
2312 1783 Crs
2263 1866 Crs
2213 1955 Crs
2164 2049 Crs
2115 2148 Crs
2066 2250 Crs
2017 2356 Crs
1967 2464 Crs
1918 2574 Crs
3801 4275 Crs
1.000 UL
LTb
1898 4728 N
0 -3896 V
4912 0 V
0 3896 V
-4912 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
