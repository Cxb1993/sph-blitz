%!PS-Adobe-2.0 EPSF-2.0
%%Title: ShapeChangeV.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 11 06:41:02 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ShapeChangeV.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 11 06:41:02 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1742 832 M
5068 0 V
stroke
LTb
1742 832 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 832 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.06)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 1481 M
5068 0 V
stroke
LTb
1742 1481 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 1481 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.04)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 2131 M
5068 0 V
stroke
LTb
1742 2131 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 2131 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.02)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 2780 M
5068 0 V
stroke
LTb
1742 2780 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 2780 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 3429 M
5068 0 V
stroke
LTb
1742 3429 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 3429 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.02)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 4079 M
5068 0 V
stroke
LTb
1742 4079 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 4079 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.04)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 4728 M
5068 0 V
stroke
LTb
1742 4728 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.06)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 832 M
0 3896 V
stroke
LTb
1742 832 M
0 63 V
0 3833 R
0 -63 V
stroke
1742 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2249 832 M
0 3896 V
stroke
LTb
2249 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2249 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2756 832 M
0 3896 V
stroke
LTb
2756 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2756 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.2)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3262 832 M
0 3896 V
stroke
LTb
3262 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3262 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.3)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3769 832 M
0 3896 V
stroke
LTb
3769 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3769 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.4)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4276 832 M
0 3896 V
stroke
LTb
4276 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4276 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.5)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4783 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
4783 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4783 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.6)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5290 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
5290 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5290 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.7)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5796 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
5796 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5796 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.8)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6303 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
6303 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6303 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.9)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6810 832 M
0 3896 V
stroke
LTb
6810 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6810 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1742 4728 N
0 -3896 V
5068 0 V
0 3896 V
-5068 0 V
Z stroke
LCb setrgbcolor
520 2780 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (Velocity u)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
4276 182 M
[ [(Helvetica) 260.0 0.0 true true 0 (x position)]
] -86.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
8.000 UL
LT0
LTb
5655 4535 M
[ [(Helvetica) 260.0 0.0 true true 0 (at t=0)]
] -86.7 MRshow
LT0
6785 2840 Pls
6734 2720 Pls
6683 2599 Pls
6633 2480 Pls
6582 2361 Pls
6531 2244 Pls
6481 2129 Pls
6430 2017 Pls
6379 1908 Pls
6329 1802 Pls
6278 1700 Pls
6227 1603 Pls
6177 1510 Pls
6126 1422 Pls
6075 1339 Pls
6024 1262 Pls
5974 1191 Pls
5923 1127 Pls
5872 1069 Pls
5822 1017 Pls
5771 973 Pls
5720 936 Pls
5670 906 Pls
5619 883 Pls
5568 868 Pls
5518 860 Pls
5467 860 Pls
5416 868 Pls
5366 883 Pls
5315 906 Pls
5264 936 Pls
5214 973 Pls
5163 1017 Pls
5112 1069 Pls
5062 1127 Pls
5011 1191 Pls
4960 1262 Pls
4910 1339 Pls
4859 1422 Pls
4808 1510 Pls
4757 1603 Pls
4707 1700 Pls
4656 1802 Pls
4605 1908 Pls
4555 2017 Pls
4504 2129 Pls
4453 2244 Pls
4403 2361 Pls
4352 2480 Pls
4301 2599 Pls
4251 2720 Pls
4200 2840 Pls
4149 2961 Pls
4099 3080 Pls
4048 3199 Pls
3997 3316 Pls
3947 3431 Pls
3896 3543 Pls
3845 3652 Pls
3795 3758 Pls
3744 3860 Pls
3693 3957 Pls
3643 4050 Pls
3592 4138 Pls
3541 4221 Pls
3490 4298 Pls
3440 4369 Pls
3389 4433 Pls
3338 4491 Pls
3288 4543 Pls
3237 4587 Pls
3186 4624 Pls
3136 4654 Pls
3085 4677 Pls
3034 4692 Pls
2984 4700 Pls
2933 4700 Pls
2882 4692 Pls
2832 4677 Pls
2781 4654 Pls
2730 4624 Pls
2680 4587 Pls
2629 4543 Pls
2578 4491 Pls
2528 4433 Pls
2477 4369 Pls
2426 4298 Pls
2376 4221 Pls
2325 4138 Pls
2274 4050 Pls
2223 3957 Pls
2173 3860 Pls
2122 3758 Pls
2071 3652 Pls
2021 3543 Pls
1970 3431 Pls
1919 3316 Pls
1869 3199 Pls
1818 3080 Pls
1767 2961 Pls
6683 2599 Pls
6734 2720 Pls
6785 2840 Pls
6531 2244 Pls
6582 2361 Pls
6633 2480 Pls
6379 1908 Pls
6430 2017 Pls
6481 2129 Pls
6177 1510 Pls
6227 1603 Pls
6278 1700 Pls
6329 1802 Pls
6024 1262 Pls
6075 1339 Pls
6126 1422 Pls
5872 1069 Pls
5923 1127 Pls
5974 1191 Pls
5720 936 Pls
5771 973 Pls
5822 1017 Pls
5568 868 Pls
5619 883 Pls
5670 906 Pls
5416 868 Pls
5467 860 Pls
5518 860 Pls
5264 936 Pls
5315 906 Pls
5366 883 Pls
5112 1069 Pls
5163 1017 Pls
5214 973 Pls
4910 1339 Pls
4960 1262 Pls
5011 1191 Pls
5062 1127 Pls
4757 1603 Pls
4808 1510 Pls
4859 1422 Pls
4605 1908 Pls
4656 1802 Pls
4707 1700 Pls
4453 2244 Pls
4504 2129 Pls
4555 2017 Pls
4301 2599 Pls
4352 2480 Pls
4403 2361 Pls
4149 2961 Pls
4200 2840 Pls
4251 2720 Pls
3997 3316 Pls
4048 3199 Pls
4099 3080 Pls
3845 3652 Pls
3896 3543 Pls
3947 3431 Pls
3643 4050 Pls
3693 3957 Pls
3744 3860 Pls
3795 3758 Pls
3490 4298 Pls
3541 4221 Pls
3592 4138 Pls
3338 4491 Pls
3389 4433 Pls
3440 4369 Pls
3186 4624 Pls
3237 4587 Pls
3288 4543 Pls
3034 4692 Pls
3085 4677 Pls
3136 4654 Pls
2882 4692 Pls
2933 4700 Pls
2984 4700 Pls
2730 4624 Pls
2781 4654 Pls
2832 4677 Pls
2578 4491 Pls
2629 4543 Pls
2680 4587 Pls
2376 4221 Pls
2426 4298 Pls
2477 4369 Pls
2528 4433 Pls
2223 3957 Pls
2274 4050 Pls
2325 4138 Pls
2071 3652 Pls
2122 3758 Pls
2173 3860 Pls
1919 3316 Pls
1970 3431 Pls
2021 3543 Pls
1767 2961 Pls
1818 3080 Pls
1869 3199 Pls
6683 2599 Pls
6734 2720 Pls
6785 2840 Pls
6531 2244 Pls
6582 2361 Pls
6633 2480 Pls
6379 1908 Pls
6430 2017 Pls
6481 2129 Pls
6177 1510 Pls
6227 1603 Pls
6278 1700 Pls
6329 1802 Pls
6024 1262 Pls
6075 1339 Pls
6126 1422 Pls
5872 1069 Pls
5923 1127 Pls
5974 1191 Pls
5720 936 Pls
5771 973 Pls
5822 1017 Pls
5568 868 Pls
5619 883 Pls
5670 906 Pls
5416 868 Pls
5467 860 Pls
5518 860 Pls
5264 936 Pls
5315 906 Pls
5366 883 Pls
5112 1069 Pls
5163 1017 Pls
5214 973 Pls
4910 1339 Pls
4960 1262 Pls
5011 1191 Pls
5062 1127 Pls
4757 1603 Pls
4808 1510 Pls
4859 1422 Pls
4605 1908 Pls
4656 1802 Pls
4707 1700 Pls
4453 2244 Pls
4504 2129 Pls
4555 2017 Pls
4301 2599 Pls
4352 2480 Pls
4403 2361 Pls
4149 2961 Pls
4200 2840 Pls
4251 2720 Pls
3997 3316 Pls
4048 3199 Pls
4099 3080 Pls
3845 3652 Pls
3896 3543 Pls
3947 3431 Pls
3643 4050 Pls
3693 3957 Pls
3744 3860 Pls
3795 3758 Pls
3490 4298 Pls
3541 4221 Pls
3592 4138 Pls
3338 4491 Pls
3389 4433 Pls
3440 4369 Pls
3186 4624 Pls
3237 4587 Pls
3288 4543 Pls
3034 4692 Pls
3085 4677 Pls
3136 4654 Pls
2882 4692 Pls
2933 4700 Pls
2984 4700 Pls
2730 4624 Pls
2781 4654 Pls
2832 4677 Pls
2578 4491 Pls
2629 4543 Pls
2680 4587 Pls
2376 4221 Pls
2426 4298 Pls
2477 4369 Pls
2528 4433 Pls
2223 3957 Pls
2274 4050 Pls
2325 4138 Pls
2071 3652 Pls
2122 3758 Pls
2173 3860 Pls
1919 3316 Pls
1970 3431 Pls
2021 3543 Pls
1767 2961 Pls
1818 3080 Pls
1869 3199 Pls
6154 4535 Pls
1.000 UP
8.000 UL
LT1
LTb
5655 4275 M
[ [(Helvetica) 260.0 0.0 true true 0 (at t=10T)]
] -86.7 MRshow
LT1
6785 2798 Crs
6734 2762 Crs
6683 2727 Crs
6633 2691 Crs
6582 2656 Crs
6531 2621 Crs
6481 2587 Crs
6430 2553 Crs
6379 2520 Crs
6329 2488 Crs
6278 2457 Crs
6227 2426 Crs
6177 2397 Crs
6126 2369 Crs
6075 2342 Crs
6025 2317 Crs
5974 2293 Crs
5923 2271 Crs
5873 2251 Crs
5822 2232 Crs
5771 2216 Crs
5721 2201 Crs
5670 2188 Crs
5619 2178 Crs
5569 2170 Crs
5518 2164 Crs
5467 2160 Crs
5417 2159 Crs
5366 2161 Crs
5315 2164 Crs
5265 2171 Crs
5214 2180 Crs
5163 2191 Crs
5113 2205 Crs
5062 2222 Crs
5011 2241 Crs
4961 2263 Crs
4910 2287 Crs
4859 2313 Crs
4809 2341 Crs
4758 2372 Crs
4707 2404 Crs
4656 2438 Crs
4606 2474 Crs
4555 2512 Crs
4504 2551 Crs
4454 2591 Crs
4403 2632 Crs
4352 2674 Crs
4301 2716 Crs
4251 2759 Crs
4200 2801 Crs
4149 2844 Crs
4099 2886 Crs
4048 2928 Crs
3997 2969 Crs
3946 3009 Crs
3896 3048 Crs
3845 3086 Crs
3794 3122 Crs
3744 3156 Crs
3693 3188 Crs
3642 3219 Crs
3591 3247 Crs
3541 3273 Crs
3490 3297 Crs
3439 3319 Crs
3389 3338 Crs
3338 3355 Crs
3287 3369 Crs
3237 3380 Crs
3186 3389 Crs
3135 3396 Crs
3085 3399 Crs
3034 3401 Crs
2983 3400 Crs
2932 3396 Crs
2882 3390 Crs
2831 3382 Crs
2781 3372 Crs
2730 3359 Crs
2679 3344 Crs
2629 3328 Crs
2578 3309 Crs
2527 3289 Crs
2477 3267 Crs
2426 3243 Crs
2375 3218 Crs
2325 3191 Crs
2274 3163 Crs
2223 3134 Crs
2173 3103 Crs
2122 3072 Crs
2071 3040 Crs
2021 3007 Crs
1970 2973 Crs
1919 2939 Crs
1869 2904 Crs
1818 2869 Crs
1767 2833 Crs
6683 2727 Crs
6734 2762 Crs
6785 2798 Crs
6531 2621 Crs
6582 2656 Crs
6633 2691 Crs
6379 2520 Crs
6430 2553 Crs
6481 2587 Crs
6227 2426 Crs
6278 2457 Crs
6177 2397 Crs
6329 2488 Crs
6075 2342 Crs
6126 2369 Crs
6025 2317 Crs
5923 2271 Crs
5974 2293 Crs
5873 2251 Crs
5772 2216 Crs
5822 2232 Crs
5721 2201 Crs
5620 2178 Crs
5670 2188 Crs
5569 2170 Crs
5468 2160 Crs
5417 2159 Crs
5518 2164 Crs
5265 2171 Crs
5315 2164 Crs
5366 2161 Crs
5113 2205 Crs
5163 2191 Crs
5214 2180 Crs
4961 2263 Crs
5011 2241 Crs
4910 2287 Crs
5062 2222 Crs
4809 2341 Crs
4859 2313 Crs
4758 2372 Crs
4656 2438 Crs
4707 2404 Crs
4606 2474 Crs
4454 2591 Crs
4504 2551 Crs
4555 2512 Crs
4301 2716 Crs
4352 2674 Crs
4403 2632 Crs
4149 2844 Crs
4200 2801 Crs
4251 2759 Crs
3997 2969 Crs
4048 2928 Crs
4099 2886 Crs
3845 3086 Crs
3896 3048 Crs
3946 3009 Crs
3693 3188 Crs
3743 3156 Crs
3794 3122 Crs
3541 3273 Crs
3591 3247 Crs
3642 3219 Crs
3490 3297 Crs
3389 3338 Crs
3439 3319 Crs
3338 3355 Crs
3237 3380 Crs
3287 3369 Crs
3186 3389 Crs
3084 3399 Crs
3135 3396 Crs
3034 3401 Crs
2932 3396 Crs
2882 3390 Crs
2983 3400 Crs
2730 3359 Crs
2780 3372 Crs
2831 3382 Crs
2578 3309 Crs
2628 3328 Crs
2679 3344 Crs
2426 3243 Crs
2477 3267 Crs
2527 3289 Crs
2274 3163 Crs
2325 3191 Crs
2375 3218 Crs
2223 3134 Crs
2122 3072 Crs
2173 3103 Crs
2071 3040 Crs
1919 2939 Crs
1970 2973 Crs
2021 3007 Crs
1767 2833 Crs
1818 2869 Crs
1869 2904 Crs
6683 2727 Crs
6734 2762 Crs
6785 2798 Crs
6531 2621 Crs
6582 2656 Crs
6633 2691 Crs
6379 2520 Crs
6430 2553 Crs
6481 2587 Crs
6227 2426 Crs
6278 2457 Crs
6177 2397 Crs
6329 2488 Crs
6075 2342 Crs
6126 2369 Crs
6025 2317 Crs
5923 2271 Crs
5974 2293 Crs
5873 2251 Crs
5772 2216 Crs
5822 2232 Crs
5721 2201 Crs
5620 2178 Crs
5670 2188 Crs
5569 2170 Crs
5468 2160 Crs
5417 2159 Crs
5518 2164 Crs
5265 2171 Crs
5315 2164 Crs
5366 2161 Crs
5113 2205 Crs
5163 2191 Crs
5214 2180 Crs
4961 2263 Crs
5011 2241 Crs
4910 2287 Crs
5062 2222 Crs
4809 2341 Crs
4859 2313 Crs
4758 2372 Crs
4656 2438 Crs
4707 2404 Crs
4606 2474 Crs
4454 2591 Crs
4504 2551 Crs
4555 2512 Crs
4301 2716 Crs
4352 2674 Crs
4403 2632 Crs
4149 2844 Crs
4200 2801 Crs
4251 2759 Crs
3997 2969 Crs
4048 2928 Crs
4099 2886 Crs
3845 3086 Crs
3896 3048 Crs
3946 3009 Crs
3693 3188 Crs
3743 3156 Crs
3794 3122 Crs
3541 3273 Crs
3591 3247 Crs
3642 3219 Crs
3490 3297 Crs
3389 3338 Crs
3439 3319 Crs
3338 3355 Crs
3237 3380 Crs
3287 3369 Crs
3186 3389 Crs
3084 3399 Crs
3135 3396 Crs
3034 3401 Crs
2932 3396 Crs
2882 3390 Crs
2983 3400 Crs
2730 3359 Crs
2780 3372 Crs
2831 3382 Crs
2578 3309 Crs
2628 3328 Crs
2679 3344 Crs
2426 3243 Crs
2477 3267 Crs
2527 3289 Crs
2274 3163 Crs
2325 3191 Crs
2375 3218 Crs
2223 3134 Crs
2122 3072 Crs
2173 3103 Crs
2071 3040 Crs
1919 2939 Crs
1970 2973 Crs
2021 3007 Crs
1767 2833 Crs
1818 2869 Crs
1869 2904 Crs
6154 4275 Crs
1.000 UL
LTb
1742 4728 N
0 -3896 V
5068 0 V
0 3896 V
-5068 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
