%!PS-Adobe-2.0 EPSF-2.0
%%Title: ShapeChangeV.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 11 07:29:17 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ShapeChangeV.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 11 07:29:17 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1742 832 M
5068 0 V
stroke
LTb
1742 832 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 832 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.08)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 1319 M
5068 0 V
stroke
LTb
1742 1319 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 1319 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.06)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 1806 M
5068 0 V
stroke
LTb
1742 1806 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 1806 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.04)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 2293 M
5068 0 V
stroke
LTb
1742 2293 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 2293 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.02)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 2780 M
5068 0 V
stroke
LTb
1742 2780 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 2780 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 3267 M
5068 0 V
stroke
LTb
1742 3267 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 3267 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.02)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 3754 M
5068 0 V
stroke
LTb
1742 3754 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 3754 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.04)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 4241 M
2665 0 V
2247 0 R
156 0 V
stroke
LTb
1742 4241 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 4241 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.06)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 4728 M
5068 0 V
stroke
LTb
1742 4728 M
63 0 V
5005 0 R
-63 0 V
stroke
1586 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.08)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1742 832 M
0 3896 V
stroke
LTb
1742 832 M
0 63 V
0 3833 R
0 -63 V
stroke
1742 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2249 832 M
0 3896 V
stroke
LTb
2249 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2249 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2756 832 M
0 3896 V
stroke
LTb
2756 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2756 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.2)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3262 832 M
0 3896 V
stroke
LTb
3262 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3262 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.3)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3769 832 M
0 3896 V
stroke
LTb
3769 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3769 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.4)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4276 832 M
0 3896 V
stroke
LTb
4276 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4276 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.5)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4783 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
4783 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4783 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.6)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5290 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
5290 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5290 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.7)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5796 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
5796 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5796 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.8)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6303 832 M
0 3313 V
0 520 R
0 63 V
stroke
LTb
6303 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6303 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.9)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6810 832 M
0 3896 V
stroke
LTb
6810 832 M
0 63 V
0 3833 R
0 -63 V
stroke
6810 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1742 4728 N
0 -3896 V
5068 0 V
0 3896 V
-5068 0 V
Z stroke
LCb setrgbcolor
520 2780 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (Velocity u)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
4276 182 M
[ [(Helvetica) 260.0 0.0 true true 0 (x position)]
] -86.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
8.000 UL
LT0
LTb
5655 4535 M
[ [(Helvetica) 260.0 0.0 true true 0 (at t=0)]
] -86.7 MRshow
LT0
6785 2825 Pls
6734 2735 Pls
6683 2644 Pls
6633 2555 Pls
6582 2466 Pls
6531 2378 Pls
6481 2292 Pls
6430 2208 Pls
6379 2126 Pls
6329 2047 Pls
6278 1970 Pls
6227 1897 Pls
6177 1827 Pls
6126 1761 Pls
6075 1699 Pls
6024 1642 Pls
5974 1589 Pls
5923 1540 Pls
5872 1496 Pls
5822 1458 Pls
5771 1425 Pls
5720 1397 Pls
5670 1374 Pls
5619 1357 Pls
5568 1346 Pls
5518 1340 Pls
5467 1340 Pls
5416 1346 Pls
5366 1357 Pls
5315 1374 Pls
5264 1397 Pls
5214 1425 Pls
5163 1458 Pls
5112 1496 Pls
5062 1540 Pls
5011 1589 Pls
4960 1642 Pls
4910 1699 Pls
4859 1761 Pls
4808 1827 Pls
4757 1897 Pls
4707 1970 Pls
4656 2047 Pls
4605 2126 Pls
4555 2208 Pls
4504 2292 Pls
4453 2378 Pls
4403 2466 Pls
4352 2555 Pls
4301 2644 Pls
4251 2735 Pls
4200 2825 Pls
4149 2916 Pls
4099 3005 Pls
4048 3094 Pls
3997 3182 Pls
3947 3268 Pls
3896 3352 Pls
3845 3434 Pls
3795 3513 Pls
3744 3590 Pls
3693 3663 Pls
3643 3733 Pls
3592 3799 Pls
3541 3861 Pls
3490 3918 Pls
3440 3971 Pls
3389 4020 Pls
3338 4064 Pls
3288 4102 Pls
3237 4135 Pls
3186 4163 Pls
3136 4186 Pls
3085 4203 Pls
3034 4214 Pls
2984 4220 Pls
2933 4220 Pls
2882 4214 Pls
2832 4203 Pls
2781 4186 Pls
2730 4163 Pls
2680 4135 Pls
2629 4102 Pls
2578 4064 Pls
2528 4020 Pls
2477 3971 Pls
2426 3918 Pls
2376 3861 Pls
2325 3799 Pls
2274 3733 Pls
2223 3663 Pls
2173 3590 Pls
2122 3513 Pls
2071 3434 Pls
2021 3352 Pls
1970 3268 Pls
1919 3182 Pls
1869 3094 Pls
1818 3005 Pls
1767 2916 Pls
6154 4535 Pls
1.000 UP
8.000 UL
LT1
LTb
5655 4275 M
[ [(Helvetica) 260.0 0.0 true true 0 (at t=10T)]
] -86.7 MRshow
LT1
6785 2807 Crs
6734 2753 Crs
6683 2700 Crs
6633 2647 Crs
6582 2594 Crs
6532 2541 Crs
6481 2489 Crs
6430 2437 Crs
6380 2385 Crs
6329 2333 Crs
6278 2282 Crs
6228 2231 Crs
6177 2180 Crs
6127 2130 Crs
6076 2080 Crs
6025 2031 Crs
5975 1983 Crs
5924 1937 Crs
5874 1891 Crs
5823 1847 Crs
5772 1804 Crs
5722 1761 Crs
5671 1719 Crs
5621 1677 Crs
5570 1636 Crs
5519 1596 Crs
5469 1557 Crs
5418 1522 Crs
5368 1491 Crs
5317 1464 Crs
5267 1442 Crs
5216 1424 Crs
5165 1410 Crs
5115 1397 Crs
5064 1384 Crs
5013 1369 Crs
4963 1353 Crs
4912 1336 Crs
4862 1321 Crs
4811 1314 Crs
4760 1321 Crs
4710 1348 Crs
4659 1400 Crs
4609 1482 Crs
4558 1594 Crs
4507 1733 Crs
4456 1896 Crs
4405 2077 Crs
4354 2271 Crs
4302 2472 Crs
4251 2677 Crs
4200 2883 Crs
4148 3088 Crs
4097 3289 Crs
4046 3483 Crs
3995 3664 Crs
3944 3827 Crs
3893 3966 Crs
3842 4078 Crs
3791 4160 Crs
3741 4212 Crs
3690 4239 Crs
3640 4246 Crs
3589 4239 Crs
3539 4224 Crs
3488 4207 Crs
3437 4191 Crs
3387 4176 Crs
3336 4163 Crs
3285 4150 Crs
3235 4136 Crs
3184 4118 Crs
3134 4096 Crs
3083 4069 Crs
3032 4038 Crs
2982 4003 Crs
2931 3964 Crs
2881 3924 Crs
2830 3883 Crs
2779 3841 Crs
2729 3799 Crs
2678 3756 Crs
2628 3713 Crs
2577 3669 Crs
2527 3623 Crs
2476 3577 Crs
2425 3529 Crs
2375 3480 Crs
2324 3430 Crs
2273 3380 Crs
2223 3329 Crs
2172 3278 Crs
2122 3227 Crs
2071 3175 Crs
2020 3123 Crs
1970 3071 Crs
1919 3019 Crs
1869 2966 Crs
1818 2913 Crs
1767 2860 Crs
6154 4275 Crs
1.000 UL
LTb
1742 4728 N
0 -3896 V
5068 0 V
0 3896 V
-5068 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
