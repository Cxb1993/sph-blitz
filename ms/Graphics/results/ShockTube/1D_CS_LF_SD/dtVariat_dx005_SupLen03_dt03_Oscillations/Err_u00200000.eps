%!PS-Adobe-2.0 EPSF-2.0
%%Title: Err_u00200000.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Oct 26 00:14:57 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Err_u00200000.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Oct 26 00:14:57 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1586 832 M
4028 0 V
stroke
LTb
1586 832 M
63 0 V
3965 0 R
-63 0 V
stroke
1430 832 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1586 1540 M
4028 0 V
stroke
LTb
1586 1540 M
63 0 V
3965 0 R
-63 0 V
stroke
1430 1540 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.2)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1586 2249 M
4028 0 V
stroke
LTb
1586 2249 M
63 0 V
3965 0 R
-63 0 V
stroke
1430 2249 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.4)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1586 2957 M
4028 0 V
stroke
LTb
1586 2957 M
63 0 V
3965 0 R
-63 0 V
stroke
1430 2957 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.6)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1586 3665 M
4028 0 V
stroke
LTb
1586 3665 M
63 0 V
3965 0 R
-63 0 V
stroke
1430 3665 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.8)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1586 4374 M
156 0 V
1779 0 R
2093 0 V
stroke
LTb
1586 4374 M
63 0 V
3965 0 R
-63 0 V
stroke
1430 4374 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1586 832 M
0 3896 V
stroke
LTb
1586 832 M
0 63 V
0 3833 R
0 -63 V
stroke
1586 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1.5)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2593 832 M
0 3053 V
0 780 R
0 63 V
stroke
LTb
2593 832 M
0 63 V
0 3833 R
0 -63 V
stroke
2593 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1.75)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3600 832 M
0 3896 V
stroke
LTb
3600 832 M
0 63 V
0 3833 R
0 -63 V
stroke
3600 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 2)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4607 832 M
0 3896 V
stroke
LTb
4607 832 M
0 63 V
0 3833 R
0 -63 V
stroke
4607 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 2.25)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5614 832 M
0 3896 V
stroke
LTb
5614 832 M
0 63 V
0 3833 R
0 -63 V
stroke
5614 572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 2.5)]
] -86.7 MCshow
1.000 UL
LTb
5614 832 M
-63 0 V
stroke
5770 832 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MLshow
1.000 UL
LTb
5614 1611 M
-63 0 V
stroke
5770 1611 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.2)]
] -86.7 MLshow
1.000 UL
LTb
5614 2390 M
-63 0 V
stroke
5770 2390 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.4)]
] -86.7 MLshow
1.000 UL
LTb
5614 3170 M
-63 0 V
stroke
5770 3170 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.6)]
] -86.7 MLshow
1.000 UL
LTb
5614 3949 M
-63 0 V
stroke
5770 3949 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.8)]
] -86.7 MLshow
1.000 UL
LTb
5614 4728 M
-63 0 V
stroke
5770 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1586 4728 N
0 -3896 V
4028 0 V
0 3896 V
-4028 0 V
Z stroke
LCb setrgbcolor
520 2780 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (velocity u)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
6679 2780 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (\(absolute\) error)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
3600 182 M
[ [(Helvetica) 260.0 0.0 true true 0 (length x)]
] -86.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
8.000 UL
LT0
LTb
2522 4535 M
[ [(Helvetica) 260.0 0.0 true true 0 (simu)]
] -86.7 MRshow
LT0
2678 4535 M
687 0 V
5533 832 M
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 1 V
-20 0 V
-20 2 V
-20 2 V
-21 5 V
-20 10 V
-20 17 V
-20 31 V
-19 53 V
-20 86 V
-19 130 V
-18 184 V
-18 239 V
-17 284 V
-15 311 V
-15 314 V
-14 303 V
-13 275 V
-12 237 V
-11 192 V
-11 187 V
-11 137 V
-10 108 V
-9 84 V
-10 63 V
-10 33 V
-9 -2 V
-10 -31 V
-10 -47 V
-9 -15 V
-10 -115 V
-8 57 V
-9 178 V
-10 -48 V
-10 -52 V
-9 -66 V
-1 749 V
-7 0 R
-12 -778 V
-9 30 V
-9 56 V
-11 9 V
-10 5 V
-10 43 V
-9 45 V
-11 35 V
-10 -3 V
3 31 V
-23 49 V
-9 -44 V
-8 -49 V
-9 -30 V
-17 -124 V
-13 -92 V
26 179 V
-26 41 V
-21 -128 V
-7 53 V
-7 43 V
-10 19 V
-11 13 V
-8 25 V
-11 1 V
-12 -9 V
-14 -12 V
13 12 V
-28 7 V
-8 -16 V
-9 -20 V
-8 -10 V
-6 4 V
-10 0 V
-15 -6 V
-12 6 V
-9 1 V
-7 2 V
-6 8 V
-6 0 V
-13 5 V
-17 -23 V
-13 5 V
-10 8 V
-3 11 V
-2 1 V
-3 -2 V
-9 9 V
-27 -31 V
-23 31 V
-56 -10 V
-48 3 V
-49 2 V
-48 6 V
stroke 4117 4139 M
-48 7 V
-48 2 V
-48 -3 V
-48 3 V
-48 12 V
-48 20 V
-49 18 V
-50 39 V
-49 -19 V
-48 -136 V
-47 -185 V
-44 -167 V
-42 -123 V
-40 -82 V
-40 -70 V
-38 -77 V
-38 -78 V
-38 -82 V
-36 -97 V
-35 -115 V
-35 -125 V
-33 -127 V
-32 -125 V
-31 -125 V
-31 -126 V
-29 -122 V
-28 -119 V
-28 -113 V
-27 -109 V
-26 -103 V
-25 -94 V
-25 -82 V
-25 -71 V
-24 -64 V
-23 -62 V
-23 -61 V
-23 -60 V
-23 -58 V
-22 -58 V
-22 -56 V
-22 -53 V
-21 -49 V
-21 -44 V
-21 -39 V
-21 -32 V
-20 -27 V
-21 -21 V
-20 -16 V
-20 -12 V
-21 -8 V
-20 -6 V
-20 -3 V
-20 -3 V
-20 -1 V
-8 0 V
stroke
LT1
LTb
2522 4275 M
[ [(Helvetica) 260.0 0.0 true true 0 (exact)]
] -86.7 MRshow
LT1
2678 4275 M
687 0 V
5594 832 M
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-19 0 V
-20 0 V
-19 0 V
-18 0 V
-18 0 V
-17 0 V
-15 0 V
-15 0 V
-14 0 V
-13 3285 V
-12 0 V
-11 0 V
-11 0 V
-11 0 V
-10 0 V
-9 0 V
-10 0 V
-10 0 V
-9 0 V
-10 0 V
-10 0 V
-9 0 V
-10 0 V
-8 0 V
-9 0 V
-10 0 V
-10 0 V
-9 0 V
-2 0 V
-18 0 V
-9 0 V
-9 0 V
-11 0 V
-10 0 V
-10 0 V
-9 0 V
-11 0 V
-10 0 V
3 0 V
-23 0 V
-9 0 V
-8 0 V
-9 0 V
-17 0 V
-13 0 V
26 0 V
-26 0 V
-21 0 V
-7 0 V
-7 0 V
-10 0 V
-11 0 V
-8 0 V
-11 0 V
-12 0 V
-14 0 V
13 0 V
-28 0 V
-8 0 V
-9 0 V
-8 0 V
-6 0 V
-10 0 V
-15 0 V
-12 0 V
-9 0 V
-7 0 V
-6 0 V
-6 0 V
-13 0 V
-17 0 V
-13 0 V
-10 0 V
-3 0 V
-2 0 V
-3 0 V
-9 0 V
-27 0 V
-23 0 V
-56 0 V
-48 0 V
stroke 4214 4117 M
-49 0 V
-48 0 V
-47 0 V
-49 0 V
-48 0 V
-48 0 V
-48 0 V
-48 0 V
-49 0 V
-50 0 V
-49 0 V
-48 0 V
-47 0 V
-44 -4 V
-42 -154 V
-40 -148 V
-40 -145 V
-38 -142 V
-38 -139 V
-38 -136 V
-36 -133 V
-35 -130 V
-35 -126 V
-33 -122 V
-32 -118 V
-31 -114 V
-30 -111 V
-30 -107 V
-28 -104 V
-28 -102 V
-27 -98 V
-26 -96 V
-25 -93 V
-25 -91 V
-25 -89 V
-24 -88 V
-23 -86 V
-23 -86 V
-23 -83 V
-23 -83 V
-22 -81 V
-22 -81 V
-22 -79 V
-21 -78 V
-21 -38 V
-21 0 V
-21 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
stroke
LT2
LTb
2522 4015 M
[ [(Helvetica) 260.0 0.0 true true 0 (error)]
] -86.7 MRshow
LT2
2678 4015 M
687 0 V
5594 832 M
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 1 V
-20 0 V
-20 2 V
-20 3 V
-21 5 V
-20 11 V
-20 19 V
-20 34 V
-19 58 V
-20 94 V
-19 143 V
-18 203 V
-18 263 V
-17 312 V
-15 342 V
-15 346 V
-14 333 V
5003 1974 L
-12 -261 V
-11 -211 V
-11 -206 V
-11 -151 V
-10 -119 V
-9 -92 V
-10 -69 V
-10 -30 V
-9 -2 V
-10 31 V
-10 53 V
-9 16 V
-10 127 V
-8 -63 V
-9 -134 V
-10 -9 V
-10 57 V
-9 72 V
-2 1016 V
-18 -983 V
-9 -33 V
-9 -62 V
-11 -10 V
-10 -5 V
-10 -48 V
-9 -3 V
-11 39 V
-10 -4 V
3 34 V
-23 55 V
-9 -49 V
-8 -53 V
-9 -34 V
-17 115 V
-13 100 V
26 -197 V
-26 -14 V
-21 110 V
-7 -58 V
-7 -47 V
-10 -19 V
-11 15 V
-8 27 V
-11 1 V
-12 -10 V
-14 -13 V
13 13 V
-28 8 V
-8 -18 V
-9 -21 V
-8 5 V
-6 -3 V
-10 -1 V
-15 7 V
-12 -7 V
-9 -1 V
-7 -2 V
-6 6 V
-6 1 V
-13 5 V
-17 -1 V
-13 -5 V
-10 -5 V
-3 13 V
-2 0 V
-3 -1 V
-9 9 V
-27 -12 V
-23 13 V
-56 -11 V
-48 2 V
-49 2 V
-48 7 V
-47 8 V
-49 2 V
-48 -3 V
-48 4 V
-48 12 V
-48 22 V
-49 20 V
-50 44 V
-49 -21 V
-48 -73 V
-47 203 V
-44 180 V
-42 -34 V
-40 -73 V
-40 -82 V
-38 -72 V
-38 -68 V
-38 -59 V
-36 -28 V
-35 16 V
-35 1 V
-33 -5 V
-32 -8 V
-31 -8 V
-30 17 V
-30 16 V
-28 16 V
-28 14 V
-27 11 V
-26 8 V
-25 0 V
stroke 2910 916 M
-25 -9 V
-25 -20 V
-24 -26 V
-23 -27 V
-23 23 V
-23 26 V
-23 27 V
-22 26 V
-22 27 V
-22 28 V
-21 32 V
-21 -7 V
-21 -42 V
-21 -36 V
-20 -29 V
-21 -23 V
-20 -18 V
-20 -13 V
-21 -9 V
-20 -6 V
-20 -4 V
-20 -2 V
-20 -2 V
-20 0 V
-21 1 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 -1 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-20 0 V
-21 0 V
-20 0 V
-20 0 V
stroke
1.000 UL
LTb
1586 4728 N
0 -3896 V
4028 0 V
0 3896 V
-4028 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
