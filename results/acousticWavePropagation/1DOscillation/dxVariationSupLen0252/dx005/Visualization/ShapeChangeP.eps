%!PS-Adobe-2.0 EPSF-2.0
%%Title: Visualization/ShapeChangeP.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Aug 24 16:47:15 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Visualization/ShapeChangeP.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 24 16:47:15 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.998)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1044 M
5884 0 V
stroke
LTb
1106 1044 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9985)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1640 M
5884 0 V
stroke
LTb
1106 1640 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.999)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2236 M
5884 0 V
stroke
LTb
1106 2236 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9995)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2832 M
5884 0 V
stroke
LTb
1106 2832 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2832 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3428 M
5884 0 V
stroke
LTb
1106 3428 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3428 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0005)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4024 M
5884 0 V
stroke
LTb
1106 4024 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4024 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.001)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4620 M
5884 0 V
stroke
LTb
1106 4620 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0015)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4172 V
stroke
LTb
1106 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (pressure)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (position)]
] -46.7 MCshow
LTb
4048 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (damping for 1D velocity oscillation)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=0)]
] -46.7 MRshow
LT0
6975 2832 Pls
6946 2832 Pls
6916 2832 Pls
6887 2832 Pls
6858 2832 Pls
6828 2832 Pls
6799 2832 Pls
6769 2832 Pls
6740 2832 Pls
6711 2832 Pls
6681 2832 Pls
6652 2832 Pls
6622 2832 Pls
6593 2832 Pls
6563 2832 Pls
6534 2832 Pls
6505 2832 Pls
6475 2832 Pls
6446 2832 Pls
6416 2832 Pls
6387 2832 Pls
6357 2832 Pls
6328 2832 Pls
6299 2832 Pls
6269 2832 Pls
6240 2832 Pls
6210 2832 Pls
6181 2832 Pls
6152 2832 Pls
6122 2832 Pls
6093 2832 Pls
6063 2832 Pls
6034 2832 Pls
6004 2832 Pls
5975 2832 Pls
5946 2832 Pls
5916 2832 Pls
5887 2832 Pls
5857 2832 Pls
5828 2832 Pls
5798 2832 Pls
5769 2832 Pls
5740 2832 Pls
5710 2832 Pls
5681 2832 Pls
5651 2832 Pls
5622 2832 Pls
5593 2832 Pls
5563 2832 Pls
5534 2832 Pls
5504 2832 Pls
5475 2832 Pls
5445 2832 Pls
5416 2832 Pls
5387 2832 Pls
5357 2832 Pls
5328 2832 Pls
5298 2832 Pls
5269 2832 Pls
5240 2832 Pls
5210 2832 Pls
5181 2832 Pls
5151 2832 Pls
5122 2832 Pls
5092 2832 Pls
5063 2832 Pls
5034 2832 Pls
5004 2832 Pls
4975 2832 Pls
4945 2832 Pls
4916 2832 Pls
4886 2832 Pls
4857 2832 Pls
4828 2832 Pls
4798 2832 Pls
4769 2832 Pls
4739 2832 Pls
4710 2832 Pls
4681 2832 Pls
4651 2832 Pls
4622 2832 Pls
4592 2832 Pls
4563 2832 Pls
4533 2832 Pls
4504 2832 Pls
4475 2832 Pls
4445 2832 Pls
4416 2832 Pls
4386 2832 Pls
4357 2832 Pls
4327 2832 Pls
4298 2832 Pls
4269 2832 Pls
4239 2832 Pls
4210 2832 Pls
4180 2832 Pls
4151 2832 Pls
4122 2832 Pls
4092 2832 Pls
4063 2832 Pls
4033 2832 Pls
4004 2832 Pls
3974 2832 Pls
3945 2832 Pls
3916 2832 Pls
3886 2832 Pls
3857 2832 Pls
3827 2832 Pls
3798 2832 Pls
3769 2832 Pls
3739 2832 Pls
3710 2832 Pls
3680 2832 Pls
3651 2832 Pls
3621 2832 Pls
3592 2832 Pls
3563 2832 Pls
3533 2832 Pls
3504 2832 Pls
3474 2832 Pls
3445 2832 Pls
3415 2832 Pls
3386 2832 Pls
3357 2832 Pls
3327 2832 Pls
3298 2832 Pls
3268 2832 Pls
3239 2832 Pls
3210 2832 Pls
3180 2832 Pls
3151 2832 Pls
3121 2832 Pls
3092 2832 Pls
3062 2832 Pls
3033 2832 Pls
3004 2832 Pls
2974 2832 Pls
2945 2832 Pls
2915 2832 Pls
2886 2832 Pls
2856 2832 Pls
2827 2832 Pls
2798 2832 Pls
2768 2832 Pls
2739 2832 Pls
2709 2832 Pls
2680 2832 Pls
2651 2832 Pls
2621 2832 Pls
2592 2832 Pls
2562 2832 Pls
2533 2832 Pls
2503 2832 Pls
2474 2832 Pls
2445 2832 Pls
2415 2832 Pls
2386 2832 Pls
2356 2832 Pls
2327 2832 Pls
2298 2832 Pls
2268 2832 Pls
2239 2832 Pls
2209 2832 Pls
2180 2832 Pls
2150 2832 Pls
2121 2832 Pls
2092 2832 Pls
2062 2832 Pls
2033 2832 Pls
2003 2832 Pls
1974 2832 Pls
1944 2832 Pls
1915 2832 Pls
1886 2832 Pls
1856 2832 Pls
1827 2832 Pls
1797 2832 Pls
1768 2832 Pls
1739 2832 Pls
1709 2832 Pls
1680 2832 Pls
1650 2832 Pls
1621 2832 Pls
1591 2832 Pls
1562 2832 Pls
1533 2832 Pls
1503 2832 Pls
1474 2832 Pls
1444 2832 Pls
1415 2832 Pls
1385 2832 Pls
1356 2832 Pls
1327 2832 Pls
1297 2832 Pls
1268 2832 Pls
1238 2832 Pls
1209 2832 Pls
1180 2832 Pls
1150 2832 Pls
1121 2832 Pls
6828 2832 Pls
6858 2832 Pls
6887 2832 Pls
6916 2832 Pls
6946 2832 Pls
6975 2832 Pls
6622 2832 Pls
6652 2832 Pls
6681 2832 Pls
6711 2832 Pls
6740 2832 Pls
6769 2832 Pls
6799 2832 Pls
6446 2832 Pls
6475 2832 Pls
6505 2832 Pls
6534 2832 Pls
6563 2832 Pls
6593 2832 Pls
6269 2832 Pls
6299 2832 Pls
6328 2832 Pls
6357 2832 Pls
6387 2832 Pls
6416 2832 Pls
6093 2832 Pls
6122 2832 Pls
6152 2832 Pls
6181 2832 Pls
6210 2832 Pls
6240 2832 Pls
5887 2832 Pls
5916 2832 Pls
5946 2832 Pls
5975 2832 Pls
6004 2832 Pls
6034 2832 Pls
6063 2832 Pls
5710 2832 Pls
5740 2832 Pls
5769 2832 Pls
5798 2832 Pls
5828 2832 Pls
5857 2832 Pls
5534 2832 Pls
5563 2832 Pls
5593 2832 Pls
5622 2832 Pls
5651 2832 Pls
5681 2832 Pls
5357 2832 Pls
5387 2832 Pls
5416 2832 Pls
5445 2832 Pls
5475 2832 Pls
5504 2832 Pls
5151 2832 Pls
5181 2832 Pls
5210 2832 Pls
5240 2832 Pls
5269 2832 Pls
5298 2832 Pls
5328 2832 Pls
4975 2832 Pls
5004 2832 Pls
5034 2832 Pls
5063 2832 Pls
5092 2832 Pls
5122 2832 Pls
4798 2832 Pls
4828 2832 Pls
4857 2832 Pls
4886 2832 Pls
4916 2832 Pls
4945 2832 Pls
4622 2832 Pls
4651 2832 Pls
4681 2832 Pls
4710 2832 Pls
4739 2832 Pls
4769 2832 Pls
4416 2832 Pls
4445 2832 Pls
4475 2832 Pls
4504 2832 Pls
4533 2832 Pls
4563 2832 Pls
4592 2832 Pls
4239 2832 Pls
4269 2832 Pls
4298 2832 Pls
4327 2832 Pls
4357 2832 Pls
4386 2832 Pls
4063 2832 Pls
4092 2832 Pls
4122 2832 Pls
4151 2832 Pls
4180 2832 Pls
4210 2832 Pls
3886 2832 Pls
3916 2832 Pls
3945 2832 Pls
3974 2832 Pls
4004 2832 Pls
4033 2832 Pls
3680 2832 Pls
3710 2832 Pls
3739 2832 Pls
3769 2832 Pls
3798 2832 Pls
3827 2832 Pls
3857 2832 Pls
3504 2832 Pls
3533 2832 Pls
3563 2832 Pls
3592 2832 Pls
3621 2832 Pls
3651 2832 Pls
3327 2832 Pls
3357 2832 Pls
3386 2832 Pls
3415 2832 Pls
3445 2832 Pls
3474 2832 Pls
3151 2832 Pls
3180 2832 Pls
3210 2832 Pls
3239 2832 Pls
3268 2832 Pls
3298 2832 Pls
2945 2832 Pls
2974 2832 Pls
3004 2832 Pls
3033 2832 Pls
3062 2832 Pls
3092 2832 Pls
3121 2832 Pls
2768 2832 Pls
2798 2832 Pls
2827 2832 Pls
2856 2832 Pls
2886 2832 Pls
2915 2832 Pls
2592 2832 Pls
2621 2832 Pls
2651 2832 Pls
2680 2832 Pls
2709 2832 Pls
2739 2832 Pls
2415 2832 Pls
2445 2832 Pls
2474 2832 Pls
2503 2832 Pls
2533 2832 Pls
2562 2832 Pls
2209 2832 Pls
2239 2832 Pls
2268 2832 Pls
2298 2832 Pls
2327 2832 Pls
2356 2832 Pls
2386 2832 Pls
2033 2832 Pls
2062 2832 Pls
2092 2832 Pls
2121 2832 Pls
2150 2832 Pls
2180 2832 Pls
1856 2832 Pls
1886 2832 Pls
1915 2832 Pls
1944 2832 Pls
1974 2832 Pls
2003 2832 Pls
1680 2832 Pls
1709 2832 Pls
1739 2832 Pls
1768 2832 Pls
1797 2832 Pls
1827 2832 Pls
1474 2832 Pls
1503 2832 Pls
1533 2832 Pls
1562 2832 Pls
1591 2832 Pls
1621 2832 Pls
1650 2832 Pls
1297 2832 Pls
1327 2832 Pls
1356 2832 Pls
1385 2832 Pls
1415 2832 Pls
1444 2832 Pls
1121 2832 Pls
1150 2832 Pls
1180 2832 Pls
1209 2832 Pls
1238 2832 Pls
1268 2832 Pls
6828 2832 Pls
6858 2832 Pls
6887 2832 Pls
6916 2832 Pls
6946 2832 Pls
6975 2832 Pls
6622 2832 Pls
6652 2832 Pls
6681 2832 Pls
6711 2832 Pls
6740 2832 Pls
6769 2832 Pls
6799 2832 Pls
6446 2832 Pls
6475 2832 Pls
6505 2832 Pls
6534 2832 Pls
6563 2832 Pls
6593 2832 Pls
6269 2832 Pls
6299 2832 Pls
6328 2832 Pls
6357 2832 Pls
6387 2832 Pls
6416 2832 Pls
6093 2832 Pls
6122 2832 Pls
6152 2832 Pls
6181 2832 Pls
6210 2832 Pls
6240 2832 Pls
5887 2832 Pls
5916 2832 Pls
5946 2832 Pls
5975 2832 Pls
6004 2832 Pls
6034 2832 Pls
6063 2832 Pls
5710 2832 Pls
5740 2832 Pls
5769 2832 Pls
5798 2832 Pls
5828 2832 Pls
5857 2832 Pls
5534 2832 Pls
5563 2832 Pls
5593 2832 Pls
5622 2832 Pls
5651 2832 Pls
5681 2832 Pls
5357 2832 Pls
5387 2832 Pls
5416 2832 Pls
5445 2832 Pls
5475 2832 Pls
5504 2832 Pls
5151 2832 Pls
5181 2832 Pls
5210 2832 Pls
5240 2832 Pls
5269 2832 Pls
5298 2832 Pls
5328 2832 Pls
4975 2832 Pls
5004 2832 Pls
5034 2832 Pls
5063 2832 Pls
5092 2832 Pls
5122 2832 Pls
4798 2832 Pls
4828 2832 Pls
4857 2832 Pls
4886 2832 Pls
4916 2832 Pls
4945 2832 Pls
4622 2832 Pls
4651 2832 Pls
4681 2832 Pls
4710 2832 Pls
4739 2832 Pls
4769 2832 Pls
4416 2832 Pls
4445 2832 Pls
4475 2832 Pls
4504 2832 Pls
4533 2832 Pls
4563 2832 Pls
4592 2832 Pls
4239 2832 Pls
4269 2832 Pls
4298 2832 Pls
4327 2832 Pls
4357 2832 Pls
4386 2832 Pls
4063 2832 Pls
4092 2832 Pls
4122 2832 Pls
4151 2832 Pls
4180 2832 Pls
4210 2832 Pls
3886 2832 Pls
3916 2832 Pls
3945 2832 Pls
3974 2832 Pls
4004 2832 Pls
4033 2832 Pls
3680 2832 Pls
3710 2832 Pls
3739 2832 Pls
3769 2832 Pls
3798 2832 Pls
3827 2832 Pls
3857 2832 Pls
3504 2832 Pls
3533 2832 Pls
3563 2832 Pls
3592 2832 Pls
3621 2832 Pls
3651 2832 Pls
3327 2832 Pls
3357 2832 Pls
3386 2832 Pls
3415 2832 Pls
3445 2832 Pls
3474 2832 Pls
3151 2832 Pls
3180 2832 Pls
3210 2832 Pls
3239 2832 Pls
3268 2832 Pls
3298 2832 Pls
2945 2832 Pls
2974 2832 Pls
3004 2832 Pls
3033 2832 Pls
3062 2832 Pls
3092 2832 Pls
3121 2832 Pls
2768 2832 Pls
2798 2832 Pls
2827 2832 Pls
2856 2832 Pls
2886 2832 Pls
2915 2832 Pls
2592 2832 Pls
2621 2832 Pls
2651 2832 Pls
2680 2832 Pls
2709 2832 Pls
2739 2832 Pls
2415 2832 Pls
2445 2832 Pls
2474 2832 Pls
2503 2832 Pls
2533 2832 Pls
2562 2832 Pls
2209 2832 Pls
2239 2832 Pls
2268 2832 Pls
2298 2832 Pls
2327 2832 Pls
2356 2832 Pls
2386 2832 Pls
2033 2832 Pls
2062 2832 Pls
2092 2832 Pls
2121 2832 Pls
2150 2832 Pls
2180 2832 Pls
1856 2832 Pls
1886 2832 Pls
1915 2832 Pls
1944 2832 Pls
1974 2832 Pls
2003 2832 Pls
1680 2832 Pls
1709 2832 Pls
1739 2832 Pls
1768 2832 Pls
1797 2832 Pls
1827 2832 Pls
1474 2832 Pls
1503 2832 Pls
1533 2832 Pls
1562 2832 Pls
1591 2832 Pls
1621 2832 Pls
1650 2832 Pls
1297 2832 Pls
1327 2832 Pls
1356 2832 Pls
1385 2832 Pls
1415 2832 Pls
1444 2832 Pls
1121 2832 Pls
1150 2832 Pls
1180 2832 Pls
1209 2832 Pls
1238 2832 Pls
1268 2832 Pls
6622 721 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=08805999 ms)]
] -46.7 MRshow
LT1
6975 4312 Crs
6946 4312 Crs
6916 4312 Crs
6887 4310 Crs
6858 4307 Crs
6828 4304 Crs
6799 4300 Crs
6769 4295 Crs
6740 4289 Crs
6711 4282 Crs
6681 4275 Crs
6652 4267 Crs
6622 4258 Crs
6593 4248 Crs
6564 4237 Crs
6534 4226 Crs
6505 4214 Crs
6475 4201 Crs
6446 4188 Crs
6417 4174 Crs
6387 4159 Crs
6358 4144 Crs
6328 4128 Crs
6299 4112 Crs
6270 4095 Crs
6240 4078 Crs
6211 4061 Crs
6181 4043 Crs
6152 4024 Crs
6122 4006 Crs
6093 3987 Crs
6064 3967 Crs
6034 3948 Crs
6005 3928 Crs
5975 3908 Crs
5946 3888 Crs
5917 3868 Crs
5887 3848 Crs
5858 3828 Crs
5828 3808 Crs
5799 3787 Crs
5770 3767 Crs
5740 3746 Crs
5711 3726 Crs
5681 3705 Crs
5652 3684 Crs
5623 3664 Crs
5593 3643 Crs
5564 3622 Crs
5534 3601 Crs
5505 3579 Crs
5476 3557 Crs
5446 3535 Crs
5417 3512 Crs
5387 3489 Crs
5358 3465 Crs
5328 3441 Crs
5299 3415 Crs
5270 3389 Crs
5240 3361 Crs
5211 3332 Crs
5181 3302 Crs
5152 3270 Crs
5123 3236 Crs
5093 3200 Crs
5064 3163 Crs
5034 3123 Crs
5005 3080 Crs
4976 3035 Crs
4946 2987 Crs
4917 2937 Crs
4887 2883 Crs
4858 2827 Crs
4828 2767 Crs
4799 2704 Crs
4770 2638 Crs
4740 2568 Crs
4711 2496 Crs
4681 2420 Crs
4652 2342 Crs
4622 2261 Crs
4593 2177 Crs
4564 2092 Crs
4534 2005 Crs
4505 1917 Crs
4475 1828 Crs
4446 1740 Crs
4416 1652 Crs
4387 1565 Crs
4357 1480 Crs
4328 1398 Crs
4298 1319 Crs
4269 1245 Crs
4240 1176 Crs
4210 1113 Crs
4181 1058 Crs
4151 1010 Crs
4122 971 Crs
4092 941 Crs
4063 920 Crs
4033 910 Crs
4004 910 Crs
3974 920 Crs
3945 941 Crs
3915 971 Crs
3886 1010 Crs
3857 1058 Crs
3827 1113 Crs
3798 1176 Crs
3768 1245 Crs
3739 1319 Crs
3709 1398 Crs
3680 1480 Crs
3650 1565 Crs
3621 1652 Crs
3591 1740 Crs
3562 1828 Crs
3533 1917 Crs
3503 2005 Crs
3474 2092 Crs
3444 2177 Crs
3415 2261 Crs
3385 2342 Crs
3356 2420 Crs
3326 2496 Crs
3297 2568 Crs
3268 2638 Crs
3238 2704 Crs
3209 2767 Crs
3179 2827 Crs
3150 2883 Crs
3120 2937 Crs
3091 2987 Crs
3062 3035 Crs
3032 3080 Crs
3003 3123 Crs
2973 3163 Crs
2944 3200 Crs
2915 3236 Crs
2885 3270 Crs
2856 3302 Crs
2826 3332 Crs
2797 3361 Crs
2767 3389 Crs
2738 3415 Crs
2709 3441 Crs
2679 3465 Crs
2650 3489 Crs
2620 3512 Crs
2591 3535 Crs
2562 3557 Crs
2532 3579 Crs
2503 3601 Crs
2473 3622 Crs
2444 3643 Crs
2415 3664 Crs
2385 3684 Crs
2356 3705 Crs
2326 3726 Crs
2297 3746 Crs
2268 3767 Crs
2238 3787 Crs
2209 3808 Crs
2179 3828 Crs
2150 3848 Crs
2121 3868 Crs
2091 3888 Crs
2062 3908 Crs
2032 3928 Crs
2003 3948 Crs
1973 3967 Crs
1944 3987 Crs
1915 4006 Crs
1885 4024 Crs
1856 4043 Crs
1826 4061 Crs
1797 4078 Crs
1768 4095 Crs
1738 4112 Crs
1709 4128 Crs
1679 4144 Crs
1650 4159 Crs
1621 4174 Crs
1591 4188 Crs
1562 4201 Crs
1532 4214 Crs
1503 4226 Crs
1474 4237 Crs
1444 4248 Crs
1415 4258 Crs
1385 4267 Crs
1356 4275 Crs
1327 4282 Crs
1297 4289 Crs
1268 4295 Crs
1238 4300 Crs
1209 4304 Crs
1180 4307 Crs
1150 4310 Crs
1121 4312 Crs
6828 4304 Crs
6858 4307 Crs
6887 4310 Crs
6916 4312 Crs
6946 4312 Crs
6975 4312 Crs
6652 4267 Crs
6681 4275 Crs
6711 4282 Crs
6740 4289 Crs
6769 4295 Crs
6799 4300 Crs
6622 4258 Crs
6475 4201 Crs
6505 4214 Crs
6534 4226 Crs
6564 4237 Crs
6593 4248 Crs
6446 4188 Crs
6299 4112 Crs
6328 4128 Crs
6358 4144 Crs
6387 4159 Crs
6417 4174 Crs
6270 4095 Crs
6123 4006 Crs
6152 4024 Crs
6181 4043 Crs
6211 4061 Crs
6093 3987 Crs
6240 4078 Crs
5946 3888 Crs
5975 3908 Crs
6005 3928 Crs
6034 3948 Crs
5917 3868 Crs
5887 3848 Crs
6064 3967 Crs
5770 3767 Crs
5799 3787 Crs
5828 3808 Crs
5740 3746 Crs
5858 3828 Crs
5711 3726 Crs
5593 3643 Crs
5623 3664 Crs
5652 3684 Crs
5564 3622 Crs
5681 3705 Crs
5534 3601 Crs
5387 3489 Crs
5417 3512 Crs
5446 3535 Crs
5476 3557 Crs
5358 3465 Crs
5505 3579 Crs
5211 3332 Crs
5240 3361 Crs
5270 3389 Crs
5299 3415 Crs
5181 3302 Crs
5152 3270 Crs
5329 3441 Crs
5034 3123 Crs
5064 3163 Crs
5093 3200 Crs
5005 3080 Crs
5123 3236 Crs
4976 3035 Crs
4828 2767 Crs
4858 2827 Crs
4887 2883 Crs
4917 2937 Crs
4946 2987 Crs
4799 2704 Crs
4652 2342 Crs
4681 2420 Crs
4711 2496 Crs
4740 2568 Crs
4622 2261 Crs
4770 2638 Crs
4446 1740 Crs
4475 1828 Crs
4505 1917 Crs
4534 2005 Crs
4564 2092 Crs
4416 1652 Crs
4593 2177 Crs
4269 1245 Crs
4298 1319 Crs
4328 1398 Crs
4357 1480 Crs
4387 1565 Crs
4240 1176 Crs
4063 920 Crs
4092 941 Crs
4122 971 Crs
4151 1010 Crs
4181 1058 Crs
4210 1113 Crs
3886 1010 Crs
3915 971 Crs
3945 941 Crs
3974 920 Crs
4004 910 Crs
4033 910 Crs
3709 1398 Crs
3739 1319 Crs
3768 1245 Crs
3798 1176 Crs
3827 1113 Crs
3857 1058 Crs
3533 1917 Crs
3562 1828 Crs
3591 1740 Crs
3621 1652 Crs
3650 1565 Crs
3680 1480 Crs
3503 2005 Crs
3356 2420 Crs
3385 2342 Crs
3415 2261 Crs
3444 2177 Crs
3474 2092 Crs
3326 2496 Crs
3179 2827 Crs
3209 2767 Crs
3238 2704 Crs
3268 2638 Crs
3150 2883 Crs
3297 2568 Crs
3003 3123 Crs
3032 3080 Crs
3062 3035 Crs
3091 2987 Crs
2973 3163 Crs
3120 2937 Crs
2826 3332 Crs
2856 3302 Crs
2885 3270 Crs
2797 3361 Crs
2915 3236 Crs
2944 3200 Crs
2767 3389 Crs
2650 3489 Crs
2679 3465 Crs
2709 3441 Crs
2620 3512 Crs
2738 3415 Crs
2591 3535 Crs
2444 3643 Crs
2473 3622 Crs
2503 3601 Crs
2532 3579 Crs
2415 3664 Crs
2562 3557 Crs
2267 3767 Crs
2297 3746 Crs
2326 3726 Crs
2356 3705 Crs
2238 3787 Crs
2385 3684 Crs
2091 3888 Crs
2120 3868 Crs
2150 3848 Crs
2062 3908 Crs
2179 3828 Crs
2209 3808 Crs
2032 3928 Crs
1885 4024 Crs
1915 4006 Crs
1944 3987 Crs
1973 3967 Crs
2003 3948 Crs
1856 4043 Crs
1709 4128 Crs
1738 4112 Crs
1768 4095 Crs
1797 4078 Crs
1679 4144 Crs
1826 4061 Crs
1503 4226 Crs
1532 4214 Crs
1562 4201 Crs
1591 4188 Crs
1621 4174 Crs
1650 4159 Crs
1327 4282 Crs
1356 4275 Crs
1385 4267 Crs
1415 4258 Crs
1444 4248 Crs
1297 4289 Crs
1474 4237 Crs
1121 4312 Crs
1150 4310 Crs
1180 4307 Crs
1209 4304 Crs
1238 4300 Crs
1268 4295 Crs
6828 4304 Crs
6858 4307 Crs
6887 4310 Crs
6916 4312 Crs
6946 4312 Crs
6975 4312 Crs
6652 4267 Crs
6681 4275 Crs
6711 4282 Crs
6740 4289 Crs
6769 4295 Crs
6799 4300 Crs
6622 4258 Crs
6475 4201 Crs
6505 4214 Crs
6534 4226 Crs
6564 4237 Crs
6593 4248 Crs
6446 4188 Crs
6299 4112 Crs
6328 4128 Crs
6358 4144 Crs
6387 4159 Crs
6417 4174 Crs
6270 4095 Crs
6123 4006 Crs
6152 4024 Crs
6181 4043 Crs
6211 4061 Crs
6093 3987 Crs
6240 4078 Crs
5946 3888 Crs
5975 3908 Crs
6005 3928 Crs
6034 3948 Crs
5917 3868 Crs
5887 3848 Crs
6064 3967 Crs
5770 3767 Crs
5799 3787 Crs
5828 3808 Crs
5740 3746 Crs
5858 3828 Crs
5711 3726 Crs
5593 3643 Crs
5623 3664 Crs
5652 3684 Crs
5564 3622 Crs
5681 3705 Crs
5534 3601 Crs
5387 3489 Crs
5417 3512 Crs
5446 3535 Crs
5476 3557 Crs
5358 3465 Crs
5505 3579 Crs
5211 3332 Crs
5240 3361 Crs
5270 3389 Crs
5299 3415 Crs
5181 3302 Crs
5152 3270 Crs
5329 3441 Crs
5034 3123 Crs
5064 3163 Crs
5093 3200 Crs
5005 3080 Crs
5123 3236 Crs
4976 3035 Crs
4828 2767 Crs
4858 2827 Crs
4887 2883 Crs
4917 2937 Crs
4946 2987 Crs
4799 2704 Crs
4652 2342 Crs
4681 2420 Crs
4711 2496 Crs
4740 2568 Crs
4622 2261 Crs
4770 2638 Crs
4446 1740 Crs
4475 1828 Crs
4505 1917 Crs
4534 2005 Crs
4564 2092 Crs
4416 1652 Crs
4593 2177 Crs
4269 1245 Crs
4298 1319 Crs
4328 1398 Crs
4357 1480 Crs
4387 1565 Crs
4240 1176 Crs
4063 920 Crs
4092 941 Crs
4122 971 Crs
4151 1010 Crs
4181 1058 Crs
4210 1113 Crs
3886 1010 Crs
3915 971 Crs
3945 941 Crs
3974 920 Crs
4004 910 Crs
4033 910 Crs
3709 1398 Crs
3739 1319 Crs
3768 1245 Crs
3798 1176 Crs
3827 1113 Crs
3857 1058 Crs
3533 1917 Crs
3562 1828 Crs
3591 1740 Crs
3621 1652 Crs
3650 1565 Crs
3680 1480 Crs
3503 2005 Crs
3356 2420 Crs
3385 2342 Crs
3415 2261 Crs
3444 2177 Crs
3474 2092 Crs
3326 2496 Crs
3179 2827 Crs
3209 2767 Crs
3238 2704 Crs
3268 2638 Crs
3150 2883 Crs
3297 2568 Crs
3003 3123 Crs
3032 3080 Crs
3062 3035 Crs
3091 2987 Crs
2973 3163 Crs
3120 2937 Crs
2826 3332 Crs
2856 3302 Crs
2885 3270 Crs
2797 3361 Crs
2915 3236 Crs
2944 3200 Crs
2767 3389 Crs
2650 3489 Crs
2679 3465 Crs
2709 3441 Crs
2620 3512 Crs
2738 3415 Crs
2591 3535 Crs
2444 3643 Crs
2473 3622 Crs
2503 3601 Crs
2532 3579 Crs
2415 3664 Crs
2562 3557 Crs
2267 3767 Crs
2297 3746 Crs
2326 3726 Crs
2356 3705 Crs
2238 3787 Crs
2385 3684 Crs
2091 3888 Crs
2120 3868 Crs
2150 3848 Crs
2062 3908 Crs
2179 3828 Crs
2209 3808 Crs
2032 3928 Crs
1885 4024 Crs
1915 4006 Crs
1944 3987 Crs
1973 3967 Crs
2003 3948 Crs
1856 4043 Crs
1709 4128 Crs
1738 4112 Crs
1768 4095 Crs
1797 4078 Crs
1679 4144 Crs
1826 4061 Crs
1503 4226 Crs
1532 4214 Crs
1562 4201 Crs
1591 4188 Crs
1621 4174 Crs
1650 4159 Crs
1327 4282 Crs
1356 4275 Crs
1385 4267 Crs
1415 4258 Crs
1444 4248 Crs
1297 4289 Crs
1474 4237 Crs
1121 4312 Crs
1150 4310 Crs
1180 4307 Crs
1209 4304 Crs
1238 4300 Crs
1268 4295 Crs
6622 581 Crs
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
