%!PS-Adobe-2.0 EPSF-2.0
%%Title: Visualization/ShapeChangeRho.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Aug 24 15:51:59 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Visualization/ShapeChangeRho.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 24 15:51:59 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9986)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 865 M
5884 0 V
stroke
LTb
1106 865 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 865 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9988)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1282 M
5884 0 V
stroke
LTb
1106 1282 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1282 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.999)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1700 M
5884 0 V
stroke
LTb
1106 1700 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9992)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2117 M
5884 0 V
stroke
LTb
1106 2117 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9994)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2534 M
5884 0 V
stroke
LTb
1106 2534 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9996)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2951 M
5884 0 V
stroke
LTb
1106 2951 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2951 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9998)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3368 M
5884 0 V
stroke
LTb
1106 3368 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3368 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3786 M
5884 0 V
stroke
LTb
1106 3786 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3786 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4203 M
5884 0 V
stroke
LTb
1106 4203 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4203 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0004)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4620 M
5884 0 V
stroke
LTb
1106 4620 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0006)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4172 V
stroke
LTb
1106 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (density)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (position)]
] -46.7 MCshow
LTb
4048 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (damping for 1D velocity oscillation)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=0)]
] -46.7 MRshow
LT0
6966 3368 Pls
6919 3368 Pls
6872 3368 Pls
6825 3368 Pls
6778 3368 Pls
6731 3368 Pls
6684 3368 Pls
6637 3368 Pls
6590 3368 Pls
6543 3368 Pls
6496 3368 Pls
6449 3368 Pls
6402 3368 Pls
6355 3368 Pls
6307 3368 Pls
6260 3368 Pls
6213 3368 Pls
6166 3368 Pls
6119 3368 Pls
6072 3368 Pls
6025 3368 Pls
5978 3368 Pls
5931 3368 Pls
5884 3368 Pls
5837 3368 Pls
5790 3368 Pls
5743 3368 Pls
5696 3368 Pls
5648 3368 Pls
5601 3368 Pls
5554 3368 Pls
5507 3368 Pls
5460 3368 Pls
5413 3368 Pls
5366 3368 Pls
5319 3368 Pls
5272 3368 Pls
5225 3368 Pls
5178 3368 Pls
5131 3368 Pls
5084 3368 Pls
5037 3368 Pls
4989 3368 Pls
4942 3368 Pls
4895 3368 Pls
4848 3368 Pls
4801 3368 Pls
4754 3368 Pls
4707 3368 Pls
4660 3368 Pls
4613 3368 Pls
4566 3368 Pls
4519 3368 Pls
4472 3368 Pls
4425 3368 Pls
4378 3368 Pls
4330 3368 Pls
4283 3368 Pls
4236 3368 Pls
4189 3368 Pls
4142 3368 Pls
4095 3368 Pls
4048 3368 Pls
4001 3368 Pls
3954 3368 Pls
3907 3368 Pls
3860 3368 Pls
3813 3368 Pls
3766 3368 Pls
3718 3368 Pls
3671 3368 Pls
3624 3368 Pls
3577 3368 Pls
3530 3368 Pls
3483 3368 Pls
3436 3368 Pls
3389 3368 Pls
3342 3368 Pls
3295 3368 Pls
3248 3368 Pls
3201 3368 Pls
3154 3368 Pls
3107 3368 Pls
3059 3368 Pls
3012 3368 Pls
2965 3368 Pls
2918 3368 Pls
2871 3368 Pls
2824 3368 Pls
2777 3368 Pls
2730 3368 Pls
2683 3368 Pls
2636 3368 Pls
2589 3368 Pls
2542 3368 Pls
2495 3368 Pls
2448 3368 Pls
2400 3368 Pls
2353 3368 Pls
2306 3368 Pls
2259 3368 Pls
2212 3368 Pls
2165 3368 Pls
2118 3368 Pls
2071 3368 Pls
2024 3368 Pls
1977 3368 Pls
1930 3368 Pls
1883 3368 Pls
1836 3368 Pls
1789 3368 Pls
1741 3368 Pls
1694 3368 Pls
1647 3368 Pls
1600 3368 Pls
1553 3368 Pls
1506 3368 Pls
1459 3368 Pls
1412 3368 Pls
1365 3368 Pls
1318 3368 Pls
1271 3368 Pls
1224 3368 Pls
1177 3368 Pls
1130 3368 Pls
6825 3368 Pls
6872 3368 Pls
6919 3368 Pls
6966 3368 Pls
6637 3368 Pls
6684 3368 Pls
6731 3368 Pls
6778 3368 Pls
6449 3368 Pls
6496 3368 Pls
6543 3368 Pls
6590 3368 Pls
6260 3368 Pls
6307 3368 Pls
6355 3368 Pls
6402 3368 Pls
6072 3368 Pls
6119 3368 Pls
6166 3368 Pls
6213 3368 Pls
5931 3368 Pls
5978 3368 Pls
6025 3368 Pls
5743 3368 Pls
5790 3368 Pls
5837 3368 Pls
5884 3368 Pls
5554 3368 Pls
5601 3368 Pls
5648 3368 Pls
5696 3368 Pls
5366 3368 Pls
5413 3368 Pls
5460 3368 Pls
5507 3368 Pls
5178 3368 Pls
5225 3368 Pls
5272 3368 Pls
5319 3368 Pls
4989 3368 Pls
5037 3368 Pls
5084 3368 Pls
5131 3368 Pls
4801 3368 Pls
4848 3368 Pls
4895 3368 Pls
4942 3368 Pls
4613 3368 Pls
4660 3368 Pls
4707 3368 Pls
4754 3368 Pls
4425 3368 Pls
4472 3368 Pls
4519 3368 Pls
4566 3368 Pls
4236 3368 Pls
4283 3368 Pls
4330 3368 Pls
4378 3368 Pls
4048 3368 Pls
4095 3368 Pls
4142 3368 Pls
4189 3368 Pls
3907 3368 Pls
3954 3368 Pls
4001 3368 Pls
3718 3368 Pls
3766 3368 Pls
3813 3368 Pls
3860 3368 Pls
3530 3368 Pls
3577 3368 Pls
3624 3368 Pls
3671 3368 Pls
3342 3368 Pls
3389 3368 Pls
3436 3368 Pls
3483 3368 Pls
3154 3368 Pls
3201 3368 Pls
3248 3368 Pls
3295 3368 Pls
2965 3368 Pls
3012 3368 Pls
3059 3368 Pls
3107 3368 Pls
2777 3368 Pls
2824 3368 Pls
2871 3368 Pls
2918 3368 Pls
2589 3368 Pls
2636 3368 Pls
2683 3368 Pls
2730 3368 Pls
2400 3368 Pls
2448 3368 Pls
2495 3368 Pls
2542 3368 Pls
2212 3368 Pls
2259 3368 Pls
2306 3368 Pls
2353 3368 Pls
2071 3368 Pls
2118 3368 Pls
2165 3368 Pls
1883 3368 Pls
1930 3368 Pls
1977 3368 Pls
2024 3368 Pls
1694 3368 Pls
1741 3368 Pls
1789 3368 Pls
1836 3368 Pls
1506 3368 Pls
1553 3368 Pls
1600 3368 Pls
1647 3368 Pls
1318 3368 Pls
1365 3368 Pls
1412 3368 Pls
1459 3368 Pls
1130 3368 Pls
1177 3368 Pls
1224 3368 Pls
1271 3368 Pls
6825 3368 Pls
6872 3368 Pls
6919 3368 Pls
6966 3368 Pls
6637 3368 Pls
6684 3368 Pls
6731 3368 Pls
6778 3368 Pls
6449 3368 Pls
6496 3368 Pls
6543 3368 Pls
6590 3368 Pls
6260 3368 Pls
6307 3368 Pls
6355 3368 Pls
6402 3368 Pls
6072 3368 Pls
6119 3368 Pls
6166 3368 Pls
6213 3368 Pls
5931 3368 Pls
5978 3368 Pls
6025 3368 Pls
5743 3368 Pls
5790 3368 Pls
5837 3368 Pls
5884 3368 Pls
5554 3368 Pls
5601 3368 Pls
5648 3368 Pls
5696 3368 Pls
5366 3368 Pls
5413 3368 Pls
5460 3368 Pls
5507 3368 Pls
5178 3368 Pls
5225 3368 Pls
5272 3368 Pls
5319 3368 Pls
4989 3368 Pls
5037 3368 Pls
5084 3368 Pls
5131 3368 Pls
4801 3368 Pls
4848 3368 Pls
4895 3368 Pls
4942 3368 Pls
4613 3368 Pls
4660 3368 Pls
4707 3368 Pls
4754 3368 Pls
4425 3368 Pls
4472 3368 Pls
4519 3368 Pls
4566 3368 Pls
4236 3368 Pls
4283 3368 Pls
4330 3368 Pls
4378 3368 Pls
4048 3368 Pls
4095 3368 Pls
4142 3368 Pls
4189 3368 Pls
3907 3368 Pls
3954 3368 Pls
4001 3368 Pls
3718 3368 Pls
3766 3368 Pls
3813 3368 Pls
3860 3368 Pls
3530 3368 Pls
3577 3368 Pls
3624 3368 Pls
3671 3368 Pls
3342 3368 Pls
3389 3368 Pls
3436 3368 Pls
3483 3368 Pls
3154 3368 Pls
3201 3368 Pls
3248 3368 Pls
3295 3368 Pls
2965 3368 Pls
3012 3368 Pls
3059 3368 Pls
3107 3368 Pls
2777 3368 Pls
2824 3368 Pls
2871 3368 Pls
2918 3368 Pls
2589 3368 Pls
2636 3368 Pls
2683 3368 Pls
2730 3368 Pls
2400 3368 Pls
2448 3368 Pls
2495 3368 Pls
2542 3368 Pls
2212 3368 Pls
2259 3368 Pls
2306 3368 Pls
2353 3368 Pls
2071 3368 Pls
2118 3368 Pls
2165 3368 Pls
1883 3368 Pls
1930 3368 Pls
1977 3368 Pls
2024 3368 Pls
1694 3368 Pls
1741 3368 Pls
1789 3368 Pls
1836 3368 Pls
1506 3368 Pls
1553 3368 Pls
1600 3368 Pls
1647 3368 Pls
1318 3368 Pls
1365 3368 Pls
1412 3368 Pls
1459 3368 Pls
1130 3368 Pls
1177 3368 Pls
1224 3368 Pls
1271 3368 Pls
6622 721 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=08753999 ms)]
] -46.7 MRshow
LT1
6966 3275 Crs
6919 3275 Crs
6872 3289 Crs
6825 3315 Crs
6778 3353 Crs
6731 3399 Crs
6684 3452 Crs
6637 3509 Crs
6590 3568 Crs
6543 3627 Crs
6496 3686 Crs
6449 3743 Crs
6402 3798 Crs
6355 3850 Crs
6307 3900 Crs
6260 3948 Crs
6213 3993 Crs
6166 4036 Crs
6119 4077 Crs
6072 4115 Crs
6025 4152 Crs
5978 4186 Crs
5931 4219 Crs
5884 4249 Crs
5837 4276 Crs
5790 4301 Crs
5743 4323 Crs
5696 4342 Crs
5649 4358 Crs
5602 4370 Crs
5555 4377 Crs
5508 4380 Crs
5461 4377 Crs
5413 4369 Crs
5366 4354 Crs
5319 4332 Crs
5272 4303 Crs
5225 4264 Crs
5178 4217 Crs
5131 4159 Crs
5084 4090 Crs
5037 4009 Crs
4990 3916 Crs
4943 3809 Crs
4896 3689 Crs
4849 3555 Crs
4802 3406 Crs
4755 3244 Crs
4708 3067 Crs
4661 2878 Crs
4613 2677 Crs
4566 2466 Crs
4519 2247 Crs
4472 2023 Crs
4425 1797 Crs
4378 1574 Crs
4331 1358 Crs
4284 1153 Crs
4237 967 Crs
4189 804 Crs
4142 670 Crs
4095 570 Crs
4048 509 Crs
4001 488 Crs
3954 509 Crs
3907 570 Crs
3860 670 Crs
3812 804 Crs
3765 967 Crs
3718 1153 Crs
3671 1358 Crs
3624 1574 Crs
3577 1797 Crs
3530 2023 Crs
3483 2247 Crs
3436 2466 Crs
3388 2677 Crs
3341 2878 Crs
3294 3067 Crs
3247 3244 Crs
3200 3406 Crs
3153 3555 Crs
3106 3689 Crs
3059 3809 Crs
3012 3916 Crs
2965 4009 Crs
2918 4090 Crs
2871 4159 Crs
2824 4217 Crs
2777 4264 Crs
2730 4303 Crs
2682 4332 Crs
2635 4354 Crs
2588 4369 Crs
2541 4377 Crs
2494 4380 Crs
2447 4377 Crs
2400 4370 Crs
2353 4358 Crs
2306 4342 Crs
2259 4323 Crs
2212 4301 Crs
2165 4276 Crs
2118 4249 Crs
2071 4219 Crs
2024 4186 Crs
1977 4152 Crs
1930 4115 Crs
1883 4077 Crs
1836 4036 Crs
1788 3993 Crs
1741 3948 Crs
1694 3900 Crs
1647 3850 Crs
1600 3798 Crs
1553 3743 Crs
1506 3686 Crs
1459 3627 Crs
1412 3568 Crs
1365 3509 Crs
1318 3452 Crs
1271 3399 Crs
1224 3353 Crs
1177 3315 Crs
1130 3289 Crs
6825 3315 Crs
6872 3289 Crs
6919 3275 Crs
6966 3275 Crs
6684 3452 Crs
6731 3399 Crs
6778 3353 Crs
6637 3509 Crs
6496 3686 Crs
6543 3627 Crs
6590 3568 Crs
6449 3743 Crs
6308 3900 Crs
6355 3850 Crs
6402 3798 Crs
6260 3948 Crs
6119 4077 Crs
6166 4036 Crs
6213 3993 Crs
6072 4115 Crs
5931 4219 Crs
5978 4186 Crs
6025 4152 Crs
5790 4301 Crs
5837 4276 Crs
5743 4323 Crs
5884 4249 Crs
5602 4370 Crs
5649 4358 Crs
5555 4377 Crs
5696 4342 Crs
5414 4369 Crs
5461 4377 Crs
5366 4354 Crs
5508 4380 Crs
5225 4264 Crs
5272 4303 Crs
5178 4217 Crs
5319 4332 Crs
5037 4009 Crs
5084 4090 Crs
4990 3916 Crs
5131 4159 Crs
4849 3555 Crs
4896 3689 Crs
4943 3809 Crs
4802 3406 Crs
4661 2878 Crs
4708 3067 Crs
4755 3244 Crs
4613 2677 Crs
4472 2023 Crs
4519 2247 Crs
4566 2466 Crs
4425 1797 Crs
4284 1153 Crs
4331 1358 Crs
4378 1574 Crs
4237 967 Crs
4095 570 Crs
4142 670 Crs
4189 804 Crs
4048 509 Crs
3907 570 Crs
3954 509 Crs
4001 488 Crs
3718 1153 Crs
3765 967 Crs
3812 804 Crs
3860 670 Crs
3530 2023 Crs
3577 1797 Crs
3624 1574 Crs
3671 1358 Crs
3388 2677 Crs
3435 2466 Crs
3341 2878 Crs
3483 2247 Crs
3200 3406 Crs
3247 3244 Crs
3153 3555 Crs
3294 3067 Crs
3012 3916 Crs
3059 3809 Crs
3106 3689 Crs
2965 4009 Crs
2824 4217 Crs
2871 4159 Crs
2918 4090 Crs
2777 4264 Crs
2635 4354 Crs
2682 4332 Crs
2729 4303 Crs
2588 4369 Crs
2447 4377 Crs
2494 4380 Crs
2541 4377 Crs
2400 4370 Crs
2259 4323 Crs
2306 4342 Crs
2353 4358 Crs
2212 4301 Crs
2071 4219 Crs
2118 4249 Crs
2165 4276 Crs
1883 4077 Crs
1930 4115 Crs
1977 4152 Crs
2024 4186 Crs
1694 3900 Crs
1741 3948 Crs
1788 3993 Crs
1836 4036 Crs
1506 3686 Crs
1553 3743 Crs
1600 3798 Crs
1647 3850 Crs
1318 3452 Crs
1365 3509 Crs
1412 3568 Crs
1459 3627 Crs
1130 3289 Crs
1177 3315 Crs
1224 3353 Crs
1271 3399 Crs
6825 3315 Crs
6872 3289 Crs
6919 3275 Crs
6966 3275 Crs
6684 3452 Crs
6731 3399 Crs
6778 3353 Crs
6637 3509 Crs
6496 3686 Crs
6543 3627 Crs
6590 3568 Crs
6449 3743 Crs
6308 3900 Crs
6355 3850 Crs
6402 3798 Crs
6260 3948 Crs
6119 4077 Crs
6166 4036 Crs
6213 3993 Crs
6072 4115 Crs
5931 4219 Crs
5978 4186 Crs
6025 4152 Crs
5790 4301 Crs
5837 4276 Crs
5743 4323 Crs
5884 4249 Crs
5602 4370 Crs
5649 4358 Crs
5555 4377 Crs
5696 4342 Crs
5414 4369 Crs
5461 4377 Crs
5366 4354 Crs
5508 4380 Crs
5225 4264 Crs
5272 4303 Crs
5178 4217 Crs
5319 4332 Crs
5037 4009 Crs
5084 4090 Crs
4990 3916 Crs
5131 4159 Crs
4849 3555 Crs
4896 3689 Crs
4943 3809 Crs
4802 3406 Crs
4661 2878 Crs
4708 3067 Crs
4755 3244 Crs
4613 2677 Crs
4472 2023 Crs
4519 2247 Crs
4566 2466 Crs
4425 1797 Crs
4284 1153 Crs
4331 1358 Crs
4378 1574 Crs
4237 967 Crs
4095 570 Crs
4142 670 Crs
4189 804 Crs
4048 509 Crs
3907 570 Crs
3954 509 Crs
4001 488 Crs
3718 1153 Crs
3765 967 Crs
3812 804 Crs
3860 670 Crs
3530 2023 Crs
3577 1797 Crs
3624 1574 Crs
3671 1358 Crs
3388 2677 Crs
3435 2466 Crs
3341 2878 Crs
3483 2247 Crs
3200 3406 Crs
3247 3244 Crs
3153 3555 Crs
3294 3067 Crs
3012 3916 Crs
3059 3809 Crs
3106 3689 Crs
2965 4009 Crs
2824 4217 Crs
2871 4159 Crs
2918 4090 Crs
2777 4264 Crs
2635 4354 Crs
2682 4332 Crs
2729 4303 Crs
2588 4369 Crs
2447 4377 Crs
2494 4380 Crs
2541 4377 Crs
2400 4370 Crs
2259 4323 Crs
2306 4342 Crs
2353 4358 Crs
2212 4301 Crs
2071 4219 Crs
2118 4249 Crs
2165 4276 Crs
1883 4077 Crs
1930 4115 Crs
1977 4152 Crs
2024 4186 Crs
1694 3900 Crs
1741 3948 Crs
1788 3993 Crs
1836 4036 Crs
1506 3686 Crs
1553 3743 Crs
1600 3798 Crs
1647 3850 Crs
1318 3452 Crs
1365 3509 Crs
1412 3568 Crs
1459 3627 Crs
1130 3289 Crs
1177 3315 Crs
1224 3353 Crs
1271 3399 Crs
6622 581 Crs
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
