%!PS-Adobe-2.0 EPSF-2.0
%%Title: Visualization/ShapeChangeV.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Aug 24 15:51:59 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Visualization/ShapeChangeV.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 24 15:51:59 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 448 M
6052 0 V
stroke
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
stroke
854 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 1143 M
6052 0 V
stroke
LTb
938 1143 M
63 0 V
5989 0 R
-63 0 V
stroke
854 1143 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.04)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 1839 M
6052 0 V
stroke
LTb
938 1839 M
63 0 V
5989 0 R
-63 0 V
stroke
854 1839 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.02)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 2534 M
6052 0 V
stroke
LTb
938 2534 M
63 0 V
5989 0 R
-63 0 V
stroke
854 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 3229 M
6052 0 V
stroke
LTb
938 3229 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.02)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 3925 M
6052 0 V
stroke
LTb
938 3925 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3925 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.04)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 4620 M
6052 0 V
stroke
LTb
938 4620 M
63 0 V
5989 0 R
-63 0 V
stroke
854 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4172 V
stroke
LTb
938 448 M
0 63 V
0 4109 R
0 -63 V
stroke
938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (velocity)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3964 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (position)]
] -46.7 MCshow
LTb
3964 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (damping for 1D velocity oscillation)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=0)]
] -46.7 MRshow
LT0
6966 2586 Pls
6917 2482 Pls
6869 2379 Pls
6821 2276 Pls
6772 2174 Pls
6724 2073 Pls
6675 1973 Pls
6627 1874 Pls
6578 1777 Pls
6530 1682 Pls
6482 1589 Pls
6433 1498 Pls
6385 1410 Pls
6336 1325 Pls
6288 1243 Pls
6240 1164 Pls
6191 1089 Pls
6143 1017 Pls
6094 949 Pls
6046 885 Pls
5997 826 Pls
5949 770 Pls
5901 719 Pls
5852 673 Pls
5804 631 Pls
5755 594 Pls
5707 562 Pls
5659 536 Pls
5610 514 Pls
5562 497 Pls
5513 485 Pls
5465 479 Pls
5416 477 Pls
5368 481 Pls
5320 490 Pls
5271 505 Pls
5223 524 Pls
5174 548 Pls
5126 578 Pls
5078 612 Pls
5029 652 Pls
4981 696 Pls
4932 744 Pls
4884 797 Pls
4835 855 Pls
4787 917 Pls
4739 983 Pls
4690 1052 Pls
4642 1126 Pls
4593 1203 Pls
4545 1284 Pls
4497 1367 Pls
4448 1454 Pls
4400 1543 Pls
4351 1635 Pls
4303 1729 Pls
4254 1825 Pls
4206 1923 Pls
4158 2022 Pls
4109 2123 Pls
4061 2225 Pls
4012 2328 Pls
3964 2431 Pls
3916 2534 Pls
3867 2637 Pls
3819 2740 Pls
3770 2843 Pls
3722 2945 Pls
3674 3046 Pls
3625 3145 Pls
3577 3243 Pls
3528 3339 Pls
3480 3433 Pls
3431 3525 Pls
3383 3614 Pls
3335 3701 Pls
3286 3784 Pls
3238 3865 Pls
3189 3942 Pls
3141 4016 Pls
3093 4085 Pls
3044 4151 Pls
2996 4213 Pls
2947 4271 Pls
2899 4324 Pls
2850 4372 Pls
2802 4416 Pls
2754 4456 Pls
2705 4490 Pls
2657 4520 Pls
2608 4544 Pls
2560 4563 Pls
2512 4578 Pls
2463 4587 Pls
2415 4591 Pls
2366 4589 Pls
2318 4583 Pls
2269 4571 Pls
2221 4554 Pls
2173 4532 Pls
2124 4506 Pls
2076 4474 Pls
2027 4437 Pls
1979 4395 Pls
1931 4349 Pls
1882 4298 Pls
1834 4242 Pls
1785 4183 Pls
1737 4119 Pls
1688 4051 Pls
1640 3979 Pls
1592 3904 Pls
1543 3825 Pls
1495 3743 Pls
1446 3658 Pls
1398 3570 Pls
1350 3479 Pls
1301 3386 Pls
1253 3291 Pls
1204 3194 Pls
1156 3095 Pls
1107 2995 Pls
1059 2894 Pls
1011 2792 Pls
962 2689 Pls
6821 2276 Pls
6869 2379 Pls
6917 2482 Pls
6966 2586 Pls
6627 1874 Pls
6675 1973 Pls
6724 2073 Pls
6772 2174 Pls
6433 1498 Pls
6482 1589 Pls
6530 1682 Pls
6578 1777 Pls
6240 1164 Pls
6288 1243 Pls
6336 1325 Pls
6385 1410 Pls
6046 885 Pls
6094 949 Pls
6143 1017 Pls
6191 1089 Pls
5901 719 Pls
5949 770 Pls
5997 826 Pls
5707 562 Pls
5755 594 Pls
5804 631 Pls
5852 673 Pls
5513 485 Pls
5562 497 Pls
5610 514 Pls
5659 536 Pls
5320 490 Pls
5368 481 Pls
5416 477 Pls
5465 479 Pls
5126 578 Pls
5174 548 Pls
5223 524 Pls
5271 505 Pls
4932 744 Pls
4981 696 Pls
5029 652 Pls
5078 612 Pls
4739 983 Pls
4787 917 Pls
4835 855 Pls
4884 797 Pls
4545 1284 Pls
4593 1203 Pls
4642 1126 Pls
4690 1052 Pls
4351 1635 Pls
4400 1543 Pls
4448 1454 Pls
4497 1367 Pls
4158 2022 Pls
4206 1923 Pls
4254 1825 Pls
4303 1729 Pls
3964 2431 Pls
4012 2328 Pls
4061 2225 Pls
4109 2123 Pls
3819 2740 Pls
3867 2637 Pls
3916 2534 Pls
3625 3145 Pls
3674 3046 Pls
3722 2945 Pls
3770 2843 Pls
3431 3525 Pls
3480 3433 Pls
3528 3339 Pls
3577 3243 Pls
3238 3865 Pls
3286 3784 Pls
3335 3701 Pls
3383 3614 Pls
3044 4151 Pls
3093 4085 Pls
3141 4016 Pls
3189 3942 Pls
2850 4372 Pls
2899 4324 Pls
2947 4271 Pls
2996 4213 Pls
2657 4520 Pls
2705 4490 Pls
2754 4456 Pls
2802 4416 Pls
2463 4587 Pls
2512 4578 Pls
2560 4563 Pls
2608 4544 Pls
2269 4571 Pls
2318 4583 Pls
2366 4589 Pls
2415 4591 Pls
2076 4474 Pls
2124 4506 Pls
2173 4532 Pls
2221 4554 Pls
1931 4349 Pls
1979 4395 Pls
2027 4437 Pls
1737 4119 Pls
1785 4183 Pls
1834 4242 Pls
1882 4298 Pls
1543 3825 Pls
1592 3904 Pls
1640 3979 Pls
1688 4051 Pls
1350 3479 Pls
1398 3570 Pls
1446 3658 Pls
1495 3743 Pls
1156 3095 Pls
1204 3194 Pls
1253 3291 Pls
1301 3386 Pls
962 2689 Pls
1011 2792 Pls
1059 2894 Pls
1107 2995 Pls
6821 2276 Pls
6869 2379 Pls
6917 2482 Pls
6966 2586 Pls
6627 1874 Pls
6675 1973 Pls
6724 2073 Pls
6772 2174 Pls
6433 1498 Pls
6482 1589 Pls
6530 1682 Pls
6578 1777 Pls
6240 1164 Pls
6288 1243 Pls
6336 1325 Pls
6385 1410 Pls
6046 885 Pls
6094 949 Pls
6143 1017 Pls
6191 1089 Pls
5901 719 Pls
5949 770 Pls
5997 826 Pls
5707 562 Pls
5755 594 Pls
5804 631 Pls
5852 673 Pls
5513 485 Pls
5562 497 Pls
5610 514 Pls
5659 536 Pls
5320 490 Pls
5368 481 Pls
5416 477 Pls
5465 479 Pls
5126 578 Pls
5174 548 Pls
5223 524 Pls
5271 505 Pls
4932 744 Pls
4981 696 Pls
5029 652 Pls
5078 612 Pls
4739 983 Pls
4787 917 Pls
4835 855 Pls
4884 797 Pls
4545 1284 Pls
4593 1203 Pls
4642 1126 Pls
4690 1052 Pls
4351 1635 Pls
4400 1543 Pls
4448 1454 Pls
4497 1367 Pls
4158 2022 Pls
4206 1923 Pls
4254 1825 Pls
4303 1729 Pls
3964 2431 Pls
4012 2328 Pls
4061 2225 Pls
4109 2123 Pls
3819 2740 Pls
3867 2637 Pls
3916 2534 Pls
3625 3145 Pls
3674 3046 Pls
3722 2945 Pls
3770 2843 Pls
3431 3525 Pls
3480 3433 Pls
3528 3339 Pls
3577 3243 Pls
3238 3865 Pls
3286 3784 Pls
3335 3701 Pls
3383 3614 Pls
3044 4151 Pls
3093 4085 Pls
3141 4016 Pls
3189 3942 Pls
2850 4372 Pls
2899 4324 Pls
2947 4271 Pls
2996 4213 Pls
2657 4520 Pls
2705 4490 Pls
2754 4456 Pls
2802 4416 Pls
2463 4587 Pls
2512 4578 Pls
2560 4563 Pls
2608 4544 Pls
2269 4571 Pls
2318 4583 Pls
2366 4589 Pls
2415 4591 Pls
2076 4474 Pls
2124 4506 Pls
2173 4532 Pls
2221 4554 Pls
1931 4349 Pls
1979 4395 Pls
2027 4437 Pls
1737 4119 Pls
1785 4183 Pls
1834 4242 Pls
1882 4298 Pls
1543 3825 Pls
1592 3904 Pls
1640 3979 Pls
1688 4051 Pls
1350 3479 Pls
1398 3570 Pls
1446 3658 Pls
1495 3743 Pls
1156 3095 Pls
1204 3194 Pls
1253 3291 Pls
1301 3386 Pls
962 2689 Pls
1011 2792 Pls
1059 2894 Pls
1107 2995 Pls
6622 721 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=08753999 ms)]
] -46.7 MRshow
LT1
6966 2542 Crs
6917 2526 Crs
6869 2510 Crs
6821 2494 Crs
6772 2478 Crs
6724 2462 Crs
6675 2446 Crs
6627 2430 Crs
6578 2414 Crs
6530 2398 Crs
6482 2383 Crs
6433 2367 Crs
6385 2351 Crs
6336 2336 Crs
6288 2320 Crs
6240 2305 Crs
6191 2290 Crs
6143 2275 Crs
6094 2260 Crs
6046 2245 Crs
5998 2230 Crs
5949 2216 Crs
5901 2202 Crs
5852 2188 Crs
5804 2174 Crs
5756 2161 Crs
5707 2148 Crs
5659 2135 Crs
5610 2123 Crs
5562 2111 Crs
5514 2100 Crs
5465 2090 Crs
5417 2080 Crs
5368 2070 Crs
5320 2062 Crs
5272 2054 Crs
5223 2048 Crs
5175 2042 Crs
5126 2038 Crs
5078 2035 Crs
5030 2033 Crs
4981 2032 Crs
4933 2033 Crs
4884 2036 Crs
4836 2041 Crs
4788 2047 Crs
4739 2056 Crs
4691 2067 Crs
4642 2080 Crs
4594 2095 Crs
4546 2112 Crs
4497 2133 Crs
4449 2155 Crs
4400 2180 Crs
4352 2207 Crs
4303 2237 Crs
4255 2269 Crs
4206 2302 Crs
4158 2338 Crs
4110 2375 Crs
4061 2414 Crs
4013 2453 Crs
3964 2493 Crs
3916 2534 Crs
3867 2575 Crs
3819 2615 Crs
3770 2654 Crs
3722 2693 Crs
3673 2730 Crs
3625 2766 Crs
3576 2799 Crs
3528 2831 Crs
3479 2861 Crs
3431 2888 Crs
3382 2913 Crs
3334 2935 Crs
3286 2956 Crs
3237 2973 Crs
3189 2988 Crs
3140 3001 Crs
3092 3012 Crs
3043 3021 Crs
2995 3027 Crs
2947 3032 Crs
2898 3035 Crs
2850 3036 Crs
2801 3035 Crs
2753 3033 Crs
2705 3030 Crs
2656 3026 Crs
2608 3020 Crs
2559 3014 Crs
2511 3006 Crs
2463 2998 Crs
2414 2988 Crs
2366 2978 Crs
2318 2968 Crs
2269 2957 Crs
2221 2945 Crs
2172 2933 Crs
2124 2920 Crs
2076 2907 Crs
2027 2894 Crs
1979 2880 Crs
1930 2866 Crs
1882 2852 Crs
1834 2838 Crs
1785 2823 Crs
1737 2808 Crs
1688 2793 Crs
1640 2778 Crs
1592 2763 Crs
1543 2748 Crs
1495 2732 Crs
1446 2717 Crs
1398 2701 Crs
1350 2685 Crs
1301 2670 Crs
1253 2654 Crs
1204 2638 Crs
1156 2622 Crs
1107 2606 Crs
1059 2590 Crs
1011 2574 Crs
962 2558 Crs
6821 2494 Crs
6869 2510 Crs
6917 2526 Crs
6966 2542 Crs
6675 2446 Crs
6724 2462 Crs
6772 2478 Crs
6627 2430 Crs
6482 2383 Crs
6530 2398 Crs
6578 2414 Crs
6433 2367 Crs
6288 2320 Crs
6336 2336 Crs
6385 2351 Crs
6240 2305 Crs
6094 2260 Crs
6143 2274 Crs
6191 2290 Crs
6046 2245 Crs
5901 2202 Crs
5949 2216 Crs
5998 2230 Crs
5756 2161 Crs
5804 2174 Crs
5707 2148 Crs
5852 2188 Crs
5562 2111 Crs
5610 2123 Crs
5514 2100 Crs
5659 2135 Crs
5369 2070 Crs
5417 2080 Crs
5320 2062 Crs
5465 2090 Crs
5175 2042 Crs
5223 2048 Crs
5127 2038 Crs
5272 2054 Crs
4981 2032 Crs
5030 2033 Crs
4933 2033 Crs
5078 2035 Crs
4788 2047 Crs
4836 2041 Crs
4885 2036 Crs
4739 2056 Crs
4594 2095 Crs
4642 2080 Crs
4691 2067 Crs
4546 2112 Crs
4400 2180 Crs
4449 2155 Crs
4497 2133 Crs
4352 2207 Crs
4206 2302 Crs
4255 2269 Crs
4303 2237 Crs
4158 2338 Crs
4013 2453 Crs
4061 2414 Crs
4110 2375 Crs
3964 2493 Crs
3819 2615 Crs
3867 2575 Crs
3916 2534 Crs
3625 2766 Crs
3673 2730 Crs
3722 2693 Crs
3770 2654 Crs
3431 2888 Crs
3479 2861 Crs
3528 2831 Crs
3576 2799 Crs
3286 2956 Crs
3334 2935 Crs
3237 2973 Crs
3382 2913 Crs
3092 3012 Crs
3140 3001 Crs
3043 3021 Crs
3189 2988 Crs
2898 3035 Crs
2947 3032 Crs
2995 3027 Crs
2850 3036 Crs
2705 3030 Crs
2753 3033 Crs
2801 3035 Crs
2656 3026 Crs
2511 3006 Crs
2559 3014 Crs
2608 3020 Crs
2463 2998 Crs
2317 2968 Crs
2366 2978 Crs
2414 2988 Crs
2269 2957 Crs
2124 2920 Crs
2172 2933 Crs
2221 2945 Crs
2076 2907 Crs
1930 2866 Crs
1979 2880 Crs
2027 2894 Crs
1737 2808 Crs
1785 2823 Crs
1834 2838 Crs
1882 2852 Crs
1543 2748 Crs
1592 2763 Crs
1640 2778 Crs
1688 2794 Crs
1350 2685 Crs
1398 2701 Crs
1446 2717 Crs
1495 2732 Crs
1156 2622 Crs
1204 2638 Crs
1253 2654 Crs
1301 2670 Crs
962 2558 Crs
1011 2574 Crs
1059 2590 Crs
1107 2606 Crs
6821 2494 Crs
6869 2510 Crs
6917 2526 Crs
6966 2542 Crs
6675 2446 Crs
6724 2462 Crs
6772 2478 Crs
6627 2430 Crs
6482 2383 Crs
6530 2398 Crs
6578 2414 Crs
6433 2367 Crs
6288 2320 Crs
6336 2336 Crs
6385 2351 Crs
6240 2305 Crs
6094 2260 Crs
6143 2274 Crs
6191 2290 Crs
6046 2245 Crs
5901 2202 Crs
5949 2216 Crs
5998 2230 Crs
5756 2161 Crs
5804 2174 Crs
5707 2148 Crs
5852 2188 Crs
5562 2111 Crs
5610 2123 Crs
5514 2100 Crs
5659 2135 Crs
5369 2070 Crs
5417 2080 Crs
5320 2062 Crs
5465 2090 Crs
5175 2042 Crs
5223 2048 Crs
5127 2038 Crs
5272 2054 Crs
4981 2032 Crs
5030 2033 Crs
4933 2033 Crs
5078 2035 Crs
4788 2047 Crs
4836 2041 Crs
4885 2036 Crs
4739 2056 Crs
4594 2095 Crs
4642 2080 Crs
4691 2067 Crs
4546 2112 Crs
4400 2180 Crs
4449 2155 Crs
4497 2133 Crs
4352 2207 Crs
4206 2302 Crs
4255 2269 Crs
4303 2237 Crs
4158 2338 Crs
4013 2453 Crs
4061 2414 Crs
4110 2375 Crs
3964 2493 Crs
3819 2615 Crs
3867 2575 Crs
3916 2534 Crs
3625 2766 Crs
3673 2730 Crs
3722 2693 Crs
3770 2654 Crs
3431 2888 Crs
3479 2861 Crs
3528 2831 Crs
3576 2799 Crs
3286 2956 Crs
3334 2935 Crs
3237 2973 Crs
3382 2913 Crs
3092 3012 Crs
3140 3001 Crs
3043 3021 Crs
3189 2988 Crs
2898 3035 Crs
2947 3032 Crs
2995 3027 Crs
2850 3036 Crs
2705 3030 Crs
2753 3033 Crs
2801 3035 Crs
2656 3026 Crs
2511 3006 Crs
2559 3014 Crs
2608 3020 Crs
2463 2998 Crs
2317 2968 Crs
2366 2978 Crs
2414 2988 Crs
2269 2957 Crs
2124 2920 Crs
2172 2933 Crs
2221 2945 Crs
2076 2907 Crs
1930 2866 Crs
1979 2880 Crs
2027 2894 Crs
1737 2808 Crs
1785 2823 Crs
1834 2838 Crs
1882 2852 Crs
1543 2748 Crs
1592 2763 Crs
1640 2778 Crs
1688 2794 Crs
1350 2685 Crs
1398 2701 Crs
1446 2717 Crs
1495 2732 Crs
1156 2622 Crs
1204 2638 Crs
1253 2654 Crs
1301 2670 Crs
962 2558 Crs
1011 2574 Crs
1059 2590 Crs
1107 2606 Crs
6622 581 Crs
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
