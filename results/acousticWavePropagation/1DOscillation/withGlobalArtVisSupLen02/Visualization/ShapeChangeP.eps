%!PS-Adobe-2.0 EPSF-2.0
%%Title: Visualization/ShapeChangeP.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Aug 24 10:34:05 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Visualization/ShapeChangeP.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 24 10:34:05 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9975)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 865 M
5884 0 V
stroke
LTb
1106 865 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 865 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.998)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1282 M
5884 0 V
stroke
LTb
1106 1282 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1282 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9985)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1700 M
5884 0 V
stroke
LTb
1106 1700 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.999)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2117 M
5884 0 V
stroke
LTb
1106 2117 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9995)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2534 M
5884 0 V
stroke
LTb
1106 2534 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2951 M
5884 0 V
stroke
LTb
1106 2951 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2951 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0005)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3368 M
5884 0 V
stroke
LTb
1106 3368 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3368 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.001)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3786 M
5884 0 V
stroke
LTb
1106 3786 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3786 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0015)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4203 M
5884 0 V
stroke
LTb
1106 4203 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4203 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4620 M
5884 0 V
stroke
LTb
1106 4620 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.0025)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4172 V
stroke
LTb
1106 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (pressure)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (position)]
] -46.7 MCshow
LTb
4048 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (damping for 1D velocity oscillation)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=0)]
] -46.7 MRshow
LT0
6961 2534 Pls
6902 2534 Pls
6843 2534 Pls
6784 2534 Pls
6725 2534 Pls
6666 2534 Pls
6608 2534 Pls
6549 2534 Pls
6490 2534 Pls
6431 2534 Pls
6372 2534 Pls
6313 2534 Pls
6255 2534 Pls
6196 2534 Pls
6137 2534 Pls
6078 2534 Pls
6019 2534 Pls
5960 2534 Pls
5901 2534 Pls
5843 2534 Pls
5784 2534 Pls
5725 2534 Pls
5666 2534 Pls
5607 2534 Pls
5548 2534 Pls
5490 2534 Pls
5431 2534 Pls
5372 2534 Pls
5313 2534 Pls
5254 2534 Pls
5195 2534 Pls
5137 2534 Pls
5078 2534 Pls
5019 2534 Pls
4960 2534 Pls
4901 2534 Pls
4842 2534 Pls
4784 2534 Pls
4725 2534 Pls
4666 2534 Pls
4607 2534 Pls
4548 2534 Pls
4489 2534 Pls
4430 2534 Pls
4372 2534 Pls
4313 2534 Pls
4254 2534 Pls
4195 2534 Pls
4136 2534 Pls
4077 2534 Pls
4019 2534 Pls
3960 2534 Pls
3901 2534 Pls
3842 2534 Pls
3783 2534 Pls
3724 2534 Pls
3666 2534 Pls
3607 2534 Pls
3548 2534 Pls
3489 2534 Pls
3430 2534 Pls
3371 2534 Pls
3313 2534 Pls
3254 2534 Pls
3195 2534 Pls
3136 2534 Pls
3077 2534 Pls
3018 2534 Pls
2959 2534 Pls
2901 2534 Pls
2842 2534 Pls
2783 2534 Pls
2724 2534 Pls
2665 2534 Pls
2606 2534 Pls
2548 2534 Pls
2489 2534 Pls
2430 2534 Pls
2371 2534 Pls
2312 2534 Pls
2253 2534 Pls
2195 2534 Pls
2136 2534 Pls
2077 2534 Pls
2018 2534 Pls
1959 2534 Pls
1900 2534 Pls
1842 2534 Pls
1783 2534 Pls
1724 2534 Pls
1665 2534 Pls
1606 2534 Pls
1547 2534 Pls
1488 2534 Pls
1430 2534 Pls
1371 2534 Pls
1312 2534 Pls
1253 2534 Pls
1194 2534 Pls
1135 2534 Pls
6843 2534 Pls
6902 2534 Pls
6961 2534 Pls
6666 2534 Pls
6725 2534 Pls
6784 2534 Pls
6490 2534 Pls
6549 2534 Pls
6608 2534 Pls
6255 2534 Pls
6313 2534 Pls
6372 2534 Pls
6431 2534 Pls
6078 2534 Pls
6137 2534 Pls
6196 2534 Pls
5901 2534 Pls
5960 2534 Pls
6019 2534 Pls
5725 2534 Pls
5784 2534 Pls
5843 2534 Pls
5548 2534 Pls
5607 2534 Pls
5666 2534 Pls
5372 2534 Pls
5431 2534 Pls
5490 2534 Pls
5195 2534 Pls
5254 2534 Pls
5313 2534 Pls
5019 2534 Pls
5078 2534 Pls
5137 2534 Pls
4784 2534 Pls
4842 2534 Pls
4901 2534 Pls
4960 2534 Pls
4607 2534 Pls
4666 2534 Pls
4725 2534 Pls
4430 2534 Pls
4489 2534 Pls
4548 2534 Pls
4254 2534 Pls
4313 2534 Pls
4372 2534 Pls
4077 2534 Pls
4136 2534 Pls
4195 2534 Pls
3901 2534 Pls
3960 2534 Pls
4019 2534 Pls
3724 2534 Pls
3783 2534 Pls
3842 2534 Pls
3548 2534 Pls
3607 2534 Pls
3666 2534 Pls
3313 2534 Pls
3371 2534 Pls
3430 2534 Pls
3489 2534 Pls
3136 2534 Pls
3195 2534 Pls
3254 2534 Pls
2959 2534 Pls
3018 2534 Pls
3077 2534 Pls
2783 2534 Pls
2842 2534 Pls
2901 2534 Pls
2606 2534 Pls
2665 2534 Pls
2724 2534 Pls
2430 2534 Pls
2489 2534 Pls
2548 2534 Pls
2253 2534 Pls
2312 2534 Pls
2371 2534 Pls
2077 2534 Pls
2136 2534 Pls
2195 2534 Pls
1842 2534 Pls
1900 2534 Pls
1959 2534 Pls
2018 2534 Pls
1665 2534 Pls
1724 2534 Pls
1783 2534 Pls
1488 2534 Pls
1547 2534 Pls
1606 2534 Pls
1312 2534 Pls
1371 2534 Pls
1430 2534 Pls
1135 2534 Pls
1194 2534 Pls
1253 2534 Pls
6843 2534 Pls
6902 2534 Pls
6961 2534 Pls
6666 2534 Pls
6725 2534 Pls
6784 2534 Pls
6490 2534 Pls
6549 2534 Pls
6608 2534 Pls
6255 2534 Pls
6313 2534 Pls
6372 2534 Pls
6431 2534 Pls
6078 2534 Pls
6137 2534 Pls
6196 2534 Pls
5901 2534 Pls
5960 2534 Pls
6019 2534 Pls
5725 2534 Pls
5784 2534 Pls
5843 2534 Pls
5548 2534 Pls
5607 2534 Pls
5666 2534 Pls
5372 2534 Pls
5431 2534 Pls
5490 2534 Pls
5195 2534 Pls
5254 2534 Pls
5313 2534 Pls
5019 2534 Pls
5078 2534 Pls
5137 2534 Pls
4784 2534 Pls
4842 2534 Pls
4901 2534 Pls
4960 2534 Pls
4607 2534 Pls
4666 2534 Pls
4725 2534 Pls
4430 2534 Pls
4489 2534 Pls
4548 2534 Pls
4254 2534 Pls
4313 2534 Pls
4372 2534 Pls
4077 2534 Pls
4136 2534 Pls
4195 2534 Pls
3901 2534 Pls
3960 2534 Pls
4019 2534 Pls
3724 2534 Pls
3783 2534 Pls
3842 2534 Pls
3548 2534 Pls
3607 2534 Pls
3666 2534 Pls
3313 2534 Pls
3371 2534 Pls
3430 2534 Pls
3489 2534 Pls
3136 2534 Pls
3195 2534 Pls
3254 2534 Pls
2959 2534 Pls
3018 2534 Pls
3077 2534 Pls
2783 2534 Pls
2842 2534 Pls
2901 2534 Pls
2606 2534 Pls
2665 2534 Pls
2724 2534 Pls
2430 2534 Pls
2489 2534 Pls
2548 2534 Pls
2253 2534 Pls
2312 2534 Pls
2371 2534 Pls
2077 2534 Pls
2136 2534 Pls
2195 2534 Pls
1842 2534 Pls
1900 2534 Pls
1959 2534 Pls
2018 2534 Pls
1665 2534 Pls
1724 2534 Pls
1783 2534 Pls
1488 2534 Pls
1547 2534 Pls
1606 2534 Pls
1312 2534 Pls
1371 2534 Pls
1430 2534 Pls
1135 2534 Pls
1194 2534 Pls
1253 2534 Pls
6622 721 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=08313999 ms)]
] -46.7 MRshow
LT1
6961 4388 Crs
6902 4388 Crs
6843 4380 Crs
6784 4364 Crs
6725 4340 Crs
6667 4308 Crs
6608 4269 Crs
6549 4223 Crs
6490 4170 Crs
6432 4110 Crs
6373 4045 Crs
6314 3975 Crs
6255 3900 Crs
6196 3822 Crs
6138 3740 Crs
6079 3655 Crs
6020 3569 Crs
5961 3482 Crs
5902 3395 Crs
5844 3308 Crs
5785 3223 Crs
5726 3139 Crs
5667 3059 Crs
5608 2981 Crs
5550 2907 Crs
5491 2836 Crs
5432 2768 Crs
5373 2704 Crs
5314 2643 Crs
5255 2583 Crs
5197 2523 Crs
5138 2464 Crs
5079 2402 Crs
5020 2337 Crs
4961 2266 Crs
4902 2190 Crs
4843 2106 Crs
4785 2014 Crs
4726 1915 Crs
4667 1808 Crs
4608 1694 Crs
4549 1576 Crs
4490 1457 Crs
4431 1337 Crs
4372 1222 Crs
4313 1115 Crs
4254 1018 Crs
4195 937 Crs
4137 872 Crs
4078 828 Crs
4019 805 Crs
3960 805 Crs
3901 828 Crs
3842 872 Crs
3783 937 Crs
3724 1018 Crs
3665 1115 Crs
3606 1222 Crs
3547 1337 Crs
3488 1457 Crs
3429 1576 Crs
3370 1694 Crs
3312 1808 Crs
3253 1915 Crs
3194 2014 Crs
3135 2106 Crs
3076 2190 Crs
3017 2266 Crs
2958 2337 Crs
2899 2402 Crs
2841 2464 Crs
2782 2523 Crs
2723 2583 Crs
2664 2643 Crs
2605 2704 Crs
2546 2768 Crs
2488 2836 Crs
2429 2907 Crs
2370 2981 Crs
2311 3059 Crs
2252 3139 Crs
2194 3223 Crs
2135 3308 Crs
2076 3395 Crs
2017 3482 Crs
1958 3569 Crs
1899 3655 Crs
1841 3740 Crs
1782 3822 Crs
1723 3900 Crs
1664 3975 Crs
1606 4045 Crs
1547 4110 Crs
1488 4170 Crs
1429 4223 Crs
1370 4269 Crs
1312 4308 Crs
1253 4340 Crs
1194 4364 Crs
1135 4380 Crs
6843 4380 Crs
6902 4388 Crs
6961 4388 Crs
6667 4308 Crs
6725 4340 Crs
6784 4364 Crs
6490 4170 Crs
6549 4223 Crs
6608 4269 Crs
6314 3975 Crs
6373 4045 Crs
6255 3900 Crs
6432 4110 Crs
6138 3740 Crs
6196 3822 Crs
6079 3655 Crs
5961 3482 Crs
6020 3569 Crs
5902 3395 Crs
5785 3223 Crs
5844 3308 Crs
5726 3139 Crs
5608 2981 Crs
5667 3059 Crs
5550 2907 Crs
5432 2768 Crs
5373 2704 Crs
5491 2836 Crs
5197 2523 Crs
5255 2583 Crs
5314 2643 Crs
5020 2337 Crs
5079 2402 Crs
5138 2464 Crs
4843 2106 Crs
4902 2190 Crs
4785 2014 Crs
4961 2266 Crs
4667 1808 Crs
4726 1915 Crs
4608 1694 Crs
4490 1457 Crs
4549 1576 Crs
4431 1337 Crs
4254 1018 Crs
4313 1115 Crs
4372 1222 Crs
4078 828 Crs
4137 872 Crs
4195 937 Crs
3901 828 Crs
3960 805 Crs
4019 805 Crs
3724 1018 Crs
3783 937 Crs
3842 872 Crs
3547 1337 Crs
3606 1222 Crs
3665 1115 Crs
3370 1694 Crs
3429 1576 Crs
3488 1457 Crs
3194 2014 Crs
3253 1915 Crs
3311 1808 Crs
3135 2106 Crs
3017 2266 Crs
3076 2190 Crs
2958 2337 Crs
2841 2464 Crs
2899 2402 Crs
2782 2523 Crs
2664 2643 Crs
2723 2583 Crs
2605 2704 Crs
2488 2836 Crs
2429 2907 Crs
2546 2768 Crs
2252 3139 Crs
2311 3059 Crs
2370 2981 Crs
2076 3395 Crs
2135 3308 Crs
2193 3223 Crs
1899 3655 Crs
1958 3569 Crs
2017 3482 Crs
1723 3900 Crs
1782 3822 Crs
1841 3740 Crs
1664 3975 Crs
1547 4110 Crs
1606 4045 Crs
1488 4170 Crs
1312 4308 Crs
1370 4269 Crs
1429 4223 Crs
1135 4380 Crs
1194 4364 Crs
1253 4340 Crs
6843 4380 Crs
6902 4388 Crs
6961 4388 Crs
6667 4308 Crs
6725 4340 Crs
6784 4364 Crs
6490 4170 Crs
6549 4223 Crs
6608 4269 Crs
6314 3975 Crs
6373 4045 Crs
6255 3900 Crs
6432 4110 Crs
6138 3740 Crs
6196 3822 Crs
6079 3655 Crs
5961 3482 Crs
6020 3569 Crs
5902 3395 Crs
5785 3223 Crs
5844 3308 Crs
5726 3139 Crs
5608 2981 Crs
5667 3059 Crs
5550 2907 Crs
5432 2768 Crs
5373 2704 Crs
5491 2836 Crs
5197 2523 Crs
5255 2583 Crs
5314 2643 Crs
5020 2337 Crs
5079 2402 Crs
5138 2464 Crs
4843 2106 Crs
4902 2190 Crs
4785 2014 Crs
4961 2266 Crs
4667 1808 Crs
4726 1915 Crs
4608 1694 Crs
4490 1457 Crs
4549 1576 Crs
4431 1337 Crs
4254 1018 Crs
4313 1115 Crs
4372 1222 Crs
4078 828 Crs
4137 872 Crs
4195 937 Crs
3901 828 Crs
3960 805 Crs
4019 805 Crs
3724 1018 Crs
3783 937 Crs
3842 872 Crs
3547 1337 Crs
3606 1222 Crs
3665 1115 Crs
3370 1694 Crs
3429 1576 Crs
3488 1457 Crs
3194 2014 Crs
3253 1915 Crs
3311 1808 Crs
3135 2106 Crs
3017 2266 Crs
3076 2190 Crs
2958 2337 Crs
2841 2464 Crs
2899 2402 Crs
2782 2523 Crs
2664 2643 Crs
2723 2583 Crs
2605 2704 Crs
2488 2836 Crs
2429 2907 Crs
2546 2768 Crs
2252 3139 Crs
2311 3059 Crs
2370 2981 Crs
2076 3395 Crs
2135 3308 Crs
2193 3223 Crs
1899 3655 Crs
1958 3569 Crs
2017 3482 Crs
1723 3900 Crs
1782 3822 Crs
1841 3740 Crs
1664 3975 Crs
1547 4110 Crs
1606 4045 Crs
1488 4170 Crs
1312 4308 Crs
1370 4269 Crs
1429 4223 Crs
1135 4380 Crs
1194 4364 Crs
1253 4340 Crs
6622 581 Crs
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
