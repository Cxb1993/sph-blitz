%!PS-Adobe-2.0 EPSF-2.0
%%Title: Density/02958039.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Wed Aug 25 11:19:43 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Density/02958039.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 25 11:19:43 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 448 M
6052 0 V
stroke
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
stroke
854 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.96)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 970 M
6052 0 V
stroke
LTb
938 970 M
63 0 V
5989 0 R
-63 0 V
stroke
854 970 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.97)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 1491 M
6052 0 V
stroke
LTb
938 1491 M
63 0 V
5989 0 R
-63 0 V
stroke
854 1491 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.98)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 2013 M
6052 0 V
stroke
LTb
938 2013 M
63 0 V
5989 0 R
-63 0 V
stroke
854 2013 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.99)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 2534 M
6052 0 V
stroke
LTb
938 2534 M
63 0 V
5989 0 R
-63 0 V
stroke
854 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 3056 M
6052 0 V
stroke
LTb
938 3056 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.01)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 3577 M
6052 0 V
stroke
LTb
938 3577 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3577 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.02)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 4099 M
6052 0 V
stroke
LTb
938 4099 M
63 0 V
5989 0 R
-63 0 V
stroke
854 4099 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.03)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 4620 M
6052 0 V
stroke
LTb
938 4620 M
63 0 V
5989 0 R
-63 0 V
stroke
854 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.04)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4172 V
stroke
LTb
938 448 M
0 63 V
0 4109 R
0 -63 V
stroke
938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2451 448 M
0 4172 V
stroke
LTb
2451 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2451 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3964 448 M
0 4172 V
stroke
LTb
3964 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3964 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5477 448 M
0 4172 V
stroke
LTb
5477 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5477 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (density)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3964 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (position)]
] -46.7 MCshow
LTb
3964 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (single wave propagation with reflection and interference)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 ( )]
] -46.7 MRshow
LT0
6975 2532 Pls
6945 2533 Pls
6914 2536 Pls
6884 2537 Pls
6854 2536 Pls
6824 2532 Pls
6793 2529 Pls
6763 2532 Pls
6733 2538 Pls
6703 2541 Pls
6672 2536 Pls
6642 2528 Pls
6612 2526 Pls
6581 2533 Pls
6551 2541 Pls
6521 2542 Pls
6491 2534 Pls
6460 2526 Pls
6430 2527 Pls
6400 2535 Pls
6370 2542 Pls
6339 2540 Pls
6309 2533 Pls
6279 2529 Pls
6249 2530 Pls
6218 2533 Pls
6188 2536 Pls
6158 2537 Pls
6128 2537 Pls
6097 2535 Pls
6067 2531 Pls
6037 2528 Pls
6007 2530 Pls
5976 2536 Pls
5946 2541 Pls
5916 2539 Pls
5886 2533 Pls
5855 2529 Pls
5825 2530 Pls
5795 2533 Pls
5764 2535 Pls
5734 2537 Pls
5704 2540 Pls
5674 2545 Pls
5643 2546 Pls
5613 2544 Pls
5583 2545 Pls
5553 2558 Pls
5522 2584 Pls
5492 2619 Pls
5462 2656 Pls
5432 2696 Pls
5402 2744 Pls
5372 2805 Pls
5341 2884 Pls
5311 2981 Pls
5281 3086 Pls
5252 3185 Pls
5222 3265 Pls
5192 3317 Pls
5162 3339 Pls
5132 3334 Pls
5102 3309 Pls
5073 3270 Pls
5043 3225 Pls
5013 3178 Pls
4983 3133 Pls
4953 3091 Pls
4923 3047 Pls
4893 2991 Pls
4863 2916 Pls
4833 2823 Pls
4803 2723 Pls
4773 2626 Pls
4742 2540 Pls
4712 2472 Pls
4682 2420 Pls
4651 2373 Pls
4621 2314 Pls
4591 2237 Pls
4560 2151 Pls
4530 2065 Pls
4499 1987 Pls
4469 1922 Pls
4438 1871 Pls
4407 1836 Pls
4377 1810 Pls
4346 1792 Pls
4315 1791 Pls
4285 1818 Pls
4254 1871 Pls
4223 1938 Pls
4193 2008 Pls
4162 2072 Pls
4132 2125 Pls
4101 2164 Pls
4071 2193 Pls
4040 2219 Pls
4010 2240 Pls
3979 2246 Pls
3949 2232 Pls
3919 2206 Pls
3888 2168 Pls
3858 2117 Pls
3827 2049 Pls
3797 1973 Pls
3766 1902 Pls
3735 1846 Pls
3705 1812 Pls
3674 1804 Pls
3643 1818 Pls
3613 1844 Pls
3582 1874 Pls
3551 1910 Pls
3521 1947 Pls
3490 1975 Pls
3460 1999 Pls
3429 2033 Pls
3398 2089 Pls
3368 2164 Pls
3338 2247 Pls
3307 2330 Pls
3277 2407 Pls
3246 2472 Pls
3216 2531 Pls
3186 2585 Pls
3156 2642 Pls
3126 2701 Pls
3095 2762 Pls
3065 2829 Pls
3035 2896 Pls
3005 2967 Pls
2975 3051 Pls
2945 3143 Pls
2915 3230 Pls
2885 3293 Pls
2856 3332 Pls
2826 3353 Pls
2796 3357 Pls
2766 3332 Pls
2736 3283 Pls
2707 3215 Pls
2677 3135 Pls
2647 3054 Pls
2617 2975 Pls
2587 2900 Pls
2557 2830 Pls
2527 2766 Pls
2496 2713 Pls
2466 2674 Pls
2436 2641 Pls
2406 2613 Pls
2376 2590 Pls
2345 2573 Pls
2315 2563 Pls
2285 2558 Pls
2255 2549 Pls
2224 2540 Pls
2194 2540 Pls
2164 2541 Pls
2134 2539 Pls
2103 2533 Pls
2073 2533 Pls
2043 2537 Pls
2013 2537 Pls
1982 2531 Pls
1952 2532 Pls
1922 2537 Pls
1892 2535 Pls
1861 2531 Pls
1831 2534 Pls
1801 2535 Pls
1770 2534 Pls
1740 2534 Pls
1710 2532 Pls
1680 2536 Pls
1649 2535 Pls
1619 2532 Pls
1589 2535 Pls
1559 2535 Pls
1528 2533 Pls
1498 2534 Pls
1468 2534 Pls
1438 2535 Pls
1407 2534 Pls
1377 2533 Pls
1347 2535 Pls
1317 2535 Pls
1286 2533 Pls
1256 2534 Pls
1226 2535 Pls
1196 2533 Pls
1165 2534 Pls
1135 2535 Pls
1105 2534 Pls
1074 2532 Pls
1044 2533 Pls
1014 2470 Pls
984 2332 Pls
953 2258 Pls
6914 2536 Pls
6945 2533 Pls
6975 2532 Pls
6824 2532 Pls
6854 2536 Pls
6884 2537 Pls
6733 2538 Pls
6763 2532 Pls
6793 2529 Pls
6642 2528 Pls
6672 2536 Pls
6703 2541 Pls
6551 2541 Pls
6581 2533 Pls
6521 2542 Pls
6612 2526 Pls
6430 2527 Pls
6460 2526 Pls
6491 2534 Pls
6339 2540 Pls
6370 2542 Pls
6400 2535 Pls
6249 2530 Pls
6279 2529 Pls
6309 2533 Pls
6158 2537 Pls
6188 2536 Pls
6218 2533 Pls
6067 2531 Pls
6097 2535 Pls
6128 2537 Pls
5976 2536 Pls
6007 2530 Pls
6037 2528 Pls
5886 2533 Pls
5916 2539 Pls
5946 2541 Pls
5855 2529 Pls
5795 2533 Pls
5825 2530 Pls
5764 2535 Pls
5674 2545 Pls
5704 2540 Pls
5734 2537 Pls
5583 2545 Pls
5613 2544 Pls
5643 2546 Pls
5492 2619 Pls
5522 2584 Pls
5553 2558 Pls
5402 2744 Pls
5432 2696 Pls
5462 2656 Pls
5311 2981 Pls
5341 2884 Pls
5372 2805 Pls
5222 3265 Pls
5252 3185 Pls
5281 3086 Pls
5132 3334 Pls
5162 3339 Pls
5192 3317 Pls
5102 3309 Pls
5043 3225 Pls
5073 3270 Pls
5013 3178 Pls
4923 3047 Pls
4953 3091 Pls
4983 3133 Pls
4833 2823 Pls
4863 2916 Pls
4893 2991 Pls
4742 2540 Pls
4773 2626 Pls
4803 2723 Pls
4651 2373 Pls
4682 2420 Pls
4712 2472 Pls
4560 2151 Pls
4591 2237 Pls
4621 2314 Pls
4469 1922 Pls
4499 1987 Pls
4530 2065 Pls
4438 1871 Pls
4377 1810 Pls
4407 1836 Pls
4346 1792 Pls
4285 1818 Pls
4315 1791 Pls
4254 1871 Pls
4162 2072 Pls
4193 2008 Pls
4223 1938 Pls
4071 2193 Pls
4101 2164 Pls
4132 2125 Pls
3979 2246 Pls
4010 2240 Pls
4040 2219 Pls
3888 2168 Pls
3919 2206 Pls
3949 2232 Pls
3797 1973 Pls
3827 2049 Pls
3858 2117 Pls
3705 1812 Pls
3735 1846 Pls
3766 1902 Pls
3613 1844 Pls
3643 1818 Pls
3674 1804 Pls
3521 1947 Pls
3551 1910 Pls
3582 1874 Pls
3398 2089 Pls
3429 2033 Pls
3460 1999 Pls
3490 1975 Pls
3307 2330 Pls
3338 2247 Pls
3368 2164 Pls
3216 2531 Pls
3246 2472 Pls
3277 2407 Pls
3126 2701 Pls
3156 2642 Pls
3186 2585 Pls
3035 2896 Pls
3065 2829 Pls
3095 2762 Pls
2945 3143 Pls
2975 3051 Pls
3005 2967 Pls
2856 3332 Pls
2885 3293 Pls
2915 3230 Pls
2736 3283 Pls
2766 3332 Pls
2796 3357 Pls
2826 3353 Pls
2647 3054 Pls
2677 3135 Pls
2707 3215 Pls
2557 2830 Pls
2587 2900 Pls
2617 2975 Pls
2466 2674 Pls
2496 2713 Pls
2527 2766 Pls
2376 2590 Pls
2406 2613 Pls
2436 2641 Pls
2285 2558 Pls
2315 2563 Pls
2345 2573 Pls
2194 2540 Pls
2224 2540 Pls
2255 2549 Pls
2103 2533 Pls
2134 2539 Pls
2073 2533 Pls
2164 2541 Pls
1982 2531 Pls
2013 2537 Pls
2043 2537 Pls
1892 2535 Pls
1922 2537 Pls
1952 2532 Pls
1801 2535 Pls
1831 2534 Pls
1861 2531 Pls
1710 2532 Pls
1740 2534 Pls
1770 2534 Pls
1619 2532 Pls
1649 2535 Pls
1680 2536 Pls
1528 2533 Pls
1559 2535 Pls
1589 2535 Pls
1438 2535 Pls
1468 2534 Pls
1498 2534 Pls
1347 2535 Pls
1377 2533 Pls
1317 2535 Pls
1407 2534 Pls
1226 2535 Pls
1256 2534 Pls
1286 2533 Pls
1135 2535 Pls
1165 2534 Pls
1196 2533 Pls
1044 2533 Pls
1074 2532 Pls
1105 2534 Pls
953 2258 Pls
984 2332 Pls
1014 2470 Pls
6914 2536 Pls
6945 2533 Pls
6975 2532 Pls
6824 2532 Pls
6854 2536 Pls
6884 2537 Pls
6733 2538 Pls
6763 2532 Pls
6793 2529 Pls
6642 2528 Pls
6672 2536 Pls
6703 2541 Pls
6551 2541 Pls
6581 2533 Pls
6521 2542 Pls
6612 2526 Pls
6430 2527 Pls
6460 2526 Pls
6491 2534 Pls
6339 2540 Pls
6370 2542 Pls
6400 2535 Pls
6249 2530 Pls
6279 2529 Pls
6309 2533 Pls
6158 2537 Pls
6188 2536 Pls
6218 2533 Pls
6067 2531 Pls
6097 2535 Pls
6128 2537 Pls
5976 2536 Pls
6007 2530 Pls
6037 2528 Pls
5886 2533 Pls
5916 2539 Pls
5946 2541 Pls
5855 2529 Pls
5795 2533 Pls
5825 2530 Pls
5764 2535 Pls
5674 2545 Pls
5704 2540 Pls
5734 2537 Pls
5583 2545 Pls
5613 2544 Pls
5643 2546 Pls
5492 2619 Pls
5522 2584 Pls
5553 2558 Pls
5402 2744 Pls
5432 2696 Pls
5462 2656 Pls
5311 2981 Pls
5341 2884 Pls
5372 2805 Pls
5222 3265 Pls
5252 3185 Pls
5281 3086 Pls
5132 3334 Pls
5162 3339 Pls
5192 3317 Pls
5102 3309 Pls
5043 3225 Pls
5073 3270 Pls
5013 3178 Pls
4923 3047 Pls
4953 3091 Pls
4983 3133 Pls
4833 2823 Pls
4863 2916 Pls
4893 2991 Pls
4742 2540 Pls
4773 2626 Pls
4803 2723 Pls
4651 2373 Pls
4682 2420 Pls
4712 2472 Pls
4560 2151 Pls
4591 2237 Pls
4621 2314 Pls
4469 1922 Pls
4499 1987 Pls
4530 2065 Pls
4438 1871 Pls
4377 1810 Pls
4407 1836 Pls
4346 1792 Pls
4285 1818 Pls
4315 1791 Pls
4254 1871 Pls
4162 2072 Pls
4193 2008 Pls
4223 1938 Pls
4071 2193 Pls
4101 2164 Pls
4132 2125 Pls
3979 2246 Pls
4010 2240 Pls
4040 2219 Pls
3888 2168 Pls
3919 2206 Pls
3949 2232 Pls
3797 1973 Pls
3827 2049 Pls
3858 2117 Pls
3705 1812 Pls
3735 1846 Pls
3766 1902 Pls
3613 1844 Pls
3643 1818 Pls
3674 1804 Pls
3521 1947 Pls
3551 1910 Pls
3582 1874 Pls
3398 2089 Pls
3429 2033 Pls
3460 1999 Pls
3490 1975 Pls
3307 2330 Pls
3338 2247 Pls
3368 2164 Pls
3216 2531 Pls
3246 2472 Pls
3277 2407 Pls
3126 2701 Pls
3156 2642 Pls
3186 2585 Pls
3035 2896 Pls
3065 2829 Pls
3095 2762 Pls
2945 3143 Pls
2975 3051 Pls
3005 2967 Pls
2856 3332 Pls
2885 3293 Pls
2915 3230 Pls
2736 3283 Pls
2766 3332 Pls
2796 3357 Pls
2826 3353 Pls
2647 3054 Pls
2677 3135 Pls
2707 3215 Pls
2557 2830 Pls
2587 2900 Pls
2617 2975 Pls
2466 2674 Pls
2496 2713 Pls
2527 2766 Pls
2376 2590 Pls
2406 2613 Pls
2436 2641 Pls
2285 2558 Pls
2315 2563 Pls
2345 2573 Pls
2194 2540 Pls
2224 2540 Pls
2255 2549 Pls
2103 2533 Pls
2134 2539 Pls
2073 2533 Pls
2164 2541 Pls
1982 2531 Pls
2013 2537 Pls
2043 2537 Pls
1892 2535 Pls
1922 2537 Pls
1952 2532 Pls
1801 2535 Pls
1831 2534 Pls
1861 2531 Pls
1710 2532 Pls
1740 2534 Pls
1770 2534 Pls
1619 2532 Pls
1649 2535 Pls
1680 2536 Pls
1528 2533 Pls
1559 2535 Pls
1589 2535 Pls
1438 2535 Pls
1468 2534 Pls
1498 2534 Pls
1347 2535 Pls
1377 2533 Pls
1317 2535 Pls
1407 2534 Pls
1226 2535 Pls
1256 2534 Pls
1286 2533 Pls
1135 2535 Pls
1165 2534 Pls
1196 2533 Pls
1044 2533 Pls
1074 2532 Pls
1105 2534 Pls
953 2258 Pls
984 2332 Pls
1014 2470 Pls
6622 4487 Pls
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
