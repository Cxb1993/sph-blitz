%!PS-Adobe-2.0 EPSF-2.0
%%Title: Visualization/ShapeChangeP.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Aug 23 14:01:16 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Visualization/ShapeChangeP.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 23 14:01:16 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
5968 0 V
stroke
LTb
1022 448 M
63 0 V
5905 0 R
-63 0 V
stroke
938 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.992)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 969 M
5968 0 V
stroke
LTb
1022 969 M
63 0 V
5905 0 R
-63 0 V
stroke
938 969 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.994)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 1491 M
5968 0 V
stroke
LTb
1022 1491 M
63 0 V
5905 0 R
-63 0 V
stroke
938 1491 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.996)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 2012 M
5968 0 V
stroke
LTb
1022 2012 M
63 0 V
5905 0 R
-63 0 V
stroke
938 2012 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.998)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 2534 M
5968 0 V
stroke
LTb
1022 2534 M
63 0 V
5905 0 R
-63 0 V
stroke
938 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 3055 M
5968 0 V
stroke
LTb
1022 3055 M
63 0 V
5905 0 R
-63 0 V
stroke
938 3055 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 3577 M
5968 0 V
stroke
LTb
1022 3577 M
63 0 V
5905 0 R
-63 0 V
stroke
938 3577 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.004)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 4098 M
5968 0 V
stroke
LTb
1022 4098 M
63 0 V
5905 0 R
-63 0 V
stroke
938 4098 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.006)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 4620 M
5968 0 V
stroke
LTb
1022 4620 M
63 0 V
5905 0 R
-63 0 V
stroke
938 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.008)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
0 4172 V
stroke
LTb
1022 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1022 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (pressure)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4006 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (position)]
] -46.7 MCshow
LTb
4006 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (damping for 1D velocity oscillation)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=0)]
] -46.7 MRshow
LT0
6955 2534 Pls
6895 2595 Pls
6836 2716 Pls
6776 2837 Pls
6717 2957 Pls
6657 3075 Pls
6597 3191 Pls
6538 3304 Pls
6478 3414 Pls
6419 3521 Pls
6359 3624 Pls
6300 3722 Pls
6240 3816 Pls
6181 3905 Pls
6122 3988 Pls
6062 4066 Pls
6003 4137 Pls
5943 4203 Pls
5884 4261 Pls
5825 4313 Pls
5765 4358 Pls
5706 4396 Pls
5646 4426 Pls
5587 4449 Pls
5528 4464 Pls
5468 4472 Pls
5409 4472 Pls
5350 4464 Pls
5290 4449 Pls
5231 4426 Pls
5171 4396 Pls
5112 4358 Pls
5053 4313 Pls
4993 4261 Pls
4934 4203 Pls
4874 4137 Pls
4815 4066 Pls
4756 3988 Pls
4696 3905 Pls
4637 3816 Pls
4577 3722 Pls
4518 3624 Pls
4458 3521 Pls
4399 3414 Pls
4339 3304 Pls
4279 3191 Pls
4220 3075 Pls
4160 2957 Pls
4101 2837 Pls
4041 2716 Pls
3981 2595 Pls
3922 2473 Pls
3862 2352 Pls
3802 2231 Pls
3742 2111 Pls
3683 1993 Pls
3623 1877 Pls
3563 1764 Pls
3503 1654 Pls
3443 1547 Pls
3383 1444 Pls
3323 1346 Pls
3264 1252 Pls
3204 1163 Pls
3144 1080 Pls
3084 1002 Pls
3024 931 Pls
2964 865 Pls
2904 807 Pls
2844 755 Pls
2784 710 Pls
2724 672 Pls
2664 642 Pls
2604 619 Pls
2544 604 Pls
2484 596 Pls
2424 596 Pls
2364 604 Pls
2304 619 Pls
2244 642 Pls
2184 672 Pls
2124 710 Pls
2064 755 Pls
2004 807 Pls
1944 865 Pls
1884 931 Pls
1824 1002 Pls
1764 1080 Pls
1705 1163 Pls
1645 1252 Pls
1585 1346 Pls
1525 1444 Pls
1465 1547 Pls
1405 1654 Pls
1345 1764 Pls
1286 1877 Pls
1226 1993 Pls
1166 2111 Pls
1106 2231 Pls
1047 2352 Pls
6836 2716 Pls
6895 2595 Pls
6955 2534 Pls
6657 3075 Pls
6717 2957 Pls
6776 2837 Pls
6478 3414 Pls
6538 3304 Pls
6597 3191 Pls
6300 3722 Pls
6359 3624 Pls
6419 3521 Pls
6062 4066 Pls
6122 3988 Pls
6181 3905 Pls
6240 3816 Pls
5884 4261 Pls
5943 4203 Pls
6003 4137 Pls
5706 4396 Pls
5765 4358 Pls
5825 4313 Pls
5528 4464 Pls
5587 4449 Pls
5646 4426 Pls
5350 4464 Pls
5409 4472 Pls
5468 4472 Pls
5171 4396 Pls
5231 4426 Pls
5290 4449 Pls
4993 4261 Pls
5053 4313 Pls
5112 4358 Pls
4756 3988 Pls
4815 4066 Pls
4874 4137 Pls
4934 4203 Pls
4577 3722 Pls
4637 3816 Pls
4696 3905 Pls
4399 3414 Pls
4458 3521 Pls
4518 3624 Pls
4220 3075 Pls
4279 3191 Pls
4339 3304 Pls
4041 2716 Pls
4101 2837 Pls
4160 2957 Pls
3862 2352 Pls
3922 2473 Pls
3981 2595 Pls
3683 1993 Pls
3742 2111 Pls
3802 2231 Pls
3503 1654 Pls
3563 1764 Pls
3623 1877 Pls
3264 1252 Pls
3323 1346 Pls
3383 1444 Pls
3443 1547 Pls
3084 1002 Pls
3144 1080 Pls
3204 1163 Pls
2904 807 Pls
2964 865 Pls
3024 931 Pls
2724 672 Pls
2784 710 Pls
2844 755 Pls
2544 604 Pls
2604 619 Pls
2664 642 Pls
2364 604 Pls
2424 596 Pls
2484 596 Pls
2184 672 Pls
2244 642 Pls
2304 619 Pls
2004 807 Pls
2064 755 Pls
2124 710 Pls
1824 1002 Pls
1884 931 Pls
1944 865 Pls
1585 1346 Pls
1645 1252 Pls
1705 1163 Pls
1764 1080 Pls
1405 1654 Pls
1465 1547 Pls
1525 1444 Pls
1226 1993 Pls
1286 1877 Pls
1345 1764 Pls
1047 2352 Pls
1106 2231 Pls
1166 2111 Pls
6836 2716 Pls
6895 2595 Pls
6955 2534 Pls
6657 3075 Pls
6717 2957 Pls
6776 2837 Pls
6478 3414 Pls
6538 3304 Pls
6597 3191 Pls
6300 3722 Pls
6359 3624 Pls
6419 3521 Pls
6062 4066 Pls
6122 3988 Pls
6181 3905 Pls
6240 3816 Pls
5884 4261 Pls
5943 4203 Pls
6003 4137 Pls
5706 4396 Pls
5765 4358 Pls
5825 4313 Pls
5528 4464 Pls
5587 4449 Pls
5646 4426 Pls
5350 4464 Pls
5409 4472 Pls
5468 4472 Pls
5171 4396 Pls
5231 4426 Pls
5290 4449 Pls
4993 4261 Pls
5053 4313 Pls
5112 4358 Pls
4756 3988 Pls
4815 4066 Pls
4874 4137 Pls
4934 4203 Pls
4577 3722 Pls
4637 3816 Pls
4696 3905 Pls
4399 3414 Pls
4458 3521 Pls
4518 3624 Pls
4220 3075 Pls
4279 3191 Pls
4339 3304 Pls
4041 2716 Pls
4101 2837 Pls
4160 2957 Pls
3862 2352 Pls
3922 2473 Pls
3981 2595 Pls
3683 1993 Pls
3742 2111 Pls
3802 2231 Pls
3503 1654 Pls
3563 1764 Pls
3623 1877 Pls
3264 1252 Pls
3323 1346 Pls
3383 1444 Pls
3443 1547 Pls
3084 1002 Pls
3144 1080 Pls
3204 1163 Pls
2904 807 Pls
2964 865 Pls
3024 931 Pls
2724 672 Pls
2784 710 Pls
2844 755 Pls
2544 604 Pls
2604 619 Pls
2664 642 Pls
2364 604 Pls
2424 596 Pls
2484 596 Pls
2184 672 Pls
2244 642 Pls
2304 619 Pls
2004 807 Pls
2064 755 Pls
2124 710 Pls
1824 1002 Pls
1884 931 Pls
1944 865 Pls
1585 1346 Pls
1645 1252 Pls
1705 1163 Pls
1764 1080 Pls
1405 1654 Pls
1465 1547 Pls
1525 1444 Pls
1226 1993 Pls
1286 1877 Pls
1345 1764 Pls
1047 2352 Pls
1106 2231 Pls
1166 2111 Pls
6622 721 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=08673000 ms)]
] -46.7 MRshow
LT1
6959 2526 Crs
6899 2554 Crs
6839 2599 Crs
6780 2635 Crs
6720 2673 Crs
6660 2709 Crs
6601 2745 Crs
6541 2780 Crs
6482 2814 Crs
6422 2847 Crs
6362 2879 Crs
6303 2909 Crs
6243 2937 Crs
6184 2964 Crs
6124 2990 Crs
6064 3013 Crs
6005 3034 Crs
5945 3054 Crs
5886 3071 Crs
5826 3086 Crs
5766 3099 Crs
5707 3109 Crs
5647 3118 Crs
5588 3124 Crs
5528 3127 Crs
5469 3128 Crs
5409 3127 Crs
5349 3124 Crs
5290 3118 Crs
5230 3110 Crs
5171 3099 Crs
5111 3087 Crs
5051 3072 Crs
4992 3055 Crs
4932 3036 Crs
4873 3015 Crs
4813 2992 Crs
4753 2968 Crs
4694 2942 Crs
4634 2914 Crs
4575 2885 Crs
4515 2854 Crs
4455 2822 Crs
4396 2789 Crs
4336 2756 Crs
4276 2721 Crs
4217 2685 Crs
4157 2649 Crs
4097 2613 Crs
4038 2576 Crs
3978 2539 Crs
3918 2502 Crs
3858 2465 Crs
3799 2429 Crs
3739 2393 Crs
3679 2357 Crs
3620 2322 Crs
3560 2288 Crs
3500 2255 Crs
3440 2222 Crs
3381 2191 Crs
3321 2161 Crs
3261 2133 Crs
3201 2106 Crs
3142 2081 Crs
3082 2058 Crs
3022 2036 Crs
2962 2016 Crs
2902 1999 Crs
2843 1983 Crs
2783 1969 Crs
2723 1958 Crs
2663 1949 Crs
2604 1942 Crs
2544 1937 Crs
2484 1935 Crs
2424 1935 Crs
2364 1937 Crs
2305 1942 Crs
2245 1949 Crs
2185 1959 Crs
2125 1971 Crs
2066 1984 Crs
2006 2001 Crs
1946 2019 Crs
1886 2039 Crs
1827 2062 Crs
1767 2086 Crs
1707 2112 Crs
1647 2140 Crs
1588 2169 Crs
1528 2200 Crs
1468 2232 Crs
1408 2265 Crs
1349 2300 Crs
1289 2335 Crs
1229 2372 Crs
1170 2408 Crs
1110 2447 Crs
1050 2478 Crs
6839 2599 Crs
6899 2554 Crs
6959 2526 Crs
6660 2709 Crs
6720 2673 Crs
6780 2635 Crs
6482 2814 Crs
6541 2780 Crs
6601 2745 Crs
6303 2909 Crs
6362 2879 Crs
6422 2847 Crs
6064 3013 Crs
6124 2990 Crs
6184 2964 Crs
6243 2937 Crs
5886 3071 Crs
5945 3054 Crs
6005 3034 Crs
5707 3109 Crs
5766 3099 Crs
5826 3086 Crs
5528 3127 Crs
5588 3124 Crs
5647 3118 Crs
5349 3124 Crs
5409 3127 Crs
5469 3128 Crs
5171 3099 Crs
5230 3110 Crs
5290 3118 Crs
4992 3055 Crs
5051 3072 Crs
5111 3087 Crs
4813 2992 Crs
4873 3015 Crs
4932 3036 Crs
4753 2968 Crs
4575 2885 Crs
4634 2914 Crs
4694 2942 Crs
4396 2789 Crs
4455 2822 Crs
4515 2854 Crs
4217 2685 Crs
4276 2721 Crs
4336 2756 Crs
4038 2576 Crs
4097 2613 Crs
4157 2649 Crs
3858 2465 Crs
3918 2502 Crs
3978 2539 Crs
3679 2357 Crs
3739 2393 Crs
3799 2429 Crs
3500 2255 Crs
3560 2288 Crs
3620 2322 Crs
3321 2161 Crs
3381 2191 Crs
3440 2222 Crs
3261 2133 Crs
3082 2058 Crs
3142 2081 Crs
3201 2106 Crs
2902 1999 Crs
2962 2016 Crs
3022 2036 Crs
2723 1958 Crs
2783 1969 Crs
2843 1983 Crs
2544 1937 Crs
2604 1942 Crs
2663 1949 Crs
2364 1937 Crs
2424 1935 Crs
2484 1935 Crs
2185 1959 Crs
2245 1949 Crs
2305 1942 Crs
2006 2001 Crs
2066 1984 Crs
2125 1971 Crs
1827 2062 Crs
1886 2039 Crs
1946 2019 Crs
1588 2169 Crs
1647 2140 Crs
1707 2112 Crs
1767 2086 Crs
1408 2265 Crs
1468 2232 Crs
1528 2200 Crs
1229 2372 Crs
1289 2335 Crs
1349 2300 Crs
1050 2478 Crs
1110 2447 Crs
1170 2408 Crs
6839 2599 Crs
6899 2554 Crs
6959 2526 Crs
6660 2709 Crs
6720 2673 Crs
6780 2635 Crs
6482 2814 Crs
6541 2780 Crs
6601 2745 Crs
6303 2909 Crs
6362 2879 Crs
6422 2847 Crs
6064 3013 Crs
6124 2990 Crs
6184 2964 Crs
6243 2937 Crs
5886 3071 Crs
5945 3054 Crs
6005 3034 Crs
5707 3109 Crs
5766 3099 Crs
5826 3086 Crs
5528 3127 Crs
5588 3124 Crs
5647 3118 Crs
5349 3124 Crs
5409 3127 Crs
5469 3128 Crs
5171 3099 Crs
5230 3110 Crs
5290 3118 Crs
4992 3055 Crs
5051 3072 Crs
5111 3087 Crs
4813 2992 Crs
4873 3015 Crs
4932 3036 Crs
4753 2968 Crs
4575 2885 Crs
4634 2914 Crs
4694 2942 Crs
4396 2789 Crs
4455 2822 Crs
4515 2854 Crs
4217 2685 Crs
4276 2721 Crs
4336 2756 Crs
4038 2576 Crs
4097 2613 Crs
4157 2649 Crs
3858 2465 Crs
3918 2502 Crs
3978 2539 Crs
3679 2357 Crs
3739 2393 Crs
3799 2429 Crs
3500 2255 Crs
3560 2288 Crs
3620 2322 Crs
3321 2161 Crs
3381 2191 Crs
3440 2222 Crs
3261 2133 Crs
3082 2058 Crs
3142 2081 Crs
3201 2106 Crs
2902 1999 Crs
2962 2016 Crs
3022 2036 Crs
2723 1958 Crs
2783 1969 Crs
2843 1983 Crs
2544 1937 Crs
2604 1942 Crs
2663 1949 Crs
2364 1937 Crs
2424 1935 Crs
2484 1935 Crs
2185 1959 Crs
2245 1949 Crs
2305 1942 Crs
2006 2001 Crs
2066 1984 Crs
2125 1971 Crs
1827 2062 Crs
1886 2039 Crs
1946 2019 Crs
1588 2169 Crs
1647 2140 Crs
1707 2112 Crs
1767 2086 Crs
1408 2265 Crs
1468 2232 Crs
1528 2200 Crs
1229 2372 Crs
1289 2335 Crs
1349 2300 Crs
1050 2478 Crs
1110 2447 Crs
1170 2408 Crs
6622 581 Crs
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
