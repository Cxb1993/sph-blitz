%!PS-Adobe-2.0 EPSF-2.0
%%Title: Visualization/ShapeChangeV.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Aug 23 11:57:40 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Visualization/ShapeChangeV.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 23 11:57:40 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
5968 0 V
stroke
LTb
1022 448 M
63 0 V
5905 0 R
-63 0 V
stroke
938 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.008)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 970 M
5968 0 V
stroke
LTb
1022 970 M
63 0 V
5905 0 R
-63 0 V
stroke
938 970 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.006)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 1491 M
5968 0 V
stroke
LTb
1022 1491 M
63 0 V
5905 0 R
-63 0 V
stroke
938 1491 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.004)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 2013 M
5968 0 V
stroke
LTb
1022 2013 M
63 0 V
5905 0 R
-63 0 V
stroke
938 2013 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 2534 M
5968 0 V
stroke
LTb
1022 2534 M
63 0 V
5905 0 R
-63 0 V
stroke
938 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 3056 M
5968 0 V
stroke
LTb
1022 3056 M
63 0 V
5905 0 R
-63 0 V
stroke
938 3056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 3577 M
5968 0 V
stroke
LTb
1022 3577 M
63 0 V
5905 0 R
-63 0 V
stroke
938 3577 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.004)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 4099 M
5968 0 V
stroke
LTb
1022 4099 M
63 0 V
5905 0 R
-63 0 V
stroke
938 4099 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.006)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 4620 M
5968 0 V
stroke
LTb
1022 4620 M
63 0 V
5905 0 R
-63 0 V
stroke
938 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.008)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
0 4172 V
stroke
LTb
1022 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1022 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (velocity)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4006 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (position)]
] -46.7 MCshow
LTb
4006 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (damping for 1D velocity oscillation)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=0)]
] -46.7 MRshow
LT0
6955 2534 Pls
6895 2585 Pls
6836 2688 Pls
6776 2790 Pls
6717 2891 Pls
6657 2991 Pls
6597 3089 Pls
6538 3185 Pls
6478 3278 Pls
6419 3368 Pls
6359 3455 Pls
6300 3538 Pls
6240 3617 Pls
6181 3692 Pls
6122 3763 Pls
6062 3829 Pls
6003 3889 Pls
5943 3944 Pls
5884 3994 Pls
5825 4038 Pls
5765 4075 Pls
5706 4107 Pls
5646 4133 Pls
5587 4152 Pls
5528 4165 Pls
5468 4172 Pls
5409 4172 Pls
5350 4165 Pls
5290 4152 Pls
5231 4133 Pls
5171 4107 Pls
5112 4075 Pls
5053 4038 Pls
4993 3994 Pls
4934 3944 Pls
4874 3889 Pls
4815 3829 Pls
4756 3763 Pls
4696 3692 Pls
4637 3617 Pls
4577 3538 Pls
4518 3455 Pls
4458 3368 Pls
4399 3278 Pls
4339 3185 Pls
4279 3089 Pls
4220 2991 Pls
4160 2891 Pls
4101 2790 Pls
4041 2688 Pls
3981 2585 Pls
3922 2483 Pls
3862 2380 Pls
3802 2278 Pls
3742 2177 Pls
3683 2077 Pls
3623 1979 Pls
3563 1883 Pls
3503 1790 Pls
3443 1700 Pls
3383 1613 Pls
3323 1530 Pls
3264 1451 Pls
3204 1376 Pls
3144 1305 Pls
3084 1239 Pls
3024 1179 Pls
2964 1124 Pls
2904 1074 Pls
2844 1030 Pls
2784 993 Pls
2724 961 Pls
2664 935 Pls
2604 916 Pls
2544 903 Pls
2484 896 Pls
2424 896 Pls
2364 903 Pls
2304 916 Pls
2244 935 Pls
2184 961 Pls
2124 993 Pls
2064 1030 Pls
2004 1074 Pls
1944 1124 Pls
1884 1179 Pls
1824 1239 Pls
1764 1305 Pls
1705 1376 Pls
1645 1451 Pls
1585 1530 Pls
1525 1613 Pls
1465 1700 Pls
1405 1790 Pls
1345 1883 Pls
1286 1979 Pls
1226 2077 Pls
1166 2177 Pls
1106 2278 Pls
1047 2380 Pls
6836 2688 Pls
6895 2585 Pls
6955 2534 Pls
6657 2991 Pls
6717 2891 Pls
6776 2790 Pls
6478 3278 Pls
6538 3185 Pls
6597 3089 Pls
6300 3538 Pls
6359 3455 Pls
6419 3368 Pls
6062 3829 Pls
6122 3763 Pls
6181 3692 Pls
6240 3617 Pls
5884 3994 Pls
5943 3944 Pls
6003 3889 Pls
5706 4107 Pls
5765 4075 Pls
5825 4038 Pls
5528 4165 Pls
5587 4152 Pls
5646 4133 Pls
5350 4165 Pls
5409 4172 Pls
5468 4172 Pls
5171 4107 Pls
5231 4133 Pls
5290 4152 Pls
4993 3994 Pls
5053 4038 Pls
5112 4075 Pls
4756 3763 Pls
4815 3829 Pls
4874 3889 Pls
4934 3944 Pls
4577 3538 Pls
4637 3617 Pls
4696 3692 Pls
4399 3278 Pls
4458 3368 Pls
4518 3455 Pls
4220 2991 Pls
4279 3089 Pls
4339 3185 Pls
4041 2688 Pls
4101 2790 Pls
4160 2891 Pls
3862 2380 Pls
3922 2483 Pls
3981 2585 Pls
3683 2077 Pls
3742 2177 Pls
3802 2278 Pls
3503 1790 Pls
3563 1883 Pls
3623 1979 Pls
3264 1451 Pls
3323 1530 Pls
3383 1613 Pls
3443 1700 Pls
3084 1239 Pls
3144 1305 Pls
3204 1376 Pls
2904 1074 Pls
2964 1124 Pls
3024 1179 Pls
2724 961 Pls
2784 993 Pls
2844 1030 Pls
2544 903 Pls
2604 916 Pls
2664 935 Pls
2364 903 Pls
2424 896 Pls
2484 896 Pls
2184 961 Pls
2244 935 Pls
2304 916 Pls
2004 1074 Pls
2064 1030 Pls
2124 993 Pls
1824 1239 Pls
1884 1179 Pls
1944 1124 Pls
1585 1530 Pls
1645 1451 Pls
1705 1376 Pls
1764 1305 Pls
1405 1790 Pls
1465 1700 Pls
1525 1613 Pls
1226 2077 Pls
1286 1979 Pls
1345 1883 Pls
1047 2380 Pls
1106 2278 Pls
1166 2177 Pls
6836 2688 Pls
6895 2585 Pls
6955 2534 Pls
6657 2991 Pls
6717 2891 Pls
6776 2790 Pls
6478 3278 Pls
6538 3185 Pls
6597 3089 Pls
6300 3538 Pls
6359 3455 Pls
6419 3368 Pls
6062 3829 Pls
6122 3763 Pls
6181 3692 Pls
6240 3617 Pls
5884 3994 Pls
5943 3944 Pls
6003 3889 Pls
5706 4107 Pls
5765 4075 Pls
5825 4038 Pls
5528 4165 Pls
5587 4152 Pls
5646 4133 Pls
5350 4165 Pls
5409 4172 Pls
5468 4172 Pls
5171 4107 Pls
5231 4133 Pls
5290 4152 Pls
4993 3994 Pls
5053 4038 Pls
5112 4075 Pls
4756 3763 Pls
4815 3829 Pls
4874 3889 Pls
4934 3944 Pls
4577 3538 Pls
4637 3617 Pls
4696 3692 Pls
4399 3278 Pls
4458 3368 Pls
4518 3455 Pls
4220 2991 Pls
4279 3089 Pls
4339 3185 Pls
4041 2688 Pls
4101 2790 Pls
4160 2891 Pls
3862 2380 Pls
3922 2483 Pls
3981 2585 Pls
3683 2077 Pls
3742 2177 Pls
3802 2278 Pls
3503 1790 Pls
3563 1883 Pls
3623 1979 Pls
3264 1451 Pls
3323 1530 Pls
3383 1613 Pls
3443 1700 Pls
3084 1239 Pls
3144 1305 Pls
3204 1376 Pls
2904 1074 Pls
2964 1124 Pls
3024 1179 Pls
2724 961 Pls
2784 993 Pls
2844 1030 Pls
2544 903 Pls
2604 916 Pls
2664 935 Pls
2364 903 Pls
2424 896 Pls
2484 896 Pls
2184 961 Pls
2244 935 Pls
2304 916 Pls
2004 1074 Pls
2064 1030 Pls
2124 993 Pls
1824 1239 Pls
1884 1179 Pls
1944 1124 Pls
1585 1530 Pls
1645 1451 Pls
1705 1376 Pls
1764 1305 Pls
1405 1790 Pls
1465 1700 Pls
1525 1613 Pls
1226 2077 Pls
1286 1979 Pls
1345 1883 Pls
1047 2380 Pls
1106 2278 Pls
1166 2177 Pls
6622 721 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (at t=08673000 ms)]
] -46.7 MRshow
LT1
6955 2497 Crs
6895 2611 Crs
6836 2733 Crs
6776 2849 Crs
6717 2961 Crs
6657 3078 Crs
6597 3189 Crs
6538 3282 Crs
6478 3383 Crs
6419 3474 Crs
6359 3571 Crs
6300 3656 Crs
6241 3732 Crs
6181 3812 Crs
6122 3880 Crs
6062 3930 Crs
6003 3985 Crs
5944 4035 Crs
5884 4071 Crs
5825 4109 Crs
5765 4136 Crs
5706 4153 Crs
5647 4169 Crs
5587 4173 Crs
5528 4181 Crs
5469 4180 Crs
5409 4156 Crs
5350 4135 Crs
5291 4117 Crs
5231 4088 Crs
5172 4045 Crs
5112 4011 Crs
5053 3952 Crs
4994 3906 Crs
4934 3855 Crs
4875 3797 Crs
4815 3716 Crs
4756 3644 Crs
4696 3586 Crs
4637 3506 Crs
4577 3435 Crs
4518 3359 Crs
4458 3270 Crs
4399 3191 Crs
4339 3098 Crs
4279 3005 Crs
4220 2923 Crs
4160 2833 Crs
4101 2741 Crs
4041 2642 Crs
3981 2550 Crs
3921 2458 Crs
3862 2369 Crs
3802 2268 Crs
3742 2188 Crs
3682 2095 Crs
3623 2006 Crs
3563 1923 Crs
3503 1835 Crs
3443 1764 Crs
3383 1675 Crs
3323 1594 Crs
3264 1521 Crs
3204 1442 Crs
3144 1377 Crs
3084 1307 Crs
3024 1257 Crs
2964 1199 Crs
2904 1137 Crs
2844 1100 Crs
2784 1050 Crs
2724 1017 Crs
2664 981 Crs
2604 951 Crs
2544 937 Crs
2484 919 Crs
2424 904 Crs
2364 903 Crs
2304 896 Crs
2244 902 Crs
2184 933 Crs
2124 964 Crs
2064 978 Crs
2004 1016 Crs
1944 1062 Crs
1884 1108 Crs
1824 1170 Crs
1764 1227 Crs
1705 1290 Crs
1645 1367 Crs
1585 1455 Crs
1525 1538 Crs
1465 1632 Crs
1405 1728 Crs
1345 1835 Crs
1286 1932 Crs
1226 2040 Crs
1166 2156 Crs
1106 2272 Crs
1047 2385 Crs
6836 2727 Crs
6895 2605 Crs
6955 2491 Crs
6657 3072 Crs
6717 2955 Crs
6776 2844 Crs
6478 3378 Crs
6538 3277 Crs
6597 3184 Crs
6300 3652 Crs
6359 3566 Crs
6419 3470 Crs
6062 3928 Crs
6122 3878 Crs
6181 3808 Crs
6241 3729 Crs
5884 4069 Crs
5944 4033 Crs
6003 3983 Crs
5706 4152 Crs
5765 4135 Crs
5825 4107 Crs
5528 4181 Crs
5587 4172 Crs
5647 4169 Crs
5350 4136 Crs
5409 4157 Crs
5469 4181 Crs
5172 4047 Crs
5231 4090 Crs
5291 4118 Crs
4994 3909 Crs
5053 3955 Crs
5112 4013 Crs
4815 3720 Crs
4875 3800 Crs
4934 3857 Crs
4756 3647 Crs
4577 3438 Crs
4637 3510 Crs
4696 3589 Crs
4399 3195 Crs
4458 3274 Crs
4518 3363 Crs
4220 2927 Crs
4279 3010 Crs
4339 3102 Crs
4041 2647 Crs
4101 2746 Crs
4160 2837 Crs
3862 2374 Crs
3921 2463 Crs
3981 2555 Crs
3682 2099 Crs
3742 2192 Crs
3802 2272 Crs
3503 1838 Crs
3563 1927 Crs
3623 2010 Crs
3323 1597 Crs
3383 1679 Crs
3443 1768 Crs
3264 1525 Crs
3084 1310 Crs
3144 1380 Crs
3204 1446 Crs
2904 1140 Crs
2964 1202 Crs
3024 1260 Crs
2724 1019 Crs
2784 1052 Crs
2844 1102 Crs
2544 937 Crs
2604 952 Crs
2664 982 Crs
2364 903 Crs
2424 904 Crs
2484 920 Crs
2184 931 Crs
2244 901 Crs
2304 896 Crs
2004 1014 Crs
2064 977 Crs
2124 963 Crs
1824 1167 Crs
1884 1105 Crs
1944 1060 Crs
1585 1451 Crs
1645 1363 Crs
1705 1286 Crs
1765 1224 Crs
1405 1723 Crs
1465 1627 Crs
1525 1534 Crs
1226 2034 Crs
1286 1927 Crs
1345 1830 Crs
1047 2380 Crs
1106 2266 Crs
1166 2151 Crs
6836 2727 Crs
6895 2605 Crs
6955 2491 Crs
6657 3072 Crs
6717 2955 Crs
6776 2844 Crs
6478 3378 Crs
6538 3277 Crs
6597 3184 Crs
6300 3652 Crs
6359 3566 Crs
6419 3470 Crs
6062 3928 Crs
6122 3878 Crs
6181 3808 Crs
6241 3729 Crs
5884 4069 Crs
5944 4033 Crs
6003 3983 Crs
5706 4152 Crs
5765 4135 Crs
5825 4107 Crs
5528 4181 Crs
5587 4172 Crs
5647 4169 Crs
5350 4136 Crs
5409 4157 Crs
5469 4181 Crs
5172 4047 Crs
5231 4090 Crs
5291 4118 Crs
4994 3909 Crs
5053 3955 Crs
5112 4013 Crs
4815 3720 Crs
4875 3800 Crs
4934 3857 Crs
4756 3647 Crs
4577 3438 Crs
4637 3510 Crs
4696 3589 Crs
4399 3195 Crs
4458 3274 Crs
4518 3363 Crs
4220 2927 Crs
4279 3010 Crs
4339 3102 Crs
4041 2647 Crs
4101 2746 Crs
4160 2837 Crs
3862 2374 Crs
3921 2463 Crs
3981 2555 Crs
3682 2099 Crs
3742 2192 Crs
3802 2272 Crs
3503 1838 Crs
3563 1927 Crs
3623 2010 Crs
3323 1597 Crs
3383 1679 Crs
3443 1768 Crs
3264 1525 Crs
3084 1310 Crs
3144 1380 Crs
3204 1446 Crs
2904 1140 Crs
2964 1202 Crs
3024 1260 Crs
2724 1019 Crs
2784 1052 Crs
2844 1102 Crs
2544 937 Crs
2604 952 Crs
2664 982 Crs
2364 903 Crs
2424 904 Crs
2484 920 Crs
2184 931 Crs
2244 901 Crs
2304 896 Crs
2004 1014 Crs
2064 977 Crs
2124 963 Crs
1824 1167 Crs
1884 1105 Crs
1944 1060 Crs
1585 1451 Crs
1645 1363 Crs
1705 1286 Crs
1765 1224 Crs
1405 1723 Crs
1465 1627 Crs
1525 1534 Crs
1226 2034 Crs
1286 1927 Crs
1345 1830 Crs
1047 2380 Crs
1106 2266 Crs
1166 2151 Crs
6622 581 Crs
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
