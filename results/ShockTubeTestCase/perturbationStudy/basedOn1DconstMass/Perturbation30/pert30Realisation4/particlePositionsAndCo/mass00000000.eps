%!PS-Adobe-2.0 EPSF-2.0
%%Title: particlePositionsAndCo/mass00000000.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Aug 16 11:14:37 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (particlePositionsAndCo/mass00000000.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 16 11:14:37 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 850 M
5884 0 V
stroke
LTb
1106 850 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 850 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0004)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1252 M
5884 0 V
stroke
LTb
1106 1252 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1252 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0006)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1655 M
5884 0 V
stroke
LTb
1106 1655 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1655 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0008)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2057 M
5884 0 V
stroke
LTb
1106 2057 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2057 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2459 M
5884 0 V
stroke
LTb
1106 2459 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2459 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0012)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2861 M
5884 0 V
stroke
LTb
1106 2861 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2861 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0014)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3263 M
5884 0 V
stroke
LTb
1106 3263 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3263 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0016)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3665 M
5884 0 V
stroke
LTb
1106 3665 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3665 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0018)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4068 M
5884 0 V
stroke
LTb
1106 4068 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4068 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4470 M
5884 0 V
stroke
LTb
1106 4470 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4470 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0022)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4872 M
5884 0 V
stroke
LTb
1106 4872 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0024)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4424 V
stroke
LTb
1106 448 M
0 63 V
0 4361 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2577 448 M
0 4424 V
stroke
LTb
2577 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2577 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.75)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4048 448 M
0 4424 V
stroke
LTb
4048 448 M
0 63 V
0 4361 R
0 -63 V
stroke
4048 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5519 448 M
0 4424 V
stroke
LTb
5519 448 M
0 63 V
0 4361 R
0 -63 V
stroke
5519 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.25)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4424 V
stroke
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4872 N
0 -4424 V
5884 0 V
0 4424 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (particle mass m)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (length x)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (particles)]
] -46.7 MRshow
LT0
6982 3401 Pls
6904 2600 Pls
6861 2668 Pls
6776 3383 Pls
6703 3009 Pls
6637 3315 Pls
6545 3191 Pls
6484 3298 Pls
6382 3483 Pls
6312 2482 Pls
6269 2597 Pls
6188 3527 Pls
6105 3166 Pls
6040 3076 Pls
5962 3340 Pls
5886 3605 Pls
5792 2655 Pls
5755 2720 Pls
5651 3601 Pls
5579 3027 Pls
5509 2534 Pls
5464 2742 Pls
5375 3298 Pls
5308 3004 Pls
5236 3593 Pls
5135 3091 Pls
5080 2679 Pls
5012 2934 Pls
4944 3189 Pls
4864 3412 Pls
4787 3350 Pls
4710 3189 Pls
4639 2810 Pls
4580 3228 Pls
4477 2782 Pls
4436 2688 Pls
4347 3945 Pls
4251 2884 Pls
4203 2881 Pls
4109 2017 Pls
4057 814 Pls
4037 4828 Pls
4032 4582 Pls
4022 4178 Pls
4012 3877 Pls
4003 3682 Pls
3991 3488 Pls
3985 3425 Pls
3974 3327 Pls
3964 3274 Pls
3956 3248 Pls
3946 3229 Pls
3940 3223 Pls
3928 3218 Pls
3917 3218 Pls
3912 3219 Pls
3899 3222 Pls
3893 3222 Pls
3880 3222 Pls
3872 3220 Pls
3862 3215 Pls
3855 3210 Pls
3844 3202 Pls
3836 3194 Pls
3826 3184 Pls
3816 3174 Pls
3807 3165 Pls
3798 3159 Pls
3789 3154 Pls
3781 3152 Pls
3770 3153 Pls
3765 3154 Pls
3754 3159 Pls
3743 3167 Pls
3736 3172 Pls
3727 3179 Pls
3716 3184 Pls
3709 3186 Pls
3697 3187 Pls
3691 3186 Pls
3679 3182 Pls
3668 3178 Pls
3660 3174 Pls
3655 3172 Pls
3642 3170 Pls
3633 3170 Pls
3627 3170 Pls
3618 3172 Pls
3607 3173 Pls
3597 3175 Pls
3590 3176 Pls
3579 3175 Pls
3568 3173 Pls
3559 3170 Pls
3551 3168 Pls
3545 3168 Pls
3534 3168 Pls
3524 3171 Pls
3517 3174 Pls
3505 3183 Pls
3499 3188 Pls
3489 3196 Pls
3476 3206 Pls
3470 3208 Pls
3462 3211 Pls
3452 3211 Pls
3441 3207 Pls
3431 3201 Pls
3423 3195 Pls
3412 3188 Pls
3405 3184 Pls
3393 3180 Pls
3387 3180 Pls
3378 3182 Pls
3370 3185 Pls
3358 3194 Pls
3350 3201 Pls
3339 3208 Pls
3332 3212 Pls
3324 3215 Pls
3310 3216 Pls
3305 3214 Pls
3292 3208 Pls
3283 3201 Pls
3274 3195 Pls
3267 3190 Pls
3259 3186 Pls
3248 3182 Pls
3240 3181 Pls
3228 3180 Pls
3218 3180 Pls
3214 3180 Pls
3204 3182 Pls
3192 3181 Pls
3183 3178 Pls
3175 3176 Pls
3164 3172 Pls
3155 3169 Pls
3147 3167 Pls
3137 3165 Pls
3128 3164 Pls
3121 3165 Pls
3113 3168 Pls
3100 3173 Pls
3094 3175 Pls
3083 3180 Pls
3074 3184 Pls
3065 3187 Pls
3053 3190 Pls
3048 3190 Pls
3037 3193 Pls
3030 3195 Pls
3017 3198 Pls
3010 3199 Pls
2999 3200 Pls
2993 3200 Pls
2984 3201 Pls
2973 3200 Pls
2961 3197 Pls
2954 3193 Pls
2942 3188 Pls
2936 3186 Pls
2927 3184 Pls
2916 3184 Pls
2911 3185 Pls
2896 3188 Pls
2892 3190 Pls
2882 3195 Pls
2872 3200 Pls
2863 3203 Pls
2851 3203 Pls
2841 3201 Pls
2836 3199 Pls
2824 3194 Pls
2817 3190 Pls
2806 3185 Pls
2797 3181 Pls
2788 3178 Pls
2781 3178 Pls
2768 3179 Pls
2761 3181 Pls
2754 3184 Pls
2743 3188 Pls
2733 3191 Pls
2724 3194 Pls
2715 3197 Pls
2706 3200 Pls
2695 3203 Pls
2687 3204 Pls
2678 3205 Pls
2670 3205 Pls
2662 3204 Pls
2651 3200 Pls
2642 3195 Pls
2630 3187 Pls
2621 3180 Pls
2612 3172 Pls
2603 3165 Pls
2595 3161 Pls
2587 3158 Pls
2580 3157 Pls
2569 3158 Pls
2558 3161 Pls
2549 3166 Pls
2542 3171 Pls
2533 3178 Pls
2521 3187 Pls
2511 3192 Pls
2506 3195 Pls
2497 3200 Pls
2486 3205 Pls
2474 3208 Pls
2466 3207 Pls
2459 3207 Pls
2450 3207 Pls
2437 3206 Pls
2433 3205 Pls
2418 3200 Pls
2410 3197 Pls
2402 3194 Pls
2396 3193 Pls
2382 3190 Pls
2376 3187 Pls
2364 3183 Pls
2356 3180 Pls
2350 3177 Pls
2337 3174 Pls
2328 3170 Pls
2318 3166 Pls
2311 3164 Pls
2300 3164 Pls
2292 3164 Pls
2285 3165 Pls
2273 3168 Pls
2267 3169 Pls
2256 3173 Pls
2248 3176 Pls
2236 3178 Pls
2227 3179 Pls
2220 3180 Pls
2209 3181 Pls
2201 3182 Pls
2189 3184 Pls
2184 3185 Pls
2174 3189 Pls
2165 3193 Pls
2156 3196 Pls
2145 3200 Pls
2138 3201 Pls
2125 3199 Pls
2118 3197 Pls
2108 3193 Pls
2099 3188 Pls
2090 3183 Pls
2082 3179 Pls
2069 3175 Pls
2063 3174 Pls
2054 3174 Pls
2046 3177 Pls
2035 3181 Pls
2027 3184 Pls
2017 3190 Pls
2007 3196 Pls
2000 3199 Pls
1988 3205 Pls
1979 3209 Pls
1969 3212 Pls
1964 3214 Pls
1954 3217 Pls
1943 3219 Pls
1933 3219 Pls
1924 3217 Pls
1917 3215 Pls
1905 3210 Pls
1894 3203 Pls
1886 3196 Pls
1879 3190 Pls
1870 3181 Pls
1860 3174 Pls
1850 3167 Pls
1841 3162 Pls
1830 3158 Pls
1824 3157 Pls
1813 3158 Pls
1807 3160 Pls
1798 3164 Pls
1784 3172 Pls
1780 3176 Pls
1769 3185 Pls
1757 3195 Pls
1752 3199 Pls
1743 3207 Pls
1730 3215 Pls
1724 3217 Pls
1713 3220 Pls
1702 3220 Pls
1695 3218 Pls
1686 3215 Pls
1675 3209 Pls
1665 3203 Pls
1658 3198 Pls
1647 3192 Pls
1639 3189 Pls
1631 3187 Pls
1621 3186 Pls
1610 3184 Pls
1602 3183 Pls
1593 3182 Pls
1587 3181 Pls
1575 3177 Pls
1566 3172 Pls
1554 3165 Pls
1546 3159 Pls
1539 3156 Pls
1527 3152 Pls
1521 3152 Pls
1510 3153 Pls
1504 3155 Pls
1495 3160 Pls
1483 3169 Pls
1475 3176 Pls
1466 3183 Pls
1454 3192 Pls
1448 3195 Pls
1436 3200 Pls
1430 3202 Pls
1420 3204 Pls
1408 3205 Pls
1402 3205 Pls
1389 3204 Pls
1383 3204 Pls
1375 3204 Pls
1364 3203 Pls
1357 3203 Pls
1343 3201 Pls
1333 3199 Pls
1326 3198 Pls
1319 3198 Pls
1309 3198 Pls
1301 3198 Pls
1289 3197 Pls
1282 3196 Pls
1273 3196 Pls
1261 3195 Pls
1251 3192 Pls
1242 3189 Pls
1236 3187 Pls
1226 3183 Pls
1214 3180 Pls
1210 3178 Pls
1196 3174 Pls
1190 3173 Pls
1179 3172 Pls
1169 3174 Pls
1163 3175 Pls
1149 3179 Pls
1145 3180 Pls
1134 3185 Pls
1124 3190 Pls
1117 3193 Pls
1106 3196 Pls
6622 4739 Pls
1.000 UL
LTb
1106 4872 N
0 -4424 V
5884 0 V
0 4424 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
