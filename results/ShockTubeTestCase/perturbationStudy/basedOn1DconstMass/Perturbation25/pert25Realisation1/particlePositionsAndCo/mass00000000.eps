%!PS-Adobe-2.0 EPSF-2.0
%%Title: particlePositionsAndCo/mass00000000.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Aug 16 10:27:27 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (particlePositionsAndCo/mass00000000.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 16 10:27:27 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1185 M
5884 0 V
stroke
LTb
1106 1185 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1185 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0005)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1923 M
5884 0 V
stroke
LTb
1106 1923 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1923 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2660 M
5884 0 V
stroke
LTb
1106 2660 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2660 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0015)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3397 M
5884 0 V
stroke
LTb
1106 3397 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3397 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4135 M
5884 0 V
stroke
LTb
1106 4135 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4135 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0025)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4872 M
5884 0 V
stroke
LTb
1106 4872 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.003)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4424 V
stroke
LTb
1106 448 M
0 63 V
0 4361 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2577 448 M
0 4424 V
stroke
LTb
2577 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2577 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.75)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4048 448 M
0 4424 V
stroke
LTb
4048 448 M
0 63 V
0 4361 R
0 -63 V
stroke
4048 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5519 448 M
0 4424 V
stroke
LTb
5519 448 M
0 63 V
0 4361 R
0 -63 V
stroke
5519 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.25)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4424 V
stroke
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4872 N
0 -4424 V
5884 0 V
0 4424 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (particle mass m)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (length x)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (particles)]
] -46.7 MRshow
LT0
6918 3130 Pls
6836 2937 Pls
6759 2551 Pls
6700 2723 Pls
6605 2485 Pls
6560 2426 Pls
6474 3001 Pls
6396 2902 Pls
6317 2440 Pls
6266 2513 Pls
6179 2933 Pls
6106 2500 Pls
6047 2531 Pls
5972 2945 Pls
5887 3182 Pls
5796 2879 Pls
5727 2380 Pls
5673 2558 Pls
5587 3076 Pls
5505 2836 Pls
5434 2677 Pls
5362 2433 Pls
5307 2573 Pls
5222 3075 Pls
5138 2378 Pls
5095 2496 Pls
4991 2853 Pls
4928 2356 Pls
4870 2647 Pls
4781 2718 Pls
4720 2564 Pls
4645 3015 Pls
4554 2996 Pls
4479 2335 Pls
4433 2455 Pls
4343 3039 Pls
4266 2667 Pls
4200 2581 Pls
4130 2458 Pls
4050 978 Pls
4040 4141 Pls
4029 3708 Pls
4022 3496 Pls
4013 3264 Pls
4002 3078 Pls
3993 2974 Pls
3984 2889 Pls
3972 2824 Pls
3965 2797 Pls
3958 2777 Pls
3946 2758 Pls
3939 2752 Pls
3930 2749 Pls
3920 2748 Pls
3908 2748 Pls
3902 2749 Pls
3894 2751 Pls
3883 2753 Pls
3874 2754 Pls
3862 2755 Pls
3857 2755 Pls
3845 2756 Pls
3838 2756 Pls
3828 2757 Pls
3819 2757 Pls
3807 2757 Pls
3800 2758 Pls
3792 2760 Pls
3782 2762 Pls
3771 2763 Pls
3763 2764 Pls
3756 2764 Pls
3746 2763 Pls
3734 2761 Pls
3725 2759 Pls
3717 2756 Pls
3706 2754 Pls
3699 2753 Pls
3690 2753 Pls
3681 2754 Pls
3673 2755 Pls
3662 2757 Pls
3653 2759 Pls
3642 2761 Pls
3635 2762 Pls
3625 2762 Pls
3614 2760 Pls
3608 2758 Pls
3598 2756 Pls
3586 2753 Pls
3578 2752 Pls
3570 2751 Pls
3561 2750 Pls
3551 2751 Pls
3544 2753 Pls
3534 2754 Pls
3523 2756 Pls
3514 2757 Pls
3504 2757 Pls
3497 2757 Pls
3486 2755 Pls
3477 2753 Pls
3469 2751 Pls
3459 2747 Pls
3448 2744 Pls
3442 2742 Pls
3432 2741 Pls
3422 2739 Pls
3414 2738 Pls
3402 2736 Pls
3397 2735 Pls
3387 2735 Pls
3378 2734 Pls
3366 2733 Pls
3357 2733 Pls
3350 2732 Pls
3341 2733 Pls
3332 2735 Pls
3322 2738 Pls
3315 2741 Pls
3303 2745 Pls
3294 2750 Pls
3285 2755 Pls
3277 2759 Pls
3269 2764 Pls
3256 2769 Pls
3249 2771 Pls
3239 2772 Pls
3231 2772 Pls
3221 2771 Pls
3210 2769 Pls
3204 2768 Pls
3191 2764 Pls
3182 2761 Pls
3175 2760 Pls
3166 2759 Pls
3158 2758 Pls
3146 2758 Pls
3137 2757 Pls
3131 2757 Pls
3118 2756 Pls
3112 2756 Pls
3100 2755 Pls
3090 2754 Pls
3082 2753 Pls
3072 2752 Pls
3066 2752 Pls
3055 2753 Pls
3045 2753 Pls
3038 2753 Pls
3027 2754 Pls
3019 2754 Pls
3009 2755 Pls
2998 2755 Pls
2988 2756 Pls
2981 2756 Pls
2972 2758 Pls
2965 2759 Pls
2954 2761 Pls
2947 2762 Pls
2936 2763 Pls
2924 2761 Pls
2915 2759 Pls
2908 2756 Pls
2897 2751 Pls
2889 2746 Pls
2880 2741 Pls
2872 2737 Pls
2861 2734 Pls
2853 2733 Pls
2843 2734 Pls
2832 2737 Pls
2825 2740 Pls
2818 2744 Pls
2809 2749 Pls
2799 2754 Pls
2790 2757 Pls
2777 2759 Pls
2768 2759 Pls
2761 2758 Pls
2751 2757 Pls
2741 2754 Pls
2733 2753 Pls
2726 2752 Pls
2715 2751 Pls
2704 2752 Pls
2699 2753 Pls
2687 2756 Pls
2676 2759 Pls
2669 2761 Pls
2661 2763 Pls
2649 2766 Pls
2643 2766 Pls
2634 2767 Pls
2621 2764 Pls
2612 2761 Pls
2602 2756 Pls
2597 2754 Pls
2585 2748 Pls
2575 2742 Pls
2566 2738 Pls
2558 2734 Pls
2551 2732 Pls
2540 2731 Pls
2529 2732 Pls
2524 2733 Pls
2513 2736 Pls
2502 2739 Pls
2494 2743 Pls
2487 2745 Pls
2478 2749 Pls
2466 2752 Pls
2457 2754 Pls
2447 2753 Pls
2441 2753 Pls
2429 2751 Pls
2422 2749 Pls
2412 2747 Pls
2402 2745 Pls
2391 2742 Pls
2384 2741 Pls
2377 2741 Pls
2367 2742 Pls
2356 2744 Pls
2349 2746 Pls
2336 2749 Pls
2330 2750 Pls
2321 2752 Pls
2312 2754 Pls
2303 2756 Pls
2291 2757 Pls
2283 2757 Pls
2272 2757 Pls
2266 2758 Pls
2257 2760 Pls
2247 2761 Pls
2236 2763 Pls
2228 2763 Pls
2218 2764 Pls
2211 2764 Pls
2199 2762 Pls
2192 2761 Pls
2181 2759 Pls
2171 2756 Pls
2162 2753 Pls
2153 2751 Pls
2146 2751 Pls
2137 2751 Pls
2128 2752 Pls
2118 2753 Pls
2106 2755 Pls
2100 2756 Pls
2088 2758 Pls
2082 2759 Pls
2072 2760 Pls
2060 2758 Pls
2052 2757 Pls
2046 2756 Pls
2034 2756 Pls
2024 2756 Pls
2016 2756 Pls
2006 2756 Pls
1999 2757 Pls
1989 2759 Pls
1979 2761 Pls
1972 2762 Pls
1959 2764 Pls
1951 2764 Pls
1942 2764 Pls
1933 2765 Pls
1924 2764 Pls
1913 2764 Pls
1907 2763 Pls
1895 2762 Pls
1887 2762 Pls
1878 2761 Pls
1868 2760 Pls
1858 2758 Pls
1851 2756 Pls
1840 2753 Pls
1831 2750 Pls
1822 2746 Pls
1812 2741 Pls
1803 2737 Pls
1795 2733 Pls
1787 2730 Pls
1777 2727 Pls
1766 2724 Pls
1759 2723 Pls
1748 2723 Pls
1740 2724 Pls
1732 2726 Pls
1723 2730 Pls
1713 2736 Pls
1702 2741 Pls
1696 2745 Pls
1686 2752 Pls
1678 2758 Pls
1668 2763 Pls
1656 2766 Pls
1649 2767 Pls
1638 2767 Pls
1631 2767 Pls
1619 2765 Pls
1613 2763 Pls
1601 2760 Pls
1595 2759 Pls
1582 2758 Pls
1576 2758 Pls
1564 2758 Pls
1558 2758 Pls
1545 2758 Pls
1540 2758 Pls
1528 2756 Pls
1520 2754 Pls
1509 2751 Pls
1500 2748 Pls
1490 2746 Pls
1483 2746 Pls
1474 2746 Pls
1463 2748 Pls
1457 2750 Pls
1445 2755 Pls
1438 2758 Pls
1429 2761 Pls
1418 2764 Pls
1407 2764 Pls
1400 2762 Pls
1389 2757 Pls
1381 2752 Pls
1372 2745 Pls
1362 2739 Pls
1354 2733 Pls
1345 2729 Pls
1335 2727 Pls
1327 2726 Pls
1317 2728 Pls
1308 2731 Pls
1301 2735 Pls
1290 2742 Pls
1283 2746 Pls
1272 2752 Pls
1262 2757 Pls
1255 2760 Pls
1243 2763 Pls
1234 2764 Pls
1225 2764 Pls
1216 2764 Pls
1209 2764 Pls
1199 2764 Pls
1188 2763 Pls
1179 2761 Pls
1168 2758 Pls
1162 2756 Pls
1153 2752 Pls
1142 2747 Pls
1133 2742 Pls
1124 2738 Pls
1113 2733 Pls
1107 2731 Pls
6622 4739 Pls
1.000 UL
LTb
1106 4872 N
0 -4424 V
5884 0 V
0 4424 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
