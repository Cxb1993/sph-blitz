%!PS-Adobe-2.0 EPSF-2.0
%%Title: particlePositionsAndCo/mass00000000.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Aug 16 10:36:12 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (particlePositionsAndCo/mass00000000.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 16 10:36:12 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 1333 M
5884 0 V
stroke
LTb
1106 1333 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1333 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0005)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 2218 M
5884 0 V
stroke
LTb
1106 2218 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2218 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3102 M
5884 0 V
stroke
LTb
1106 3102 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3102 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0015)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 3987 M
5884 0 V
stroke
LTb
1106 3987 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3987 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.002)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 4872 M
5884 0 V
stroke
LTb
1106 4872 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0025)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4424 V
stroke
LTb
1106 448 M
0 63 V
0 4361 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2577 448 M
0 4424 V
stroke
LTb
2577 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2577 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.75)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4048 448 M
0 4424 V
stroke
LTb
4048 448 M
0 63 V
0 4361 R
0 -63 V
stroke
4048 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5519 448 M
0 4424 V
stroke
LTb
5519 448 M
0 63 V
0 4361 R
0 -63 V
stroke
5519 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.25)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4424 V
stroke
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4872 N
0 -4424 V
5884 0 V
0 4424 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (particle mass m)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (length x)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (particles)]
] -46.7 MRshow
LT0
6984 3332 Pls
6916 2786 Pls
6860 2889 Pls
6785 3351 Pls
6705 3435 Pls
6626 3089 Pls
6563 3268 Pls
6469 3191 Pls
6410 3058 Pls
6327 3288 Pls
6257 3091 Pls
6187 3369 Pls
6100 3604 Pls
6018 2773 Pls
5973 2881 Pls
5877 3032 Pls
5826 3054 Pls
5727 2931 Pls
5681 2939 Pls
5581 3400 Pls
5516 3261 Pls
5429 2882 Pls
5380 2798 Pls
5301 3354 Pls
5225 3282 Pls
5151 3195 Pls
5079 3479 Pls
4986 3228 Pls
4924 2807 Pls
4861 2876 Pls
4795 3272 Pls
4707 3344 Pls
4638 3334 Pls
4552 2911 Pls
4502 2930 Pls
4413 3087 Pls
4356 3105 Pls
4265 3195 Pls
4204 3278 Pls
4105 2282 Pls
4036 960 Pls
4039 4694 Pls
4030 4292 Pls
4022 4007 Pls
4009 3675 Pls
4003 3562 Pls
3991 3408 Pls
3984 3346 Pls
3976 3293 Pls
3966 3257 Pls
3955 3233 Pls
3948 3224 Pls
3937 3217 Pls
3926 3212 Pls
3917 3210 Pls
3910 3208 Pls
3899 3206 Pls
3893 3205 Pls
3880 3205 Pls
3875 3206 Pls
3866 3208 Pls
3855 3213 Pls
3845 3217 Pls
3835 3220 Pls
3827 3220 Pls
3818 3220 Pls
3809 3218 Pls
3801 3216 Pls
3789 3210 Pls
3780 3206 Pls
3771 3201 Pls
3761 3198 Pls
3753 3197 Pls
3747 3197 Pls
3736 3199 Pls
3726 3201 Pls
3719 3203 Pls
3708 3208 Pls
3698 3213 Pls
3691 3216 Pls
3679 3220 Pls
3669 3221 Pls
3662 3222 Pls
3654 3222 Pls
3645 3223 Pls
3633 3222 Pls
3624 3220 Pls
3614 3218 Pls
3608 3217 Pls
3597 3216 Pls
3587 3214 Pls
3579 3212 Pls
3568 3209 Pls
3563 3209 Pls
3551 3208 Pls
3542 3208 Pls
3531 3207 Pls
3523 3208 Pls
3514 3210 Pls
3508 3212 Pls
3498 3216 Pls
3486 3220 Pls
3477 3223 Pls
3470 3225 Pls
3461 3226 Pls
3448 3225 Pls
3439 3223 Pls
3434 3221 Pls
3421 3215 Pls
3412 3211 Pls
3404 3208 Pls
3394 3206 Pls
3388 3205 Pls
3376 3206 Pls
3367 3207 Pls
3359 3208 Pls
3348 3209 Pls
3342 3210 Pls
3332 3210 Pls
3320 3208 Pls
3311 3204 Pls
3302 3200 Pls
3292 3195 Pls
3285 3192 Pls
3277 3190 Pls
3264 3188 Pls
3259 3188 Pls
3250 3188 Pls
3238 3189 Pls
3232 3191 Pls
3221 3194 Pls
3213 3196 Pls
3201 3198 Pls
3192 3199 Pls
3185 3201 Pls
3176 3204 Pls
3167 3208 Pls
3157 3213 Pls
3147 3219 Pls
3139 3223 Pls
3131 3227 Pls
3121 3232 Pls
3112 3236 Pls
3100 3239 Pls
3090 3237 Pls
3082 3235 Pls
3075 3234 Pls
3066 3232 Pls
3056 3230 Pls
3045 3227 Pls
3034 3226 Pls
3028 3225 Pls
3018 3227 Pls
3011 3228 Pls
3000 3231 Pls
2992 3231 Pls
2982 3231 Pls
2970 3228 Pls
2962 3226 Pls
2954 3222 Pls
2944 3217 Pls
2934 3210 Pls
2925 3203 Pls
2917 3198 Pls
2907 3193 Pls
2901 3190 Pls
2889 3186 Pls
2878 3183 Pls
2872 3182 Pls
2862 3183 Pls
2854 3184 Pls
2844 3186 Pls
2836 3189 Pls
2825 3194 Pls
2815 3200 Pls
2809 3205 Pls
2799 3214 Pls
2788 3224 Pls
2781 3230 Pls
2772 3238 Pls
2762 3246 Pls
2754 3251 Pls
2740 3254 Pls
2734 3254 Pls
2723 3250 Pls
2714 3246 Pls
2705 3241 Pls
2694 3234 Pls
2687 3229 Pls
2677 3222 Pls
2668 3217 Pls
2661 3213 Pls
2651 3209 Pls
2640 3204 Pls
2630 3200 Pls
2621 3196 Pls
2612 3192 Pls
2605 3190 Pls
2594 3187 Pls
2588 3187 Pls
2578 3187 Pls
2566 3191 Pls
2557 3195 Pls
2551 3199 Pls
2540 3207 Pls
2532 3214 Pls
2524 3220 Pls
2513 3227 Pls
2504 3232 Pls
2492 3234 Pls
2487 3234 Pls
2474 3230 Pls
2467 3226 Pls
2458 3221 Pls
2447 3211 Pls
2437 3203 Pls
2431 3198 Pls
2419 3191 Pls
2413 3188 Pls
2402 3185 Pls
2392 3185 Pls
2386 3185 Pls
2375 3187 Pls
2365 3190 Pls
2358 3193 Pls
2347 3198 Pls
2339 3201 Pls
2327 3205 Pls
2321 3208 Pls
2313 3211 Pls
2302 3215 Pls
2294 3219 Pls
2282 3223 Pls
2273 3227 Pls
2266 3230 Pls
2257 3233 Pls
2244 3237 Pls
2238 3238 Pls
2229 3238 Pls
2218 3237 Pls
2209 3235 Pls
2198 3230 Pls
2192 3225 Pls
2181 3217 Pls
2174 3213 Pls
2162 3205 Pls
2153 3200 Pls
2143 3196 Pls
2136 3195 Pls
2128 3195 Pls
2118 3198 Pls
2110 3202 Pls
2101 3207 Pls
2088 3216 Pls
2080 3222 Pls
2071 3227 Pls
2062 3231 Pls
2054 3234 Pls
2044 3235 Pls
2036 3234 Pls
2025 3230 Pls
2015 3224 Pls
2005 3216 Pls
1998 3210 Pls
1987 3203 Pls
1981 3199 Pls
1969 3193 Pls
1961 3190 Pls
1952 3190 Pls
1942 3193 Pls
1935 3196 Pls
1926 3202 Pls
1914 3210 Pls
1906 3214 Pls
1899 3219 Pls
1888 3224 Pls
1878 3226 Pls
1868 3225 Pls
1858 3222 Pls
1851 3219 Pls
1842 3216 Pls
1832 3212 Pls
1823 3208 Pls
1813 3205 Pls
1805 3203 Pls
1796 3202 Pls
1788 3203 Pls
1778 3206 Pls
1767 3208 Pls
1757 3211 Pls
1751 3214 Pls
1742 3218 Pls
1729 3224 Pls
1724 3226 Pls
1712 3229 Pls
1704 3230 Pls
1694 3230 Pls
1685 3230 Pls
1677 3228 Pls
1666 3224 Pls
1656 3219 Pls
1646 3214 Pls
1641 3211 Pls
1630 3208 Pls
1619 3204 Pls
1612 3202 Pls
1601 3200 Pls
1594 3200 Pls
1585 3201 Pls
1576 3203 Pls
1564 3206 Pls
1555 3207 Pls
1549 3209 Pls
1539 3212 Pls
1528 3214 Pls
1522 3215 Pls
1509 3217 Pls
1502 3217 Pls
1493 3217 Pls
1482 3218 Pls
1472 3218 Pls
1466 3218 Pls
1456 3219 Pls
1445 3219 Pls
1437 3220 Pls
1429 3221 Pls
1421 3224 Pls
1408 3226 Pls
1399 3227 Pls
1391 3227 Pls
1382 3226 Pls
1372 3224 Pls
1364 3221 Pls
1353 3216 Pls
1343 3211 Pls
1335 3206 Pls
1325 3202 Pls
1318 3200 Pls
1309 3200 Pls
1298 3202 Pls
1291 3204 Pls
1279 3208 Pls
1273 3211 Pls
1264 3217 Pls
1252 3224 Pls
1244 3227 Pls
1233 3228 Pls
1223 3228 Pls
1215 3227 Pls
1208 3226 Pls
1199 3223 Pls
1187 3218 Pls
1179 3215 Pls
1171 3212 Pls
1160 3208 Pls
1151 3207 Pls
1141 3205 Pls
1132 3203 Pls
1124 3202 Pls
1116 3201 Pls
1108 3201 Pls
6622 4739 Pls
1.000 UL
LTb
1106 4872 N
0 -4424 V
5884 0 V
0 4424 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
