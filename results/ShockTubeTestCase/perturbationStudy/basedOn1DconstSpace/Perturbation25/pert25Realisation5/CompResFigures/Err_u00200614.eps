%!PS-Adobe-2.0 EPSF-2.0
%%Title: CompResFigures/Err_u00200614.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sun Aug 15 18:03:28 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CompResFigures/Err_u00200614.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Aug 15 18:03:28 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
5492 0 V
stroke
LTb
854 448 M
63 0 V
5429 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 1252 M
5492 0 V
stroke
LTb
854 1252 M
63 0 V
5429 0 R
-63 0 V
stroke
770 1252 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 2057 M
5492 0 V
stroke
LTb
854 2057 M
63 0 V
5429 0 R
-63 0 V
stroke
770 2057 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 2861 M
5492 0 V
stroke
LTb
854 2861 M
63 0 V
5429 0 R
-63 0 V
stroke
770 2861 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 3665 M
5492 0 V
stroke
LTb
854 3665 M
63 0 V
5429 0 R
-63 0 V
stroke
770 3665 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 4470 M
4421 0 V
987 0 R
84 0 V
stroke
LTb
854 4470 M
63 0 V
5429 0 R
-63 0 V
stroke
770 4470 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4424 V
stroke
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2227 448 M
0 4424 V
stroke
LTb
2227 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2227 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.75)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3600 448 M
0 4424 V
stroke
LTb
3600 448 M
0 63 V
0 4361 R
0 -63 V
stroke
3600 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4973 448 M
0 4424 V
stroke
LTb
4973 448 M
0 63 V
0 4361 R
0 -63 V
stroke
4973 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.25)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6346 448 M
0 4424 V
stroke
LTb
6346 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6346 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
6346 448 M
-63 0 V
stroke
6430 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MLshow
1.000 UL
LTb
6346 1333 M
-63 0 V
stroke
6430 1333 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MLshow
1.000 UL
LTb
6346 2218 M
-63 0 V
stroke
6430 2218 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MLshow
1.000 UL
LTb
6346 3102 M
-63 0 V
stroke
6430 3102 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
1.000 UL
LTb
6346 3987 M
-63 0 V
stroke
6430 3987 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
1.000 UL
LTb
6346 4872 M
-63 0 V
stroke
6430 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
5492 0 V
0 4424 V
-5492 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (velocity u)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
6919 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (\(absolute\) error)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3600 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (length x)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
5695 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (exact)]
] -46.7 MRshow
LT0
5779 4739 M
399 0 V
6320 448 M
-28 0 V
-27 0 V
-29 0 V
-27 0 V
-29 0 V
-26 0 V
-30 0 V
-26 0 V
-29 0 V
-29 0 V
-29 0 V
-26 0 V
-29 0 V
-25 0 V
-26 0 V
-30 0 V
-27 0 V
-27 0 V
-28 0 V
-26 0 V
-28 0 V
-27 0 V
-27 0 V
-24 0 V
-29 0 V
-24 0 V
-24 0 V
-21 0 V
-20 0 V
-18 3730 V
-19 0 V
-16 0 V
-16 0 V
-13 0 V
-13 0 V
-13 0 V
-12 0 V
-13 0 V
-14 0 V
-12 0 V
-13 0 V
-13 0 V
-13 0 V
-13 0 V
-15 0 V
-12 0 V
-13 0 V
-14 0 V
-12 0 V
-14 0 V
-13 0 V
-13 0 V
-13 0 V
-11 0 V
-13 0 V
-12 0 V
-13 0 V
-14 0 V
-12 0 V
-13 0 V
-13 0 V
-13 0 V
-14 0 V
-13 0 V
-14 0 V
-12 0 V
-13 0 V
-12 0 V
-12 0 V
-14 0 V
-12 0 V
-13 0 V
-14 0 V
-11 0 V
-15 0 V
-14 0 V
-13 0 V
-15 0 V
-11 0 V
-12 0 V
-16 0 V
-13 0 V
-15 0 V
-12 0 V
-9 0 V
-10 0 V
-15 0 V
-19 0 V
-18 0 V
-10 0 V
-8 0 V
-6 0 V
-18 0 V
-27 0 V
-16 0 V
-2 0 V
-3 0 V
-5 0 V
-9 0 V
-61 0 V
-71 0 V
-62 0 V
stroke 4440 4178 M
-59 0 V
-61 0 V
-63 0 V
-67 0 V
-68 0 V
-66 0 V
-65 0 V
-62 0 V
-64 0 V
-67 0 V
-69 0 V
-65 0 V
-65 0 V
-66 0 V
-64 -162 V
-59 -180 V
-57 -175 V
-51 -155 V
-51 -154 V
-50 -151 V
-50 -153 V
-44 -133 V
-45 -139 V
-40 -122 V
-45 -134 V
-43 -133 V
-47 -141 V
-41 -125 V
-41 -126 V
-36 -110 V
-39 -119 V
-37 -111 V
-37 -114 V
-33 -99 V
-34 -104 V
-32 -97 V
-32 -97 V
-29 -90 V
-33 -99 V
-28 -87 V
2401 767 L
-28 -87 V
2340 580 L
-28 -84 V
-31 -48 V
-25 0 V
-30 0 V
-26 0 V
-29 0 V
-27 0 V
-29 0 V
-26 0 V
-29 0 V
-27 0 V
-24 0 V
-27 0 V
-26 0 V
-28 0 V
-29 0 V
-31 0 V
-27 0 V
-29 0 V
-25 0 V
-25 0 V
-28 0 V
-28 0 V
-29 0 V
-28 0 V
-25 0 V
-29 0 V
-26 0 V
-28 0 V
-28 0 V
-28 0 V
-26 0 V
-27 0 V
-28 0 V
-27 0 V
-30 0 V
-29 0 V
-27 0 V
-26 0 V
-26 0 V
-26 0 V
-31 0 V
-28 0 V
-28 0 V
-24 0 V
-30 0 V
-24 0 V
-30 0 V
-27 0 V
-28 0 V
-24 0 V
-31 0 V
-25 0 V
-28 0 V
stroke
LT1
LTb
5695 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (simu)]
] -46.7 MRshow
LT1
5779 4599 M
399 0 V
6078 448 M
-9 0 V
-29 4 V
-29 1 V
-26 1 V
-29 1 V
-25 1 V
-26 -6 V
-30 7 V
-27 -7 V
-27 2 V
-28 4 V
-26 7 V
-28 19 V
-27 36 V
-27 78 V
-24 101 V
-29 227 V
-24 266 V
-24 384 V
-21 376 V
-20 408 V
-18 386 V
-19 390 V
-16 296 V
-16 249 V
-13 162 V
-13 126 V
-13 99 V
-12 59 V
-13 35 V
-14 22 V
-12 2 V
-13 -3 V
-13 -5 V
-13 -10 V
-13 -12 V
-15 2 V
-12 -3 V
-13 4 V
-14 11 V
-12 4 V
-14 4 V
-13 4 V
-13 1 V
-13 -2 V
-11 3 V
-13 -3 V
-12 0 V
-13 -4 V
-14 3 V
-12 -9 V
-13 3 V
-13 5 V
-13 0 V
-14 4 V
-13 3 V
-14 1 V
-12 0 V
-13 5 V
-12 -3 V
-12 3 V
-14 0 V
-12 -5 V
-13 -1 V
-14 2 V
-11 1 V
-15 3 V
-14 -7 V
-13 -4 V
-15 -5 V
-11 8 V
-12 2 V
-15 -1 V
-14 -13 V
-15 -5 V
-12 -12 V
-9 -1 V
-10 20 V
-15 3 V
-19 -6 V
-18 -18 V
-10 1 V
-8 14 V
-6 17 V
-18 -9 V
-27 -15 V
-16 15 V
-2 10 V
-3 -2 V
-5 -1 V
-9 -2 V
-61 4 V
-71 7 V
-62 5 V
-59 1 V
-60 -6 V
-64 -24 V
-67 23 V
-68 17 V
-66 -3 V
-65 -16 V
-62 45 V
stroke 3929 4232 M
-64 20 V
-67 -42 V
-69 33 V
-65 92 V
-65 -61 V
-66 -201 V
-64 9 V
-59 -281 V
-57 -289 V
-51 -265 V
-51 -124 V
-50 -297 V
-50 -4 V
-44 -106 V
-45 -93 V
-40 -40 V
-45 -72 V
-43 -120 V
-47 -31 V
-41 -212 V
-41 -77 V
-36 -12 V
-40 -242 V
-36 -131 V
-37 -35 V
-33 -133 V
-34 -124 V
-32 -114 V
-32 -101 V
-29 -21 V
2463 990 L
2435 881 L
-34 -36 V
-28 -93 V
-33 -64 V
-28 -71 V
-31 -28 V
-25 -56 V
-30 -12 V
-26 -33 V
-29 -15 V
-27 -13 V
-29 0 V
-21 -12 V
-199 0 R
-27 6 V
-27 -5 V
-29 6 V
-25 -1 V
-25 -2 V
-28 0 V
-28 -2 V
-29 1 V
-28 -3 V
-1 0 V
-36 0 R
-17 6 V
-12 -6 V
-39 0 R
-4 1 V
-10 -1 V
-105 0 R
-21 3 V
-9 -3 V
-38 0 R
-10 3 V
-16 -3 V
-410 0 R
-13 4 V
-25 -2 V
-28 2 V
-1 0 V
stroke
LT2
LTb
5695 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (error)]
] -46.7 MRshow
LT2
5779 4459 M
399 0 V
6320 452 M
-28 4 V
-27 -2 V
-29 -2 V
-27 4 V
-29 -7 V
-26 6 V
-30 -6 V
-26 0 V
-29 -1 V
-29 4 V
-29 1 V
-26 1 V
-29 2 V
-25 1 V
-26 -6 V
-30 7 V
-27 -8 V
-27 2 V
-28 5 V
-26 8 V
-28 21 V
-27 39 V
-27 86 V
-24 111 V
-29 249 V
-24 293 V
-24 423 V
-21 413 V
-20 449 V
-18 -524 V
-19 -429 V
-16 -325 V
5474 997 L
5461 818 L
5448 680 L
5435 572 L
-12 -66 V
-13 -39 V
-14 -14 V
-12 1 V
-13 -3 V
-13 -1 V
-13 12 V
-13 12 V
-15 -2 V
-12 4 V
-13 -5 V
-14 -12 V
-12 -4 V
-14 -5 V
-13 0 V
-13 1 V
-13 -2 V
-11 3 V
-13 -3 V
-12 0 V
-13 2 V
-14 -3 V
-12 9 V
-13 -2 V
-13 -5 V
-13 -1 V
-14 3 V
-13 2 V
-14 1 V
-12 0 V
-13 6 V
-12 -3 V
-12 3 V
-14 0 V
-12 -5 V
-13 -2 V
-14 3 V
-11 1 V
-15 3 V
-14 -8 V
-13 -4 V
-15 3 V
-11 0 V
-12 3 V
-16 -2 V
-13 4 V
-15 6 V
-12 12 V
-9 2 V
-10 -22 V
-15 -3 V
-19 6 V
-18 20 V
-10 -1 V
-8 -16 V
-6 -7 V
-18 -1 V
-27 16 V
-16 -16 V
-2 1 V
-3 -2 V
-5 0 V
-9 -3 V
-61 5 V
-71 7 V
-62 6 V
-59 1 V
-61 -7 V
-63 0 V
-67 -1 V
-68 19 V
-66 -3 V
-65 -18 V
-62 50 V
-64 22 V
-67 -46 V
-69 35 V
-65 101 V
-65 -66 V
-66 10 V
-64 -43 V
-59 -34 V
-57 125 V
-51 120 V
-51 -33 V
-50 161 V
3151 697 L
-44 -31 V
-45 -50 V
-40 -90 V
-45 -68 V
-43 -6 V
-47 122 V
-41 -97 V
-41 55 V
-36 107 V
2730 504 L
-37 -22 V
-37 87 V
-33 -37 V
-34 -23 V
-32 -18 V
-32 -4 V
-29 76 V
-33 -76 V
-28 -25 V
-34 72 V
-28 -8 V
-33 41 V
-28 14 V
-31 22 V
-25 -62 V
-30 -13 V
-26 -36 V
-29 -17 V
-27 -13 V
-29 0 V
-26 -11 V
-29 -1 V
-27 -2 V
-24 7 V
-27 -3 V
-26 0 V
-28 -3 V
-29 0 V
-31 5 V
-27 -5 V
-29 7 V
-25 -1 V
-25 -2 V
-28 -1 V
-28 -1 V
-29 0 V
-28 -3 V
-25 5 V
-29 2 V
-26 1 V
-28 -7 V
-28 1 V
-28 0 V
-26 -1 V
-27 0 V
-28 3 V
-27 3 V
-30 -3 V
-29 -1 V
-27 5 V
-26 -7 V
-26 1 V
-26 6 V
-31 -7 V
-28 4 V
-28 1 V
-24 2 V
-30 -8 V
-24 13 V
-30 -10 V
-27 5 V
-28 -8 V
-24 6 V
-31 -2 V
-25 -2 V
-28 2 V
stroke
LTb
854 4872 N
854 448 L
5492 0 V
0 4424 V
-5492 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
