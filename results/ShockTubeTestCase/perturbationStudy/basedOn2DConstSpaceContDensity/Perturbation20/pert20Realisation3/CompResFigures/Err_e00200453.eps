%!PS-Adobe-2.0 EPSF-2.0
%%Title: CompResFigures/Err_e00200453.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Aug 17 13:23:22 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CompResFigures/Err_e00200453.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Oliver)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 17 13:23:22 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
5492 0 V
stroke
LTb
854 448 M
63 0 V
5429 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 1001 M
5492 0 V
stroke
LTb
854 1001 M
63 0 V
5429 0 R
-63 0 V
stroke
770 1001 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 1554 M
5492 0 V
stroke
LTb
854 1554 M
63 0 V
5429 0 R
-63 0 V
stroke
770 1554 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 2107 M
5492 0 V
stroke
LTb
854 2107 M
63 0 V
5429 0 R
-63 0 V
stroke
770 2107 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 2660 M
5492 0 V
stroke
LTb
854 2660 M
63 0 V
5429 0 R
-63 0 V
stroke
770 2660 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 3213 M
5492 0 V
stroke
LTb
854 3213 M
63 0 V
5429 0 R
-63 0 V
stroke
770 3213 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 3766 M
5492 0 V
stroke
LTb
854 3766 M
63 0 V
5429 0 R
-63 0 V
stroke
770 3766 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 4319 M
5492 0 V
stroke
LTb
854 4319 M
63 0 V
5429 0 R
-63 0 V
stroke
770 4319 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 4872 M
5492 0 V
stroke
LTb
854 4872 M
63 0 V
5429 0 R
-63 0 V
stroke
770 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4424 V
stroke
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2227 448 M
0 4424 V
stroke
LTb
2227 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2227 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.75)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3600 448 M
0 4424 V
stroke
LTb
3600 448 M
0 63 V
0 4361 R
0 -63 V
stroke
3600 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4973 448 M
0 4424 V
stroke
LTb
4973 448 M
0 63 V
0 4361 R
0 -63 V
stroke
4973 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.25)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6346 448 M
0 4424 V
stroke
LTb
6346 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6346 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
6346 448 M
-63 0 V
stroke
6430 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MLshow
1.000 UL
LTb
6346 1333 M
-63 0 V
stroke
6430 1333 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MLshow
1.000 UL
LTb
6346 2218 M
-63 0 V
stroke
6430 2218 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MLshow
1.000 UL
LTb
6346 3102 M
-63 0 V
stroke
6430 3102 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
1.000 UL
LTb
6346 3987 M
-63 0 V
stroke
6430 3987 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
1.000 UL
LTb
6346 4872 M
-63 0 V
stroke
6430 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
5492 0 V
0 4424 V
-5492 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (internal energy e)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
6919 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (\(absolute\) error)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3600 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (length x)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
5695 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (exact)]
] -46.7 MRshow
LT0
5779 4739 M
399 0 V
884 3213 M
24 0 V
30 0 V
25 0 V
28 0 V
28 0 V
28 0 V
29 0 V
24 0 V
32 0 V
21 0 V
32 0 V
23 0 V
31 0 V
24 0 V
30 0 V
26 0 V
28 0 V
30 0 V
27 0 V
30 0 V
24 0 V
30 0 V
26 0 V
29 0 V
24 0 V
31 0 V
22 0 V
31 0 V
24 0 V
32 0 V
24 0 V
31 0 V
26 0 V
27 0 V
28 0 V
25 0 V
30 0 V
27 0 V
28 0 V
27 0 V
28 0 V
26 0 V
32 0 V
20 0 V
35 0 V
19 0 V
37 0 V
19 0 V
39 0 V
17 0 V
41 0 V
17 -9 V
36 -25 V
24 -17 V
33 -23 V
29 -21 V
31 -21 V
33 -23 V
31 -21 V
35 -24 V
32 -22 V
31 -21 V
41 -27 V
25 -18 V
45 -30 V
30 -20 V
50 -33 V
27 -17 V
56 -37 V
25 -17 V
53 -34 V
34 -22 V
52 -33 V
35 -22 V
54 -35 V
44 -27 V
58 -36 V
50 -31 V
55 -34 V
58 -35 V
55 -33 V
64 -31 V
63 0 V
66 0 V
68 0 V
61 0 V
66 0 V
65 0 V
66 0 V
66 0 V
67 0 V
65 0 V
63 0 V
62 0 V
63 0 V
63 0 V
66 0 V
75 0 V
36 0 V
21 1190 V
16 0 V
10 0 V
stroke 4664 3604 M
3 0 V
6 0 V
24 0 V
22 0 V
9 0 V
6 0 V
9 0 V
20 0 V
17 0 V
13 0 V
9 0 V
11 0 V
13 0 V
16 0 V
15 0 V
13 0 V
11 0 V
11 0 V
14 0 V
15 0 V
14 0 V
13 0 V
11 0 V
12 0 V
13 0 V
15 0 V
13 0 V
13 0 V
11 0 V
14 0 V
12 0 V
15 0 V
13 0 V
12 0 V
13 0 V
12 0 V
13 0 V
14 0 V
13 0 V
13 0 V
14 0 V
12 0 V
13 0 V
14 0 V
12 0 V
14 0 V
11 0 V
14 0 V
12 0 V
16 0 V
10 0 V
16 0 V
10 0 V
17 0 V
10 0 V
16 0 V
11 0 V
14 0 V
11 0 V
13 0 V
13 0 V
12 0 V
14 0 V
15 0 V
13 0 V
20 0 V
13 -944 V
27 0 V
16 0 V
29 0 V
20 0 V
31 0 V
22 0 V
31 0 V
26 0 V
27 0 V
31 0 V
22 0 V
33 0 V
22 0 V
33 0 V
21 0 V
37 0 V
16 0 V
38 0 V
18 0 V
34 0 V
20 0 V
34 0 V
24 0 V
32 0 V
23 0 V
30 0 V
26 0 V
28 0 V
28 0 V
stroke
LT1
LTb
5695 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (simu)]
] -46.7 MRshow
LT1
5779 4599 M
399 0 V
854 3226 M
30 -10 V
24 -11 V
30 -2 V
25 5 V
28 6 V
28 5 V
28 3 V
29 -3 V
24 -9 V
32 -8 V
21 5 V
32 10 V
23 2 V
31 -4 V
24 -6 V
30 -4 V
26 3 V
28 8 V
30 11 V
27 -6 V
30 -13 V
24 -1 V
30 5 V
26 3 V
29 0 V
24 -1 V
31 -5 V
22 -4 V
31 -2 V
24 9 V
32 10 V
24 -1 V
31 -5 V
26 -5 V
27 -4 V
28 -3 V
25 6 V
30 10 V
27 1 V
28 -9 V
27 -3 V
28 2 V
26 0 V
32 -7 V
20 -5 V
35 3 V
19 5 V
37 -4 V
19 -7 V
39 -13 V
17 -4 V
41 -10 V
17 -9 V
36 -21 V
24 -10 V
33 -12 V
29 -18 V
31 -16 V
33 -13 V
31 -21 V
35 -27 V
32 -19 V
31 -20 V
41 -26 V
25 -20 V
45 -36 V
30 -18 V
50 -21 V
27 -26 V
56 -31 V
25 -15 V
53 -15 V
34 -5 V
52 -38 V
35 -26 V
54 -47 V
44 -24 V
58 -21 V
50 -54 V
55 -37 V
58 -43 V
55 -24 V
64 -20 V
63 -17 V
66 -9 V
68 -10 V
61 6 V
66 -1 V
65 5 V
66 9 V
66 8 V
67 -5 V
65 -10 V
63 -5 V
62 -5 V
63 -7 V
63 8 V
66 71 V
75 250 V
36 -79 V
21 549 V
16 329 V
stroke 4654 3523 M
10 159 V
3 22 V
6 -23 V
24 1 V
22 13 V
9 5 V
6 -20 V
9 -22 V
20 -16 V
17 -1 V
13 11 V
9 9 V
11 -8 V
13 -16 V
16 -10 V
15 6 V
13 8 V
11 -4 V
11 -9 V
14 0 V
15 1 V
14 -5 V
13 -4 V
11 -1 V
12 -1 V
13 -3 V
15 -3 V
13 -1 V
13 4 V
11 6 V
14 0 V
12 -3 V
15 -8 V
13 -3 V
12 -1 V
13 2 V
12 -2 V
13 -3 V
14 2 V
13 5 V
13 -4 V
14 -10 V
12 -1 V
13 9 V
14 10 V
12 -2 V
14 -10 V
11 -6 V
14 0 V
12 1 V
16 -8 V
10 -7 V
16 -7 V
10 2 V
17 11 V
10 12 V
16 6 V
11 -6 V
14 -9 V
11 -3 V
13 -9 V
13 -26 V
12 -46 V
14 -57 V
15 -74 V
13 -77 V
20 -129 V
13 -81 V
27 -142 V
16 -74 V
29 -102 V
20 -45 V
31 -36 V
22 -10 V
31 -7 V
26 -7 V
27 -5 V
31 -4 V
22 3 V
33 1 V
22 0 V
33 -3 V
21 2 V
37 3 V
16 1 V
38 -4 V
18 -5 V
34 -6 V
20 4 V
34 15 V
24 9 V
32 -9 V
23 -15 V
30 -5 V
26 6 V
28 9 V
28 4 V
27 1 V
stroke
LT2
LTb
5695 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (error)]
] -46.7 MRshow
LT2
5779 4459 M
399 0 V
884 459 M
24 22 V
30 6 V
25 -17 V
28 -19 V
28 20 V
28 11 V
29 -9 V
24 -13 V
32 30 V
21 -20 V
32 -7 V
23 11 V
31 -18 V
24 8 V
30 15 V
26 -9 V
28 -8 V
30 40 V
27 -24 V
30 -11 V
24 5 V
30 -22 V
26 7 V
29 -1 V
24 -4 V
31 12 V
22 17 V
31 6 V
24 -36 V
32 31 V
24 -1 V
31 -21 V
26 -6 V
27 19 V
28 9 V
25 -23 V
30 17 V
27 3 V
28 -29 V
27 15 V
28 -10 V
26 -1 V
32 32 V
20 18 V
35 -11 V
19 -23 V
37 16 V
19 32 V
39 52 V
17 12 V
41 42 V
17 1 V
36 -18 V
24 -29 V
33 -41 V
29 -10 V
31 -22 V
33 -42 V
31 1 V
35 11 V
32 -10 V
31 -4 V
41 -8 V
25 13 V
45 24 V
30 -9 V
50 -19 V
27 6 V
56 -16 V
25 6 V
53 77 V
34 69 V
52 -20 V
35 -17 V
54 -46 V
44 10 V
58 60 V
50 -87 V
55 -15 V
58 -30 V
55 34 V
64 42 V
63 -67 V
66 -4 V
68 40 V
61 -22 V
66 3 V
65 -19 V
66 2 V
66 32 V
67 -20 V
65 -24 V
63 21 V
62 17 V
63 30 V
63 -33 V
66 196 V
75 1001 V
36 -316 V
21 716 V
4654 771 L
10 -13 V
3 90 V
6 -91 V
24 5 V
22 52 V
9 19 V
6 -82 V
9 -88 V
20 -64 V
17 -3 V
13 44 V
9 37 V
11 -35 V
13 -63 V
16 -40 V
15 23 V
13 34 V
11 -16 V
11 -36 V
14 -1 V
15 4 V
14 -17 V
13 -20 V
11 -3 V
12 -4 V
13 -9 V
15 -15 V
13 -1 V
13 15 V
11 23 V
14 1 V
12 -11 V
15 -33 V
13 -12 V
12 -3 V
13 6 V
12 -8 V
13 -6 V
14 1 V
13 19 V
13 -12 V
14 20 V
12 7 V
13 -36 V
14 40 V
12 -7 V
14 -25 V
11 22 V
14 -1 V
12 -2 V
16 33 V
10 28 V
16 27 V
10 -7 V
17 -43 V
10 -49 V
16 -10 V
11 8 V
14 36 V
11 13 V
13 37 V
13 103 V
12 184 V
14 229 V
15 294 V
13 310 V
20 514 V
13 -18 V
27 -571 V
16 -293 V
29 -408 V
20 -182 V
31 -142 V
22 -41 V
31 -28 V
26 -29 V
27 -21 V
31 8 V
22 -9 V
33 2 V
22 0 V
33 4 V
21 -5 V
37 8 V
16 4 V
38 -14 V
18 21 V
34 24 V
20 -19 V
34 4 V
24 40 V
32 -38 V
23 -4 V
30 18 V
26 -23 V
28 -12 V
28 16 V
stroke
LTb
854 4872 N
854 448 L
5492 0 V
0 4424 V
-5492 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
