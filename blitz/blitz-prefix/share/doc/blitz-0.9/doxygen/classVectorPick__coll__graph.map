<area shape="rect" href="$classVector.html" title="{Vector\&lt; int \&gt;\n|&#45; length_\l&#45; stride_\l|+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ assertUnitStride()\l+ beginFast()\l+ beginFast()\l+ copy()\l+ data()\l+ data()\l+ isUnitStride()\l+ length()\l+ makeUnique()\l+ reference()\l+ resize()\l+ resizeAndPreserve()\l+ reverse()\l+ stride()\l+ operator _bz_VecExpr\&lt; VectorIterConst\&lt; T_numtype \&gt; \&gt;()\l+ _bz_suggestLength()\l+ _bz_hasFastAccess()\l+ _bz_fastAccess()\l+ _bz_fastAccess()\l+ _bz_assign()\l+ _bz_asVecExpr()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator[]()\l+ operator[]()\l+ operator[]()\l+ operator[]()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ getInitializationIterator()\l+ initialize()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l}" alt="" coords="5,3448,376,5208">
<area shape="rect" href="$classMemoryBlockReference.html" title="{MemoryBlockReference\&lt; int \&gt;\n|# data_\l&#45; block_\l|+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ ~MemoryBlockReference()\l# numReferences()\l# lockReferenceCount()\l# changeToNullBlock()\l# changeBlock()\l# newBlock()\l&#45; blockRemoveReference()\l&#45; addReference()\l&#45; removeReference()\l&#45; operator=()\l}" alt="" coords="35,1269,232,1573">
<area shape="rect" href="$classMemoryBlock.html" title="{MemoryBlock\&lt; T_type \&gt;\n|&#45; data_\l&#45; dataBlockAddress_\l&#45; references_\l&#45; mutexLocking_\l&#45; length_\l|# MemoryBlock()\l# MemoryBlock()\l# MemoryBlock()\l# ~MemoryBlock()\l# doLock()\l# addReference()\l# data()\l# data()\l# dataBlockAddress()\l# length()\l# removeReference()\l# references()\l# allocate()\l# deallocate()\l&#45; MemoryBlock()\l&#45; operator=()\l}" alt="" coords="247,453,412,837">
<area shape="rect" href="$classMemoryBlockReference.html" title="{MemoryBlockReference\&lt; P_type \&gt;\n|# data_\l&#45; block_\l|+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ ~MemoryBlockReference()\l# numReferences()\l# lockReferenceCount()\l# changeToNullBlock()\l# changeBlock()\l# newBlock()\l&#45; blockRemoveReference()\l&#45; addReference()\l&#45; removeReference()\l&#45; operator=()\l}" alt="" coords="337,901,561,1205">
<area shape="rect" href="$classMemoryBlockReference.html" title="{MemoryBlockReference\&lt; P_numtype \&gt;\n|# data_\l&#45; block_\l|+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ ~MemoryBlockReference()\l# numReferences()\l# lockReferenceCount()\l# changeToNullBlock()\l# changeBlock()\l# newBlock()\l&#45; blockRemoveReference()\l&#45; addReference()\l&#45; removeReference()\l&#45; operator=()\l}" alt="" coords="256,1269,507,1573">
<area shape="rect" href="$classMemoryBlockReference.html" title="{MemoryBlockReference\&lt; T_numtype \&gt;\n|# data_\l&#45; block_\l|+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ MemoryBlockReference()\l+ ~MemoryBlockReference()\l# numReferences()\l# lockReferenceCount()\l# changeToNullBlock()\l# changeBlock()\l# newBlock()\l&#45; blockRemoveReference()\l&#45; addReference()\l&#45; removeReference()\l&#45; operator=()\l}" alt="" coords="531,1269,779,1573">
<area shape="rect" href="$classMemoryBlock.html" title="{MemoryBlock\&lt; P_type \&gt;\n|&#45; data_\l&#45; dataBlockAddress_\l&#45; references_\l&#45; mutexLocking_\l&#45; length_\l|# MemoryBlock()\l# MemoryBlock()\l# MemoryBlock()\l# ~MemoryBlock()\l# doLock()\l# addReference()\l# data()\l# data()\l# dataBlockAddress()\l# length()\l# removeReference()\l# references()\l# allocate()\l# deallocate()\l&#45; MemoryBlock()\l&#45; operator=()\l}" alt="" coords="247,5,412,389">
<area shape="rect" href="$classVector.html" title="{Vector\&lt; P_numtype \&gt;\n|&#45; length_\l&#45; stride_\l|+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ assertUnitStride()\l+ beginFast()\l+ beginFast()\l+ copy()\l+ data()\l+ data()\l+ isUnitStride()\l+ length()\l+ makeUnique()\l+ reference()\l+ resize()\l+ resizeAndPreserve()\l+ reverse()\l+ stride()\l+ operator _bz_VecExpr\&lt; VectorIterConst\&lt; T_numtype \&gt; \&gt;()\l+ _bz_suggestLength()\l+ _bz_hasFastAccess()\l+ _bz_fastAccess()\l+ _bz_fastAccess()\l+ _bz_assign()\l+ _bz_asVecExpr()\l+ operator()()\l+ operator()()\l+ operator[]()\l+ operator[]()\l+ operator()()\l+ operator[]()\l+ operator()()\l+ operator[]()\l+ operator=()\l+ getInitializationIterator()\l+ initialize()\l+ operator+=()\l+ operator&#45;=()\l+ operator*=()\l+ operator/=()\l+ operator%=()\l+ operator^=()\l+ operator&amp;=()\l+ operator\|=()\l+ operator\&gt;\&gt;=()\l+ operator\&lt;\&lt;=()\l+ operator=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*=()\l+ operator/=()\l+ operator%=()\l+ operator^=()\l+ operator&amp;=()\l+ operator\|=()\l+ operator\&gt;\&gt;=()\l+ operator\&lt;\&lt;=()\l+ operator=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*=()\l+ operator/=()\l+ operator%=()\l+ operator^=()\l+ operator&amp;=()\l+ operator\|=()\l+ operator\&gt;\&gt;=()\l+ operator\&lt;\&lt;=()\l+ operator=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*=()\l+ operator/=()\l+ operator%=()\l+ operator^=()\l+ operator&amp;=()\l+ operator\|=()\l+ operator\&gt;\&gt;=()\l+ operator\&lt;\&lt;=()\l+ operator=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*=()\l+ operator/=()\l+ operator%=()\l+ operator^=()\l+ operator&amp;=()\l+ operator\|=()\l+ operator\&gt;\&gt;=()\l+ operator\&lt;\&lt;=()\l+ operator=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*=()\l+ operator/=()\l+ operator%=()\l+ operator^=()\l+ operator&amp;=()\l+ operator\|=()\l}" alt="" coords="196,1624,567,3384">
<area shape="rect" href="$classVector.html" title="{Vector\&lt; T_numtype \&gt;\n|&#45; length_\l&#45; stride_\l|+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ assertUnitStride()\l+ beginFast()\l+ beginFast()\l+ copy()\l+ data()\l+ data()\l+ isUnitStride()\l+ length()\l+ makeUnique()\l+ reference()\l+ resize()\l+ resizeAndPreserve()\l+ reverse()\l+ stride()\l+ operator _bz_VecExpr\&lt; VectorIterConst\&lt; T_numtype \&gt; \&gt;()\l+ _bz_suggestLength()\l+ _bz_hasFastAccess()\l+ _bz_fastAccess()\l+ _bz_fastAccess()\l+ _bz_assign()\l+ _bz_asVecExpr()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator[]()\l+ operator[]()\l+ operator[]()\l+ operator[]()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ getInitializationIterator()\l+ initialize()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator&#45;=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator*=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator/=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator%=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator^=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator&amp;=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\|=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&gt;\&gt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l+ operator\&lt;\&lt;=()\l}" alt="" coords="400,3448,771,5208">
